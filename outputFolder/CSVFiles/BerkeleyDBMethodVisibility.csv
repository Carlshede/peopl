no;methodName;statements;involvedModules;fragments;visibility;baseSplit;fineGrained;nested;
1;reset():void;58;2;2;visible;
2;getBufferBytes():long;2;1;1;visible;
3;getCursorsBins():int;2;1;1;visible;
4;getDbClosedBins():int;2;1;1;visible;
5;getInCompQueueSize():int;2;1;1;visible;
6;getLastCheckpointId():long;2;1;1;visible;
7;getNCacheMiss():long;2;1;1;visible;
8;getNCheckpoints():int;2;1;1;visible;
9;getCleanerBacklog():int;2;1;1;visible;
10;getNCleanerRuns():int;2;1;1;visible;
11;getNCleanerDeletions():int;2;1;1;visible;
12;getNDeltaINFlush():int;2;1;1;visible;
13;getLastCheckpointEnd():long;2;1;1;visible;
14;getLastCheckpointStart():long;2;1;1;visible;
15;getNCleanerEntriesRead():int;2;1;1;visible;
16;getNEvictPasses():int;2;1;1;visible;
17;getNFSyncs():long;2;1;2;visible;
18;getNFSyncRequests():long;2;1;2;visible;
19;getNFSyncTimeouts():long;2;1;2;visible;
20;getNFullINFlush():int;2;1;1;visible;
21;getNFullBINFlush():int;2;1;1;visible;
22;getNINsObsolete():int;2;1;1;visible;
23;getNINsCleaned():int;2;1;1;visible;
24;getNINsDead():int;2;1;1;visible;
25;getNINsMigrated():int;2;1;1;visible;
26;getNLNsObsolete():int;2;1;1;visible;
27;getNLNsCleaned():int;2;1;1;visible;
28;getNLNsDead():int;2;1;1;visible;
29;getNLNsLocked():int;2;1;1;visible;
30;getNLNsMigrated():int;2;1;1;visible;
31;getNLNsMarked():int;2;1;1;visible;
32;getNLNQueueHits():int;2;1;1;visible;
33;getNPendingLNsProcessed():int;2;1;1;visible;
34;getNMarkedLNsProcessed():int;2;1;1;visible;
35;getNToBeCleanedLNsProcessed():int;2;1;1;visible;
36;getNClusterLNsProcessed():int;2;1;1;visible;
37;getNPendingLNsLocked():int;2;1;1;visible;
38;getNLogBuffers():int;2;1;1;visible;
39;getNNodesExplicitlyEvicted():long;2;1;1;visible;
40;getNBINsStripped():long;2;1;1;visible;
41;getRequiredEvictBytes():long;2;1;1;visible;
42;getNNodesScanned():long;2;1;1;visible;
43;getNNodesSelected():long;2;1;1;visible;
44;getCacheTotalBytes():long;2;1;1;visible;
45;getCacheDataBytes():long;2;1;1;visible;
46;getNNotResident():long;2;1;1;visible;
47;getNonEmptyBins():int;2;1;1;visible;
48;getProcessedBins():int;2;1;1;visible;
49;getNRepeatFaultReads():long;2;1;1;visible;
50;getNTempBufferWrites():long;2;1;1;visible;
51;getNRepeatIteratorReads():long;2;1;1;visible;
52;getSplitBins():int;2;1;1;visible;
53;setCacheDataBytes(long):void;2;1;1;visible;
54;setNNotResident(long):void;2;1;1;visible;
55;setNCacheMiss(long):void;2;1;1;visible;
56;setNLogBuffers(int):void;2;1;1;visible;
57;setBufferBytes(long):void;2;1;1;visible;
58;setCursorsBins(int):void;2;1;1;visible;
59;setDbClosedBins(int):void;2;1;1;visible;
60;setInCompQueueSize(int):void;2;1;1;visible;
61;setLastCheckpointId(long):void;2;1;1;visible;
62;setNCheckpoints(int):void;2;1;1;visible;
63;setCleanerBacklog(int):void;2;1;1;visible;
64;setNCleanerRuns(int):void;2;1;1;visible;
65;setNCleanerDeletions(int):void;2;1;1;visible;
66;setNDeltaINFlush(int):void;2;1;1;visible;
67;setLastCheckpointEnd(long):void;2;1;1;visible;
68;setLastCheckpointStart(long):void;2;1;1;visible;
69;setNCleanerEntriesRead(int):void;2;1;1;visible;
70;setNEvictPasses(int):void;2;1;1;visible;
71;setNFSyncs(long):void;2;1;2;visible;
72;setNFSyncRequests(long):void;2;1;2;visible;
73;setNFSyncTimeouts(long):void;2;1;2;visible;
74;setNFullINFlush(int):void;2;1;1;visible;
75;setNFullBINFlush(int):void;2;1;1;visible;
76;setNINsObsolete(int):void;2;1;1;visible;
77;setNINsCleaned(int):void;2;1;1;visible;
78;setNINsDead(int):void;2;1;1;visible;
79;setNINsMigrated(int):void;2;1;1;visible;
80;setNLNsObsolete(int):void;2;1;1;visible;
81;setNLNsCleaned(int):void;2;1;1;visible;
82;setNLNsDead(int):void;2;1;1;visible;
83;setNLNsLocked(int):void;2;1;1;visible;
84;setNLNsMigrated(int):void;2;1;1;visible;
85;setNLNsMarked(int):void;2;1;1;visible;
86;setNLNQueueHits(int):void;2;1;1;visible;
87;setNPendingLNsProcessed(int):void;2;1;1;visible;
88;setNMarkedLNsProcessed(int):void;2;1;1;visible;
89;setNToBeCleanedLNsProcessed(int):void;2;1;1;visible;
90;setNClusterLNsProcessed(int):void;2;1;1;visible;
91;setNPendingLNsLocked(int):void;2;1;1;visible;
92;setNNodesExplicitlyEvicted(long):void;2;1;1;visible;
93;setRequiredEvictBytes(long):void;2;1;1;visible;
94;setNBINsStripped(long):void;2;1;1;visible;
95;setNNodesScanned(long):void;2;1;1;visible;
96;setNNodesSelected(long):void;2;1;1;visible;
97;setNonEmptyBins(int):void;2;1;1;visible;
98;setProcessedBins(int):void;2;1;1;visible;
99;setNRepeatFaultReads(long):void;2;1;1;visible;
100;setNTempBufferWrites(long):void;2;1;1;visible;
101;setNRepeatIteratorReads(long):void;2;1;1;visible;
102;setSplitBins(int):void;2;1;1;visible;
103;toString():string;61;2;3;invisible;1;0;0;
104;getBottomInternalNodeCount():long;2;1;1;visible;
105;setBottomInternalNodeCount(long):void;2;1;1;visible;
106;getDuplicateBottomInternalNodeCount():long;2;1;1;visible;
107;setDuplicateBottomInternalNodeCount(long):void;2;1;1;visible;
108;getDeletedLeafNodeCount():long;2;1;1;visible;
109;setDeletedLeafNodeCount(long):void;2;1;1;visible;
110;getDupCountLeafNodeCount():long;2;1;1;visible;
111;setDupCountLeafNodeCount(long):void;2;1;1;visible;
112;getInternalNodeCount():long;2;1;1;visible;
113;setInternalNodeCount(long):void;2;1;1;visible;
114;getDuplicateInternalNodeCount():long;2;1;1;visible;
115;setDuplicateInternalNodeCount(long):void;2;1;1;visible;
116;getLeafNodeCount():long;2;1;1;visible;
117;setLeafNodeCount(long):void;2;1;1;visible;
118;getMainTreeMaxDepth():int;2;1;1;visible;
119;setMainTreeMaxDepth(int):void;2;1;1;visible;
120;getDuplicateTreeMaxDepth():int;2;1;1;visible;
121;setDuplicateTreeMaxDepth(int):void;2;1;1;visible;
122;getINsByLevel():long[];2;1;1;visible;
123;setINsByLevel(long[]):void;2;1;1;visible;
124;getBINsByLevel():long[];2;1;1;visible;
125;setBINsByLevel(long[]):void;2;1;1;visible;
126;getDINsByLevel():long[];2;1;1;visible;
127;setDINsByLevel(long[]):void;2;1;1;visible;
128;getDBINsByLevel():long[];2;1;1;visible;
129;setDBINsByLevel(long[]):void;2;1;1;visible;
130;arrayToString(long[],StringBuffer):void;6;1;1;visible;
131;toString():string;24;1;1;visible;
132;close():void;2;1;1;visible;
133;get(Transaction,int):long;90;4;8;invisible;1;0;0;
134;getDatabase():Database;2;1;1;visible;
135;getKey():DatabaseEntry;2;1;1;visible;
136;getStats(StatsConfig):SequenceStats;16;1;2;visible;
137;readDataRequired(Cursor,LockMode):void;3;1;1;visible;
138;readData(Cursor,LockMode):boolean;17;1;1;visible;
139;makeData():DatabaseEntry;16;1;1;visible;
140;copyEntry(DatabaseEntry):DatabaseEntry;9;1;1;visible;
141;setMaxBytes(long):void;2;1;1;visible;
142;getMaxBytes():long;2;1;1;visible;
143;setMaxMillisecs(long):void;2;1;1;visible;
144;getMaxMillisecs():long;2;1;1;visible;
145;setLoadLNs(boolean):void;2;1;1;visible;
146;getLoadLNs():boolean;2;1;1;visible;
147;cloneConfig():DatabaseConfig;4;1;1;visible;
148;toString():string;2;1;1;visible;
149;toString():string;9;1;1;visible;
150;getData():byte[];2;1;1;visible;
151;setData(byte[]):void;4;1;1;visible;
152;setData(byte[],int,int):void;4;1;1;visible;
153;setPartial(int,int,boolean):void;4;1;1;visible;
154;getPartialLength():int;2;1;1;visible;
155;setPartialLength(int):void;2;1;1;visible;
156;getPartialOffset():int;2;1;1;visible;
157;setPartialOffset(int):void;2;1;1;visible;
158;getPartial():boolean;2;1;1;visible;
159;setPartial(boolean):void;2;1;1;visible;
160;getOffset():int;2;1;1;visible;
161;setOffset(int):void;2;1;1;visible;
162;getSize():int;2;1;1;visible;
163;setSize(int):void;2;1;1;visible;
164;dumpData():string;2;1;1;visible;
165;equals(Object):boolean;17;1;1;visible;
166;hashCode():int;6;1;1;visible;
167;setTxnNoSync(boolean):void;2;1;1;visible;
168;getTxnNoSync():boolean;2;1;1;visible;
169;setTxnWriteNoSync(boolean):void;2;1;1;visible;
170;getTxnWriteNoSync():boolean;2;1;1;visible;
171;setCacheSize(long):void;2;1;1;visible;
172;getCacheSize():long;4;1;1;visible;
173;setCachePercent(int):void;2;1;1;visible;
174;getCachePercent():int;5;1;1;visible;
175;setConfigParam(string,string):void;9;1;1;visible;
176;getConfigParam(string):string;6;1;1;visible;
177;getVal(ConfigParam):string;5;1;1;visible;
178;setVal(ConfigParam,string):void;4;1;1;visible;
179;setValidateParams(boolean):void;2;1;1;visible;
180;validateProperties(Properties):void;11;1;1;visible;
181;checkImmutablePropsForEquality(EnvironmentMutableConfig):void;12;1;1;visible;
182;clone():Object;4;1;1;visible;
183;cloneMutableConfig():EnvironmentMutableConfig;7;1;1;visible;
184;copyHandlePropsTo(EnvironmentMutableConfig):void;3;1;1;visible;
185;copyMutablePropsTo(EnvironmentMutableConfig):void;10;1;1;visible;
186;fillInEnvironmentGeneratedProps(EnvironmentImpl):void;2;1;1;visible;
187;clearImmutableProps():void;8;1;1;visible;
188;setLoadPropertyFile(boolean):void;2;1;1;visible;
189;getLoadPropertyFile():boolean;2;1;1;visible;
190;getNumExplicitlySetParams():int;2;1;1;visible;
191;toString():string;2;1;1;visible;
192;setAllowCreate(boolean):void;2;1;1;visible;
193;getAllowCreate():boolean;2;1;1;visible;
194;setLockTimeout(long):void;2;1;1;visible;
195;getLockTimeout():long;7;1;1;visible;
196;setReadOnly(boolean):void;2;1;1;visible;
197;getReadOnly():boolean;3;1;1;visible;
198;setTransactional(boolean):void;2;1;2;visible;
199;getTransactional():boolean;3;1;2;visible;
200;setLocking(boolean):void;2;1;1;visible;
201;getLocking():boolean;3;1;1;visible;
202;setTxnTimeout(long):void;2;1;1;visible;
203;getTxnTimeout():long;7;1;1;visible;
204;setTxnSerializableIsolation(boolean):void;2;1;1;visible;
205;getTxnSerializableIsolation():boolean;3;1;1;visible;
206;setTxnReadCommitted(boolean):void;2;1;1;visible;
207;getTxnReadCommitted():boolean;2;1;1;visible;
208;setConfigParam(string,string):void;7;1;1;visible;
209;setCreateUP(boolean):void;2;1;1;visible;
210;getCreateUP():boolean;2;1;1;visible;
211;setCheckpointUP(boolean):void;2;1;1;visible;
212;getCheckpointUP():boolean;2;1;1;visible;
213;cloneConfig():EnvironmentConfig;4;1;1;visible;
214;toString():string;2;1;1;visible;
215;getNOwners():int;2;1;1;visible;
216;getNReadLocks():int;2;1;1;visible;
217;getNTotalLocks():int;2;1;1;visible;
218;getNWaiters():int;2;1;1;visible;
219;getNWriteLocks():int;2;1;1;visible;
220;getNRequests():long;2;1;1;visible;
221;getNWaits():long;2;1;1;visible;
222;setNOwners(int):void;2;1;1;visible;
223;setNReadLocks(int):void;2;1;1;visible;
224;accumulateNTotalLocks(int):void;2;1;1;visible;
225;setNWaiters(int):void;2;1;1;visible;
226;setNWriteLocks(int):void;2;1;1;visible;
227;setNRequests(long):void;2;1;1;visible;
228;setNWaits(long):void;2;1;1;visible;
229;accumulateLockTableLatchStats(LatchStats):void;11;1;2;visible;
230;toString():string;13;2;3;invisible;1;0;0;
231;setReadUncommitted(boolean):void;2;1;1;visible;
232;getReadUncommitted():boolean;2;1;1;visible;
233;setDirtyRead(boolean):void;2;1;1;visible;
234;getDirtyRead():boolean;2;1;1;visible;
235;setReadCommitted(boolean):void;2;1;1;visible;
236;getReadCommitted():boolean;2;1;1;visible;
237;cloneConfig():CursorConfig;4;1;1;visible;
238;toString():string;2;1;1;visible;
239;setSync(boolean):void;2;1;1;visible;
240;getSync():boolean;2;1;1;visible;
241;setNoSync(boolean):void;2;1;1;visible;
242;getNoSync():boolean;2;1;1;visible;
243;setWriteNoSync(boolean):void;2;1;1;visible;
244;getWriteNoSync():boolean;2;1;1;visible;
245;setNoWait(boolean):void;2;1;1;visible;
246;getNoWait():boolean;2;1;1;visible;
247;setReadUncommitted(boolean):void;2;1;1;visible;
248;getReadUncommitted():boolean;2;1;1;visible;
249;setDirtyRead(boolean):void;2;1;1;visible;
250;getDirtyRead():boolean;2;1;1;visible;
251;setReadCommitted(boolean):void;2;1;1;visible;
252;getReadCommitted():boolean;2;1;1;visible;
253;setSerializableIsolation(boolean):void;2;1;1;visible;
254;getSerializableIsolation():boolean;2;1;1;visible;
255;cloneConfig():TransactionConfig;4;1;1;visible;
256;getPrimaryDatabase():Database;2;1;1;visible;
257;dup(boolean):Cursor;3;1;1;visible;
258;dupSecondary(boolean):SecondaryCursor;2;1;1;visible;
259;delete():OperationStatus;14;2;3;invisible;1;0;0;
260;put(DatabaseEntry,DatabaseEntry):OperationStatus;2;1;1;visible;
261;putNoOverwrite(DatabaseEntry,DatabaseEntry):OperationStatus;2;1;1;visible;
262;putNoDupData(DatabaseEntry,DatabaseEntry):OperationStatus;2;1;1;visible;
263;putCurrent(DatabaseEntry):OperationStatus;2;1;1;visible;
264;getCurrent(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;1;1;visible;
265;getCurrent(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;7;2;3;invisible;1;0;0;
266;getFirst(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;1;1;visible;
267;getFirst(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;7;2;3;invisible;1;0;0;
268;getLast(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;1;1;visible;
269;getLast(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;7;2;3;invisible;1;0;0;
270;getNext(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;1;1;visible;
271;getNext(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;10;2;3;invisible;1;0;0;
272;getNextDup(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;1;1;visible;
273;getNextDup(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;7;2;3;invisible;1;0;0;
274;getNextNoDup(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;1;1;visible;
275;getNextNoDup(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;10;2;3;invisible;1;0;0;
276;getPrev(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;1;1;visible;
277;getPrev(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;10;2;3;invisible;1;0;0;
278;getPrevDup(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;1;1;visible;
279;getPrevDup(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;7;2;3;invisible;1;0;0;
280;getPrevNoDup(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;1;1;visible;
281;getPrevNoDup(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;10;2;3;invisible;1;0;0;
282;getSearchKey(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;1;1;visible;
283;getSearchKey(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;9;2;3;invisible;1;0;0;
284;getSearchKeyRange(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;1;1;visible;
285;getSearchKeyRange(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;9;2;3;invisible;1;0;0;
286;getSearchBoth(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;1;1;visible;
287;getSearchBoth(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;9;2;3;invisible;1;0;0;
288;getSearchBothRange(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;1;1;visible;
289;getSearchBothRange(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;9;2;3;invisible;1;0;0;
290;getCurrentInternal(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;7;1;1;visible;
291;search(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode,SearchMode):OperationStatus;9;1;1;visible;
292;position(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode,boolean):OperationStatus;9;1;1;visible;
293;retrieveNext(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode,GetMode):OperationStatus;9;1;1;visible;
294;readPrimaryAfterGet(DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;44;1;1;visible;
295;checkArgsNoValRequired(DatabaseEntry,DatabaseEntry,DatabaseEntry):void;4;1;1;visible;
296;abort():void;7;1;1;visible;
297;getId():long;2;1;1;visible;
298;commit():void;6;1;1;visible;
299;commitSync():void;2;1;1;visible;
300;commitNoSync():void;2;1;1;visible;
301;commitWriteNoSync():void;2;1;1;visible;
302;doCommit(byte):void;6;1;1;visible;
303;setTxnTimeout(long):void;3;1;1;visible;
304;setLockTimeout(long):void;3;1;1;visible;
305;setName(string):void;2;1;1;visible;
306;getName():string;2;1;1;visible;
307;hashCode():int;2;1;1;visible;
308;equals(Object):boolean;8;1;1;visible;
309;toString():string;9;1;1;visible;
310;getLocker():Locker;5;1;1;visible;
311;getTxn():Txn;2;1;1;visible;
312;checkEnv():void;2;1;1;visible;
313;getNGets():int;2;1;1;visible;
314;getNCachedGets():int;2;1;1;visible;
315;getCurrent():long;2;1;1;visible;
316;getValue():long;2;1;1;visible;
317;getLastValue():long;2;1;1;visible;
318;getMin():long;2;1;1;visible;
319;getMax():long;2;1;1;visible;
320;getCacheSize():int;2;1;1;visible;
321;toString():string;2;1;1;visible;
322;toString():string;2;1;1;visible;
323;setFast(boolean):void;2;1;1;visible;
324;getFast():boolean;2;1;1;visible;
325;setClear(boolean):void;2;1;1;visible;
326;getClear():boolean;2;1;1;visible;
327;setShowProgressStream(PrintStream):void;2;1;1;visible;
328;getShowProgressStream():PrintStream;2;1;1;visible;
329;setShowProgressInterval(int):void;2;1;1;visible;
330;getShowProgressInterval():int;2;1;1;visible;
331;reset():void;8;1;1;visible;
332;getNINsLoaded():int;2;1;1;visible;
333;getNBINsLoaded():int;2;1;1;visible;
334;getNLNsLoaded():int;2;1;1;visible;
335;getNDINsLoaded():int;2;1;1;visible;
336;getNDBINsLoaded():int;2;1;1;visible;
337;getNDupCountLNsLoaded():int;2;1;1;visible;
338;getStatus():PreloadStatus;2;1;1;visible;
339;setNINsLoaded(int):void;2;1;1;visible;
340;setNBINsLoaded(int):void;2;1;1;visible;
341;setNLNsLoaded(int):void;2;1;1;visible;
342;setNDINsLoaded(int):void;2;1;1;visible;
343;setNDBINsLoaded(int):void;2;1;1;visible;
344;setNDupCountLNsLoaded(int):void;2;1;1;visible;
345;setStatus(PreloadStatus):void;2;1;1;visible;
346;toString():string;10;1;1;visible;
348;close():void;4;1;1;visible;
349;close(DatabaseException):void;16;1;1;visible;
350;getSortedCursors():Cursor[];2;1;1;visible;
351;getDatabase():Database;2;1;1;visible;
352;getConfig():JoinConfig;2;1;1;visible;
353;getNext(DatabaseEntry,LockMode):OperationStatus;7;2;3;invisible;1;0;0;
354;getNext(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;8;2;3;invisible;1;0;0;
355;retrieveNext(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;38;1;1;visible;
356;setAllowCreate(boolean):void;2;1;1;visible;
357;getAllowCreate():boolean;2;1;1;visible;
358;setCacheSize(int):void;2;1;1;visible;
359;getCacheSize():int;2;1;1;visible;
360;setDecrement(boolean):void;2;1;1;visible;
361;getDecrement():boolean;2;1;1;visible;
362;setExclusiveCreate(boolean):void;2;1;1;visible;
363;getExclusiveCreate():boolean;2;1;1;visible;
364;setInitialValue(long):void;2;1;1;visible;
365;getInitialValue():long;2;1;1;visible;
366;setAutoCommitNoSync(boolean):void;2;1;2;visible;
367;getAutoCommitNoSync():boolean;2;1;2;visible;
368;setRange(long,long):void;3;1;1;visible;
369;getRangeMin():long;2;1;1;visible;
370;getRangeMax():long;2;1;1;visible;
371;setWrap(boolean):void;2;1;1;visible;
372;getWrap():boolean;2;1;1;visible;
373;getXATransaction(Xid):Transaction;6;1;1;visible;
374;setXATransaction(Xid,Transaction):void;2;1;1;visible;
375;commit(Xid,boolean):void;18;1;1;visible;
376;end(Xid,int):void;23;1;1;visible;
377;forget(Xid):void;4;1;1;visible;
378;isSameRM(XAResource):boolean;11;1;1;visible;
379;prepare(Xid):int;15;1;1;visible;
380;recover(int):Xid[];19;1;1;visible;
381;rollback(Xid):void;13;1;1;visible;
382;getTransactionTimeout():int;6;1;1;visible;
383;setTransactionTimeout(int):boolean;2;1;1;visible;
384;start(Xid,int):void;40;1;1;visible;
385;throwNewXAException(Exception):void;4;1;1;visible;
386;toString():string;2;1;1;visible;
387;init(Database,DatabaseImpl,Locker,boolean,CursorConfig):void;21;3;4;invisible;1;0;0;
388;getCursorImpl():CursorImpl;2;1;1;visible;
389;getDatabase():Database;2;1;1;visible;
390;getDatabaseImpl():DatabaseImpl;2;1;1;visible;
391;getConfig():CursorConfig;2;1;1;visible;
392;setNonCloning(boolean):void;2;1;1;visible;
393;close():void;5;1;1;visible;
394;count():int;7;1;1;visible;
395;dup(boolean):Cursor;3;1;1;visible;
396;delete():OperationStatus;7;2;3;invisible;1;0;0;
397;put(DatabaseEntry,DatabaseEntry):OperationStatus;10;2;3;invisible;1;0;0;
398;putNoOverwrite(DatabaseEntry,DatabaseEntry):OperationStatus;10;2;3;invisible;1;0;0;
399;putNoDupData(DatabaseEntry,DatabaseEntry):OperationStatus;10;2;3;invisible;1;0;0;
400;putCurrent(DatabaseEntry):OperationStatus;8;2;3;invisible;1;0;0;
401;getCurrent(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;7;2;3;invisible;1;0;0;
402;getFirst(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;7;2;3;invisible;1;0;0;
403;getLast(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;7;2;3;invisible;1;0;0;
404;getNext(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;10;2;3;invisible;1;0;0;
405;getNextDup(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;7;2;3;invisible;1;0;0;
406;getNextNoDup(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;10;2;3;invisible;1;0;0;
407;getPrev(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;10;2;3;invisible;1;0;0;
408;getPrevDup(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;7;2;3;invisible;1;0;0;
409;getPrevNoDup(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;10;2;3;invisible;1;0;0;
410;getSearchKey(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;8;2;3;invisible;1;0;0;
411;getSearchKeyRange(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;8;2;3;invisible;1;0;0;
412;getSearchBoth(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;7;2;3;invisible;1;0;0;
413;getSearchBothRange(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;7;2;3;invisible;1;0;0;
414;countInternal(LockMode):int;12;1;1;visible;
415;deleteInternal():OperationStatus;19;1;1;visible;
416;deleteNoNotify():OperationStatus;29;2;3;invisible;0;0;1;
417;putInternal(DatabaseEntry,DatabaseEntry,PutMode):OperationStatus;17;1;1;visible;
418;putNoNotify(DatabaseEntry,DatabaseEntry,PutMode,DatabaseEntry):OperationStatus;18;2;2;invisible;0;0;1;
419;putAllowPhantoms(DatabaseEntry,DatabaseEntry,PutMode,DatabaseEntry,CursorImpl):OperationStatus;44;2;2;invisible;0;0;1;
420;position(DatabaseEntry,DatabaseEntry,LockMode,boolean):OperationStatus;18;1;1;visible;
421;positionAllowPhantoms(DatabaseEntry,DatabaseEntry,LockType,boolean):OperationStatus;33;2;4;invisible;0;0;1;
422;search(DatabaseEntry,DatabaseEntry,LockMode,SearchMode):OperationStatus;31;1;1;visible;
423;searchExactAndRangeLock(DatabaseEntry,DatabaseEntry,LockType,LockType,SearchMode):KeyChangeStatus;23;1;1;visible;
424;searchAllowPhantoms(DatabaseEntry,DatabaseEntry,LockType,LockType,SearchMode):KeyChangeStatus;10;1;1;visible;
425;searchInternal(CursorImpl,DatabaseEntry,DatabaseEntry,LockType,LockType,SearchMode,boolean):KeyChangeStatus;126;2;4;invisible;1;0;0;
426;retrieveNext(DatabaseEntry,DatabaseEntry,LockMode,GetMode):OperationStatus;23;1;1;visible;
427;getNextDupAndRangeLock(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;39;2;3;invisible;0;0;1;
428;rangeLockCurrentPosition(GetMode):void;31;2;3;invisible;0;0;1;
429;retrieveNextAllowPhantoms(DatabaseEntry,DatabaseEntry,LockType,GetMode):OperationStatus;27;2;2;invisible;0;0;1;
430;getCurrentInternal(DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;4;1;1;visible;
431;checkForInsertion(GetMode,CursorImpl,CursorImpl):boolean;79;2;5;invisible;0;0;1;
432;beginRead(boolean):CursorImpl;7;1;1;visible;
433;endRead(CursorImpl,boolean):void;10;1;1;visible;
434;advanceCursor(DatabaseEntry,DatabaseEntry):boolean;2;1;1;visible;
435;getLockType(LockMode,boolean):LockType;9;1;1;visible;
436;isReadUncommittedMode(LockMode):boolean;2;1;1;visible;
437;isSerializableIsolation(LockMode):boolean;2;1;1;visible;
438;checkUpdatesAllowed(string):void;3;1;1;visible;
439;checkArgsNoValRequired(DatabaseEntry,DatabaseEntry):void;3;1;1;visible;
440;checkArgsValRequired(DatabaseEntry,DatabaseEntry):void;3;1;1;visible;
441;checkState(boolean):void;3;1;1;visible;
442;checkEnv():void;2;1;1;visible;
443;trace(Level,string,DatabaseEntry,DatabaseEntry,LockMode):void;15;2;3;visible;
444;trace(Level,string,LockMode):void;11;2;3;visible;
445;traceCursorImpl(StringBuffer):void;8;1;1;visible;
446;setKeyCreator(SecondaryKeyCreator):void;2;1;1;visible;
447;getKeyCreator():SecondaryKeyCreator;2;1;1;visible;
448;setMultiKeyCreator(SecondaryMultiKeyCreator):void;2;1;1;visible;
449;getMultiKeyCreator():SecondaryMultiKeyCreator;2;1;1;visible;
450;setAllowPopulate(boolean):void;2;1;1;visible;
451;getAllowPopulate():boolean;2;1;1;visible;
452;setForeignKeyDatabase(Database):void;2;1;1;visible;
453;getForeignKeyDatabase():Database;2;1;1;visible;
454;setForeignKeyDeleteAction(ForeignKeyDeleteAction):void;3;1;1;visible;
455;getForeignKeyDeleteAction():ForeignKeyDeleteAction;2;1;1;visible;
456;setForeignKeyNullifier(ForeignKeyNullifier):void;2;1;1;visible;
457;getForeignKeyNullifier():ForeignKeyNullifier;2;1;1;visible;
458;setForeignMultiKeyNullifier(ForeignMultiKeyNullifier):void;2;1;1;visible;
459;getForeignMultiKeyNullifier():ForeignMultiKeyNullifier;2;1;1;visible;
460;setImmutableSecondaryKey(boolean):void;2;1;1;visible;
461;getImmutableSecondaryKey():boolean;2;1;1;visible;
462;validate(DatabaseConfig):void;16;1;1;visible;
463;equalOrBothNull(Object,Object):boolean;2;1;1;visible;
464;genSecondaryConfigMismatchMessage(DatabaseConfig,boolean,boolean,boolean,boolean,boolean,boolean,boolean):string;17;1;1;visible;
465;setKBytes(int):void;2;1;2;visible;
466;getKBytes():int;2;1;2;visible;
467;setMinutes(int):void;2;1;2;visible;
468;getMinutes():int;2;1;2;visible;
469;setForce(boolean):void;2;1;1;visible;
470;getForce():boolean;2;1;1;visible;
471;setMinimizeRecoveryTime(boolean):void;2;1;1;visible;
472;getMinimizeRecoveryTime():boolean;2;1;1;visible;
473;getDb():SecondaryDatabase;2;1;1;visible;
474;triggerAdded(Database):void;1;1;1;visible;
475;triggerRemoved(Database):void;2;1;1;visible;
476;databaseUpdated(Database,Locker,DatabaseEntry,DatabaseEntry,DatabaseEntry):void;2;1;1;visible;
477;initNew(Environment,Locker,string,DatabaseConfig):void;3;1;1;visible;
478;initExisting(Environment,Locker,DatabaseImpl,DatabaseConfig):void;7;1;1;visible;
479;init(Locker):void;31;2;2;visible;
480;close():void;7;1;1;visible;
481;clearPrimary():void;3;1;1;visible;
482;clearForeignKeyTrigger():void;2;1;1;visible;
483;getPrimaryDatabase():Database;2;1;1;visible;
484;getSecondaryConfig():SecondaryConfig;2;1;1;visible;
485;getPrivateSecondaryConfig():SecondaryConfig;2;1;1;visible;
486;openSecondaryCursor(Transaction,CursorConfig):SecondaryCursor;2;2;3;invisible;0;1;0;
487;newDbcInstance(Transaction,CursorConfig):Cursor;2;2;3;invisible;0;1;0;
488;delete(Transaction,DatabaseEntry):OperationStatus;24;3;7;invisible;1;0;0;
489;get(Transaction,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;2;3;invisible;0;1;0;
490;get(Transaction,DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;19;3;6;invisible;1;0;0;
491;getSearchBoth(Transaction,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;2;2;visible;
492;getSearchBoth(Transaction,DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;19;3;6;invisible;1;0;0;
493;put(Transaction,DatabaseEntry,DatabaseEntry):OperationStatus;2;2;2;visible;
494;putNoOverwrite(Transaction,DatabaseEntry,DatabaseEntry):OperationStatus;2;2;2;visible;
495;putNoDupData(Transaction,DatabaseEntry,DatabaseEntry):OperationStatus;2;2;2;visible;
496;join(Cursor[],JoinConfig):JoinCursor;2;1;1;visible;
497;truncate(Transaction,boolean):int;2;2;2;visible;
498;updateSecondary(Locker,Cursor,DatabaseEntry,DatabaseEntry,DatabaseEntry):void;69;1;1;visible;
499;deleteKey(Cursor,DatabaseEntry,DatabaseEntry):void;6;1;1;visible;
500;insertKey(Locker,Cursor,DatabaseEntry,DatabaseEntry):void;21;1;1;visible;
501;onForeignKeyDelete(Locker,DatabaseEntry):void;57;1;1;visible;
502;secondaryCorruptException():DatabaseException;2;1;1;visible;
503;trace(Level,string):void;11;2;3;visible;
504;toString():string;2;1;1;visible;
505;initNew(Environment,Locker,string,DatabaseConfig):void;8;1;1;visible;
506;initExisting(Environment,Locker,DatabaseImpl,DatabaseConfig):void;12;2;2;visible;
507;init(Environment,DatabaseConfig):void;6;1;1;visible;
508;validateConfigAgainstExistingDb(DatabaseConfig,DatabaseImpl):void;22;2;3;invisible;0;0;1;
509;close():void;33;2;3;invisible;1;0;0;
510;openSequence(Transaction,DatabaseEntry,SequenceConfig):Sequence;7;2;4;invisible;0;1;0;
511;removeSequence(Transaction,DatabaseEntry):void;2;2;3;invisible;0;1;0;
512;openCursor(Transaction,CursorConfig):Cursor;11;3;6;invisible;1;0;0;
513;newDbcInstance(Transaction,CursorConfig):Cursor;2;2;3;invisible;0;1;0;
514;delete(Transaction,DatabaseEntry):OperationStatus;16;3;7;invisible;1;0;0;
515;deleteInternal(Locker,DatabaseEntry):OperationStatus;30;1;1;visible;
516;get(Transaction,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;19;3;6;invisible;1;0;0;
517;getSearchBoth(Transaction,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;19;3;6;invisible;1;0;0;
518;put(Transaction,DatabaseEntry,DatabaseEntry):OperationStatus;11;3;6;invisible;1;0;0;
519;putNoOverwrite(Transaction,DatabaseEntry,DatabaseEntry):OperationStatus;11;3;6;invisible;1;0;0;
520;putNoDupData(Transaction,DatabaseEntry,DatabaseEntry):OperationStatus;11;3;6;invisible;1;0;0;
521;putInternal(Transaction,DatabaseEntry,DatabaseEntry,PutMode):OperationStatus;14;2;4;invisible;0;1;0;
522;join(Cursor[],JoinConfig):JoinCursor;31;2;5;invisible;1;0;0;
523;truncate(Transaction,boolean):int;35;4;12;invisible;1;0;0;
524;truncateInternal(Locker,boolean):int;24;2;4;invisible;1;0;0;
525;preload(long):void;9;2;3;invisible;1;0;0;
526;preload(long,long):void;10;2;3;invisible;1;0;0;
527;preload(PreloadConfig):void;10;3;6;invisible;1;0;0;
528;getStats(StatsConfig):DatabaseStats;9;2;3;invisible;0;0;1;
529;verify(VerifyConfig):DatabaseStats;10;2;4;invisible;1;0;0;
530;getDatabaseName():string;6;1;1;visible;
531;getDebugName():string;5;1;1;visible;
532;getConfig():DatabaseConfig;9;1;1;visible;
533;isTransactional():boolean;2;1;2;visible;
534;getEnvironment():Environment;2;1;1;visible;
535;getSecondaryDatabases():List;13;2;2;invisible;0;0;1;
536;isWritable():boolean;2;1;1;visible;
537;getDatabaseImpl():DatabaseImpl;2;1;1;visible;
538;setHandleLocker(Locker):void;2;1;1;visible;
539;removeCursor(Cursor):void;2;1;1;visible;
540;addCursor(Cursor):void;2;1;1;visible;
541;checkRequiredDbState(DbState,string):void;3;1;1;visible;
542;checkProhibitedDbState(DbState,string):void;3;1;1;visible;
543;checkEnv():void;4;1;1;visible;
544;invalidate():void;5;1;1;visible;
545;checkWritable(string):void;3;1;1;visible;
546;trace(Level,string,Transaction,DatabaseEntry,DatabaseEntry,LockMode):void;15;3;5;invisible;0;0;1;
547;trace(Level,string,Transaction,CursorConfig):void;13;3;5;invisible;0;0;1;
548;hasTriggers():boolean;2;1;1;visible;
549;acquireTriggerListReadLock():void;6;2;2;visible;
550;releaseTriggerListReadLock():void;3;1;2;visible;
551;acquireTriggerListWriteLock():void;7;2;2;visible;
552;releaseTriggerListWriteLock():void;6;2;2;visible;
553;addTriger(DatabaseTrigger,boolean):void;9;1;1;visible;
554;removeTrigger(DatabaseTrigger):void;6;1;1;visible;
555;removeAllTriggers():void;8;1;1;visible;
556;notifyTriggers(Locker,DatabaseEntry,DatabaseEntry,DatabaseEntry):void;9;2;3;invisible;1;0;0;
557;getId():long;2;1;1;visible;
558;getParentId():long;2;1;1;visible;
559;getName():string;2;1;1;visible;
560;toString():string;2;1;1;visible;
561;getActiveTxns():Active[];2;1;1;visible;
562;getLastCheckpointTime():long;2;1;1;visible;
563;getLastTxnId():long;2;1;1;visible;
564;getNAborts():int;2;1;1;visible;
565;getNXAAborts():int;2;1;1;visible;
566;getNXAPrepares():int;2;1;1;visible;
567;getNActive():int;2;1;1;visible;
568;getNBegins():int;2;1;1;visible;
569;getNCommits():int;2;1;1;visible;
570;getNXACommits():int;2;1;1;visible;
571;setActiveTxns(Active[]):void;2;1;1;visible;
572;setLastCheckpointTime(long):void;2;1;1;visible;
573;setLastTxnId(long):void;2;1;1;visible;
574;setNAborts(int):void;2;1;1;visible;
575;setNXAAborts(int):void;2;1;1;visible;
576;setNActive(int):void;2;1;1;visible;
577;setNBegins(int):void;2;1;1;visible;
578;setNCommits(int):void;2;1;1;visible;
579;setNXACommits(int):void;2;1;1;visible;
580;setNXAPrepares(int):void;2;1;1;visible;
581;toString():string;17;1;1;visible;
582;setPropagateExceptions(boolean):void;2;1;1;visible;
583;getPropagateExceptions():boolean;2;1;1;visible;
584;setAggressive(boolean):void;2;1;1;visible;
585;getAggressive():boolean;2;1;1;visible;
586;setPrintInfo(boolean):void;2;1;1;visible;
587;getPrintInfo():boolean;2;1;1;visible;
588;setShowProgressStream(PrintStream):void;2;1;1;visible;
589;getShowProgressStream():PrintStream;2;1;1;visible;
590;setShowProgressInterval(int):void;2;1;1;visible;
591;getShowProgressInterval():int;2;1;1;visible;
592;toString():string;4;1;1;visible;
593;setNoSort(boolean):void;2;1;1;visible;
594;getNoSort():boolean;2;1;1;visible;
595;cloneConfig():JoinConfig;4;1;1;visible;
596;invalidate(EnvironmentImpl):void;3;1;1;visible;
597;setAlreadyThrown():void;2;1;1;visible;
598;toString():string;5;1;1;visible;
599;toString():string;2;1;1;visible;
600;getMajor():int;2;1;1;visible;
601;getMinor():int;2;1;1;visible;
602;getPatch():int;2;1;1;visible;
603;getNumericVersionString():string;6;1;1;visible;
604;getVersionString():string;9;1;1;visible;
605;applyFileConfig(File,EnvironmentMutableConfig):void;25;1;1;visible;
606;close():void;71;2;2;invisible;0;0;1;
607;openDatabase(Transaction,string,DatabaseConfig):Database;6;2;3;invisible;0;1;0;
608;openSecondaryDatabase(Transaction,string,Database,SecondaryConfig):SecondaryDatabase;6;2;3;invisible;0;1;0;
609;openDb(Transaction,Database,string,DatabaseConfig,boolean):void;65;4;12;invisible;1;0;0;
610;validateDbConfigAgainstEnv(DatabaseConfig,string):void;8;2;2;visible;
611;removeDatabase(Transaction,string):void;15;2;5;invisible;0;0;1;
612;renameDatabase(Transaction,string,string):void;16;2;5;invisible;0;0;1;
613;truncateDatabase(Transaction,string,boolean):long;18;2;5;invisible;0;0;1;
614;getMemoryUsage():long;4;1;2;visible;
615;getHome():File;3;1;1;visible;
616;getDefaultTxnConfig():TransactionConfig;2;1;2;visible;
617;copyToHandleConfig(EnvironmentMutableConfig,EnvironmentConfig):void;17;2;2;visible;
618;beginTransaction(Transaction,TransactionConfig):Transaction;40;1;2;visible;
619;checkpoint(CheckpointConfig):void;6;1;1;visible;
620;sync():void;7;1;1;visible;
621;cleanLog():int;4;1;2;visible;
622;evictMemory():void;4;1;2;visible;
623;compress():void;4;1;2;visible;
624;getConfig():EnvironmentConfig;6;1;1;visible;
625;setMutableConfig(EnvironmentMutableConfig):void;7;1;1;visible;
626;getMutableConfig():EnvironmentMutableConfig;5;1;1;visible;
627;upgrade():void;2;1;1;visible;
628;getStats(StatsConfig):EnvironmentStats;6;1;2;visible;
629;getLockStats(StatsConfig):LockStats;5;1;2;visible;
630;getTransactionStats(StatsConfig):TransactionStats;5;1;2;visible;
631;getDatabaseNames():List;4;1;1;visible;
632;verify(VerifyConfig,PrintStream):boolean;5;1;2;visible;
633;getThreadTransaction():Transaction;2;1;2;visible;
634;setThreadTransaction(Transaction):void;2;1;2;visible;
635;addReferringHandle(Database):void;2;1;1;visible;
636;addReferringHandle(Transaction):void;2;1;2;visible;
637;removeReferringHandle(Database):void;2;1;1;visible;
638;removeReferringHandle(Transaction):void;2;1;2;visible;
639;getEnvironmentImpl():EnvironmentImpl;2;1;1;visible;
640;checkHandleIsValid():void;3;1;1;visible;
641;checkEnv():void;5;1;1;visible;
642;setAllowCreate(boolean):void;2;1;1;visible;
643;getAllowCreate():boolean;2;1;1;visible;
644;setExclusiveCreate(boolean):void;2;1;1;visible;
645;getExclusiveCreate():boolean;2;1;1;visible;
646;setSortedDuplicates(boolean):void;2;1;1;visible;
647;getSortedDuplicates():boolean;2;1;1;visible;
648;setTransactional(boolean):void;2;1;2;visible;
649;getTransactional():boolean;2;1;2;visible;
650;setReadOnly(boolean):void;2;1;1;visible;
651;getReadOnly():boolean;2;1;1;visible;
652;setNodeMaxEntries(int):void;2;1;1;visible;
653;setNodeMaxDupTreeEntries(int):void;2;1;1;visible;
654;getNodeMaxEntries():int;2;1;1;visible;
655;getNodeMaxDupTreeEntries():int;2;1;1;visible;
656;setBtreeComparator(Class):void;3;1;1;visible;
657;getBtreeComparator():Comparator;2;1;1;visible;
658;setOverrideBtreeComparator(boolean):void;2;1;1;visible;
659;getOverrideBtreeComparator():boolean;2;1;1;visible;
660;setDuplicateComparator(Class):void;3;1;1;visible;
661;getDuplicateComparator():Comparator;2;1;1;visible;
662;setOverrideDuplicateComparator(boolean):void;2;1;1;visible;
663;getOverrideDuplicateComparator():boolean;2;1;1;visible;
664;setUseExistingConfig(boolean):void;2;1;1;visible;
665;getUseExistingConfig():boolean;2;1;1;visible;
666;cloneConfig():DatabaseConfig;4;1;1;visible;
667;validate(DatabaseConfig):void;17;2;3;invisible;1;0;0;
668;genDatabaseConfigMismatchMessage(DatabaseConfig,boolean,boolean,boolean,boolean,boolean):string;15;2;4;invisible;1;0;0;
669;validateComparator(Class,string):Comparator;10;1;1;visible;
670;triggerAdded(Database):void;1;1;1;visible;
671;triggerRemoved(Database):void;2;1;1;visible;
672;databaseUpdated(Database,Locker,DatabaseEntry,DatabaseEntry,DatabaseEntry):void;3;1;1;visible;
673;EnvironmentStats();2;1;1;visible;
674;Sequence(Database,Transaction,DatabaseEntry,SequenceConfig);61;3;9;invisible;1;0;0;
675;PreloadConfig();1;1;1;visible;
676;PreloadStatus(string);2;1;1;visible;
677;DatabaseEntry();1;1;1;visible;
678;DatabaseEntry(byte[]);4;1;1;visible;
679;DatabaseEntry(byte[],int,int);4;1;1;visible;
680;EnvironmentMutableConfig();2;1;1;visible;
681;EnvironmentMutableConfig(Properties);5;1;1;visible;
682;EnvironmentConfig();2;1;1;visible;
683;EnvironmentConfig(Properties);2;1;1;visible;
684;LockNotGrantedException();2;1;1;visible;
685;LockNotGrantedException(Throwable);2;1;1;visible;
686;LockNotGrantedException(string);2;1;1;visible;
687;LockNotGrantedException(string,Throwable);2;1;1;visible;
688;DatabaseNotFoundException();2;1;1;visible;
689;DatabaseNotFoundException(Throwable);2;1;1;visible;
690;DatabaseNotFoundException(string);2;1;1;visible;
691;DatabaseNotFoundException(string,Throwable);2;1;1;visible;
692;CursorConfig();1;1;1;visible;
693;ForeignKeyDeleteAction(string);2;1;1;visible;
694;TransactionConfig();1;1;1;visible;
695;SecondaryCursor(SecondaryDatabase,Transaction,CursorConfig);4;2;3;invisible;0;1;0;
696;SecondaryCursor(SecondaryCursor,boolean);4;1;1;visible;
697;Transaction(Environment,Txn);6;1;1;visible;
698;SequenceStats(int,int,long,long,long,long,long,int);9;1;1;visible;
699;LockMode(string);2;1;1;visible;
700;StatsConfig();1;1;1;visible;
701;PreloadStats();2;1;1;visible;
702;JoinCursor(Locker,Database,Cursor[],JoinConfig);37;1;1;visible;
703;SequenceConfig();1;1;1;visible;
704;XAEnvironment(File,EnvironmentConfig);2;1;1;visible;
705;OperationStatus(string);2;1;1;visible;
706;Cursor(Database,Transaction,CursorConfig);6;2;4;invisible;0;1;0;
707;Cursor(Database,Locker,CursorConfig);6;1;1;visible;
708;Cursor(DatabaseImpl,Locker,CursorConfig);4;1;1;visible;
709;Cursor(Cursor,boolean);12;2;2;visible;
710;SecondaryConfig();1;1;1;visible;
711;CheckpointConfig();1;1;1;visible;
712;SecondaryTrigger(SecondaryDatabase);2;1;1;visible;
713;SecondaryDatabase(Environment,SecondaryConfig,Database);26;1;1;visible;
714;Database.DbState(string);2;1;1;visible;
715;Database(Environment);6;2;2;visible;
716;TransactionStats();1;1;1;visible;
717;TransactionStats.Active(string,long,long);4;1;1;visible;
718;DeadlockException();2;1;1;visible;
719;DeadlockException(Throwable);2;1;1;visible;
720;DeadlockException(string);2;1;1;visible;
721;DeadlockException(string,Throwable);2;1;1;visible;
722;VerifyConfig();1;1;1;visible;
723;JoinConfig();1;1;1;visible;
724;RunRecoveryException(EnvironmentImpl);3;1;1;visible;
725;RunRecoveryException(EnvironmentImpl,Throwable);3;1;1;visible;
726;RunRecoveryException(EnvironmentImpl,string);3;1;1;visible;
727;RunRecoveryException(EnvironmentImpl,string,Throwable);3;1;1;visible;
728;JEVersion(int,int,int,string);5;1;1;visible;
729;Environment(File,EnvironmentConfig);38;2;2;visible;
730;Environment(File);21;1;1;visible;
731;DatabaseConfig();1;1;1;visible;
732;DatabaseException();2;1;1;visible;
733;DatabaseException(Throwable);2;1;1;visible;
734;DatabaseException(string);2;1;1;visible;
735;DatabaseException(string,Throwable);2;1;1;visible;
736;ForeignKeyTrigger(SecondaryDatabase);2;1;1;visible;
737;DatabaseStats();1;1;1;visible;
738;checkForNullParam(Object,string):void;3;1;1;visible;
739;checkForNullDbt(DatabaseEntry,string,boolean):void;6;1;1;visible;
740;checkForPartialKey(DatabaseEntry):void;3;1;1;visible;
741;notAllowedException():UnsupportedOperationException;2;1;1;visible;
742;dbInvalidate(Database):void;2;1;1;visible;
743;dbSetHandleLocker(Database,Locker):void;2;1;1;visible;
744;envGetEnvironmentImpl(Environment):EnvironmentImpl;2;1;1;visible;
745;newCursor(DatabaseImpl,Locker,CursorConfig):Cursor;2;1;1;visible;
746;position(Cursor,DatabaseEntry,DatabaseEntry,LockMode,boolean):OperationStatus;2;1;1;visible;
747;retrieveNext(Cursor,DatabaseEntry,DatabaseEntry,LockMode,GetMode):OperationStatus;2;1;1;visible;
748;advanceCursor(Cursor,DatabaseEntry,DatabaseEntry):boolean;2;1;1;visible;
749;getCursorImpl(Cursor):CursorImpl;2;1;1;visible;
750;dbGetDatabaseImpl(Database):DatabaseImpl;2;1;1;visible;
751;getSortedCursors(JoinCursor):Cursor[];2;1;1;visible;
752;setLoadPropertyFile(EnvironmentConfig,boolean):void;2;1;1;visible;
753;setCreateUP(EnvironmentConfig,boolean):void;2;1;1;visible;
754;getCreateUP(EnvironmentConfig):boolean;2;1;1;visible;
755;setCheckpointUP(EnvironmentConfig,boolean):void;2;1;1;visible;
756;getCheckpointUP(EnvironmentConfig):boolean;2;1;1;visible;
757;setTxnReadCommitted(EnvironmentConfig,boolean):void;2;1;1;visible;
758;getTxnReadCommitted(EnvironmentConfig):boolean;2;1;1;visible;
759;cloneConfig(EnvironmentConfig):EnvironmentConfig;2;1;1;visible;
760;cloneMutableConfig(EnvironmentMutableConfig):EnvironmentMutableConfig;2;1;1;visible;
761;checkImmutablePropsForEquality(EnvironmentMutableConfig,EnvironmentMutableConfig):void;2;1;1;visible;
762;copyMutablePropsTo(EnvironmentMutableConfig,EnvironmentMutableConfig):void;2;1;1;visible;
763;disableParameterValidation(EnvironmentMutableConfig):void;2;1;1;visible;
764;setUseExistingConfig(DatabaseConfig,boolean):void;2;1;1;visible;
765;databaseConfigValidate(DatabaseConfig,DatabaseConfig):void;2;1;1;visible;
766;getLocker(Transaction):Locker;2;1;2;visible;
767;getDefaultTxnConfig(Environment):TransactionConfig;2;1;2;visible;
768;getEnvironmentShell(File):Environment;10;1;1;visible;
769;getDetail():Throwable;2;1;1;visible;
770;getCause():Throwable;2;1;1;visible;
771;initBuffer(int,int):void;3;1;1;visible;
772;size():int;2;1;1;visible;
773;reset():void;2;1;1;visible;
774;write(int):void;2;1;1;visible;
775;write(byte[]):void;2;1;1;visible;
776;write(byte[],int,int):void;2;1;1;visible;
777;writeTo(OutputStream):void;2;1;1;visible;
778;toString():string;2;1;1;visible;
779;toString(string):string;2;1;1;visible;
780;toByteArray():byte[];7;1;1;visible;
781;writeFast(int):void;4;1;1;visible;
782;writeFast(byte[]):void;6;1;1;visible;
783;writeFast(byte[],int,int):void;6;1;1;visible;
784;getBufferBytes():byte[];2;1;1;visible;
785;getBufferOffset():int;2;1;1;visible;
786;getBufferLength():int;2;1;1;visible;
787;makeSpace(int):void;4;1;1;visible;
788;addSize(int):void;2;1;1;visible;
789;bump(int):void;6;1;1;visible;
790;available():int;2;1;1;visible;
791;markSupported():boolean;2;1;1;visible;
792;mark(int):void;2;1;1;visible;
793;reset():void;2;1;1;visible;
794;skip(long):long;6;1;1;visible;
795;read():int;2;1;1;visible;
796;read(byte[]):int;2;1;1;visible;
797;read(byte[],int,int):int;2;1;1;visible;
798;readFast():int;2;1;1;visible;
799;readFast(byte[]):int;2;1;1;visible;
800;readFast(byte[],int,int):int;9;1;1;visible;
801;getBufferBytes():byte[];2;1;1;visible;
802;getBufferOffset():int;2;1;1;visible;
803;getBufferLength():int;2;1;1;visible;
804;getDetail():Throwable;2;1;1;visible;
805;getCause():Throwable;2;1;1;visible;
806;RuntimeExceptionWrapper(Throwable);3;1;1;visible;
807;FastOutputStream();2;1;1;visible;
808;FastOutputStream(int);2;1;1;visible;
809;FastOutputStream(int,int);2;1;1;visible;
810;FastOutputStream(byte[]);3;1;1;visible;
811;FastOutputStream(byte[],int);3;1;1;visible;
812;FastInputStream(byte[]);3;1;1;visible;
813;FastInputStream(byte[],int,int);4;1;1;visible;
814;IOExceptionWrapper(Throwable);3;1;1;visible;
815;getZeroTerminatedByteLength(byte[],int):int;5;1;1;visible;
816;getByteLength(char[]):int;2;1;1;visible;
817;getByteLength(char[],int,int):int;12;1;1;visible;
818;getCharLength(byte[]):int;2;1;1;visible;
819;getCharLength(byte[],int,int):int;14;1;1;visible;
820;bytesToChars(byte[],int,char[],int,int,boolean):int;23;1;1;visible;
821;charsToBytes(char[],int,byte[],int,int):void;13;1;1;visible;
822;bytesToString(byte[],int,int):string;7;1;1;visible;
823;stringToBytes(string):byte[];7;1;1;visible;
824;unwrap(Exception):Exception;8;1;1;visible;
825;unwrapAny(Throwable):Throwable;10;1;1;visible;
826;getInitializeLocking(EnvironmentConfig):boolean;2;1;1;visible;
827;getInitializeCDB(EnvironmentConfig):boolean;2;1;1;visible;
828;isTypeBtree(DatabaseConfig):boolean;2;1;1;visible;
829;isTypeHash(DatabaseConfig):boolean;2;1;1;visible;
830;isTypeQueue(DatabaseConfig):boolean;2;1;1;visible;
831;isTypeRecno(DatabaseConfig):boolean;2;1;1;visible;
832;getBtreeRecordNumbers(DatabaseConfig):boolean;2;1;1;visible;
833;getReadUncommitted(DatabaseConfig):boolean;2;1;1;visible;
834;getRenumbering(DatabaseConfig):boolean;2;1;1;visible;
835;getSortedDuplicates(DatabaseConfig):boolean;2;1;1;visible;
836;getUnsortedDuplicates(DatabaseConfig):boolean;2;1;1;visible;
837;cloneCursorConfig(CursorConfig):CursorConfig;5;1;1;visible;
838;getWriteCursor(CursorConfig):boolean;2;1;1;visible;
839;setWriteCursor(CursorConfig,boolean):void;3;1;1;visible;
840;setRecordNumber(DatabaseEntry,int):void;2;1;1;visible;
841;getRecordNumber(DatabaseEntry):int;2;1;1;visible;
842;getDatabaseFile(Database):string;2;1;1;visible;
843;getCurrentRecordNumber(Cursor,DatabaseEntry,LockMode):OperationStatus;2;1;1;visible;
844;getSearchRecordNumber(Cursor,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;1;1;visible;
845;getSearchRecordNumber(SecondaryCursor,DatabaseEntry,DatabaseEntry,DatabaseEntry,LockMode):OperationStatus;2;1;1;visible;
846;putAfter(Cursor,DatabaseEntry,DatabaseEntry):OperationStatus;2;1;1;visible;
847;putBefore(Cursor,DatabaseEntry,DatabaseEntry):OperationStatus;2;1;1;visible;
848;append(Database,Transaction,DatabaseEntry,DatabaseEntry):OperationStatus;2;2;2;visible;
849;getThreadTransaction(Environment):Transaction;2;1;2;visible;
850;setInitializeCache(EnvironmentConfig,boolean):void;3;1;1;visible;
851;setInitializeLocking(EnvironmentConfig,boolean):void;3;1;1;visible;
852;setInitializeCDB(EnvironmentConfig,boolean):void;3;1;1;visible;
853;setLockDetectModeOldest(EnvironmentConfig):void;2;1;1;visible;
854;setSerializableIsolation(TransactionConfig,boolean):void;2;1;2;visible;
855;setBtreeComparator(DatabaseConfig,Comparator):void;2;1;1;visible;
856;setTypeBtree(DatabaseConfig):void;1;1;1;visible;
857;setTypeHash(DatabaseConfig):void;2;1;1;visible;
858;setTypeRecno(DatabaseConfig):void;2;1;1;visible;
859;setTypeQueue(DatabaseConfig):void;2;1;1;visible;
860;setBtreeRecordNumbers(DatabaseConfig,boolean):void;2;1;1;visible;
861;setReadUncommitted(DatabaseConfig,boolean):void;1;1;1;visible;
862;setRenumbering(DatabaseConfig,boolean):void;2;1;1;visible;
863;setSortedDuplicates(DatabaseConfig,boolean):void;2;1;1;visible;
864;setUnsortedDuplicates(DatabaseConfig,boolean):void;3;1;1;visible;
865;setRecordLength(DatabaseConfig,int):void;3;1;1;visible;
866;setRecordPad(DatabaseConfig,int):void;2;1;1;visible;
867;openDatabase(Environment,Transaction,string,string,DatabaseConfig):Database;2;2;3;invisible;0;1;0;
868;openSecondaryDatabase(Environment,Transaction,string,string,Database,SecondaryConfig):SecondaryDatabase;2;2;3;invisible;0;1;0;
869;makeDbName(string,string):string;8;1;1;visible;
870;setDebugDatabaseName(string):void;2;1;1;visible;
871;getDebugName():string;2;1;1;visible;
872;setPendingDeletedHook(TestHook):void;2;1;1;visible;
873;initDefaultSettings():void;8;1;1;visible;
874;clone():Object;2;1;1;visible;
875;getTree():Tree;2;1;1;visible;
876;setTree(Tree):void;2;1;1;visible;
877;getId():DatabaseId;2;1;1;visible;
878;setId(DatabaseId):void;2;1;1;visible;
879;getEofNodeId():long;2;1;1;visible;
880;isTransactional():boolean;2;1;2;visible;
881;setTransactional(boolean):void;2;1;2;visible;
882;getSortedDuplicates():boolean;2;1;1;visible;
883;getNodeMaxEntries():int;2;1;1;visible;
884;getNodeMaxDupTreeEntries():int;2;1;1;visible;
885;setDuplicateComparator(Comparator):void;2;1;1;visible;
886;setBtreeComparator(Comparator):void;2;1;1;visible;
887;getBtreeComparator():Comparator;2;1;1;visible;
888;getDuplicateComparator():Comparator;2;1;1;visible;
889;setEnvironmentImpl(EnvironmentImpl):void;4;1;1;visible;
890;getDbEnvironment():EnvironmentImpl;2;1;1;visible;
891;hasOpenHandles():boolean;2;1;1;visible;
892;addReferringHandle(Database):void;2;1;1;visible;
893;removeReferringHandle(Database):void;2;1;1;visible;
894;getReferringHandleCount():int;2;1;1;visible;
895;findPrimaryDatabase():Database;6;1;1;visible;
896;getName():string;2;1;1;visible;
897;isDeleted():boolean;2;1;2;visible;
898;isDeleteFinished():boolean;2;1;2;visible;
899;startDeleteProcessing():void;3;1;2;visible;
900;finishedINListHarvest():void;3;1;2;visible;
901;deleteAndReleaseINs():void;3;1;2;visible;
902;releaseDeletedINs():void;39;2;4;invisible;0;0;1;
903;checkIsDeleted(string):void;3;1;2;visible;
904;processLSN(long,LogEntryType):void;3;1;1;visible;
905;countRecords():long;8;1;1;visible;
906;processLSN(long,LogEntryType):void;4;1;1;visible;
907;getCount():long;2;1;1;visible;
908;stat(StatsConfig):DatabaseStats;15;1;2;visible;
909;verify(VerifyConfig,DatabaseStats):boolean;13;1;2;visible;
911;getEmptyStats():DatabaseStats;2;1;2;visible;
912;walkDatabaseTree(TreeWalkerStatsAccumulator,PrintStream,boolean):boolean;34;1;1;visible;
913;printErrorRecord(PrintStream,DatabaseEntry,DatabaseEntry):void;19;1;1;visible;
914;verifyNode(Node):void;1;1;2;visible;
915;processIN(IN,Long,int):void;5;2;2;invisible;0;0;1;
916;processBIN(BIN,Long,int):void;5;2;2;invisible;0;0;1;
917;processDIN(DIN,Long,int):void;5;2;2;invisible;0;0;1;
918;processDBIN(DBIN,Long,int):void;5;2;2;invisible;0;0;1;
919;processDupCountLN(DupCountLN,Long):void;4;2;2;visible;
920;tallyLevel(int,long[]):void;12;1;1;visible;
921;incrementLNCount():void;6;1;1;visible;
922;incrementDeletedLNCount():void;2;1;1;visible;
923;getINNodeIdsSeen():Set;2;1;1;visible;
924;getBINNodeIdsSeen():Set;2;1;1;visible;
925;getDINNodeIdsSeen():Set;2;1;1;visible;
926;getDBINNodeIdsSeen():Set;2;1;1;visible;
927;getINsByLevel():long[];2;1;1;visible;
928;getBINsByLevel():long[];2;1;1;visible;
929;getDINsByLevel():long[];2;1;1;visible;
930;getDBINsByLevel():long[];2;1;1;visible;
931;getLNCount():long;2;1;1;visible;
932;getDupCountLNCount():Set;2;1;1;visible;
933;getDeletedLNCount():long;2;1;1;visible;
934;getMainTreeMaxDepth():int;2;1;1;visible;
935;getDuplicateTreeMaxDepth():int;2;1;1;visible;
936;copyToStats(DatabaseStats):void;15;1;1;visible;
937;getStatus():PreloadStatus;2;1;1;visible;
938;processLSN(long,LogEntryType):void;18;3;3;visible;
939;doWork(ChildReference):IN;3;1;1;visible;
940;walk():void;3;1;1;visible;
941;getRootIN(long):IN;2;1;1;visible;
942;releaseRootIN(IN):void;2;1;2;visible;
943;addToLsnINMap(Long,IN,int):void;3;1;1;visible;
944;fetchLSN(long):Node;13;2;4;invisible;1;0;0;
945;preload(PreloadConfig):void;28;4;12;invisible;1;0;0;
946;dumpString(int):string;16;1;1;visible;
947;getLogSize():int;2;1;1;visible;
948;writeToLog(ByteBuffer):void;8;1;1;visible;
949;readFromLog(ByteBuffer,byte):void;20;1;1;visible;
950;dumpLog(StringBuffer,boolean):void;13;1;1;visible;
951;logEntryIsTransactional():boolean;2;1;1;visible;
952;getTransactionId():long;2;1;1;visible;
953;getBinDeltaPercent():int;2;1;1;visible;
954;getBinMaxDeltas():int;2;1;1;visible;
955;getEnvironment(File,EnvironmentConfig):EnvironmentImplInfo;2;1;1;visible;
956;getExistingEnvironment(File):EnvironmentImplInfo;2;1;1;visible;
957;getEnvironment(File,EnvironmentConfig,boolean):EnvironmentImplInfo;30;1;1;visible;
958;remove(File):void;2;1;1;visible;
959;clear():void;2;1;1;visible;
960;getEnvironmentMapKey(File):string;4;1;1;visible;
961;toString():string;2;1;1;visible;
962;checkState(DbEnvState[],DbEnvState):void;10;1;1;visible;
963;extractINsForDb(INList):boolean;47;3;10;invisible;1;0;0;
964;walk():void;2;1;1;visible;
965;walkInternal():void;19;2;3;invisible;1;0;0;
966;maybeGetMoreINs():void;17;1;1;visible;
967;accumulateLSNs(IN):void;35;1;1;visible;
968;fetchAndProcessLSN(long):void;6;1;1;visible;
969;getRootIN(long):IN;2;1;1;visible;
970;releaseRootIN(IN):void;3;1;1;visible;
971;addToLsnINMap(Long,IN,int):void;1;1;1;visible;
972;fetchLSN(long):Node;2;1;1;visible;
973;envConfigUpdate(DbConfigManager):void;8;1;1;visible;
974;reset(DbConfigManager):void;66;5;8;invisible;1;0;0;
975;initCacheMemoryUsage():void;5;2;3;visible;
976;calcTreeCacheUsage():long;15;2;6;invisible;1;0;0;
977;updateTreeMemoryUsage(long):void;6;2;3;visible;
978;updateMiscMemoryUsage(long):void;6;2;3;visible;
979;updateLockMemoryUsage(long,int):void;4;1;2;visible;
980;accumulateNewUsage(IN,long):long;2;1;2;visible;
981;refreshTreeMemoryUsage(long):void;3;1;2;visible;
982;getCacheMemoryUsage():long;8;1;2;visible;
983;getTreeMemoryUsage():long;2;1;2;visible;
984;getLogBufferBudget():long;2;1;1;visible;
985;getTrackerBudget():long;2;1;2;visible;
986;getMaxMemory():long;2;1;1;visible;
987;getCriticalThreshold():long;2;1;2;visible;
988;getCacheBudget():long;2;1;2;visible;
989;getINOverhead():long;2;1;2;visible;
990;getBINOverhead():long;2;1;2;visible;
991;getDINOverhead():long;2;1;2;visible;
992;getDBINOverhead():long;2;1;2;visible;
993;loadStats(StatsConfig,EnvironmentStats):void;2;1;2;visible;
994;getDatabase():DatabaseImpl;2;1;1;visible;
995;getRecordCount():int;2;1;1;visible;
996;envConfigUpdate(DbConfigManager):void;3;1;1;visible;
997;createDaemons():void;17;6;7;invisible;0;1;0;
998;runOrPauseDaemons(DbConfigManager):void;15;5;5;invisible;0;0;1;
999;getINCompressor():INCompressor;2;1;2;visible;
1000;getUtilizationTracker():UtilizationTracker;2;1;2;visible;
1001;getUtilizationProfile():UtilizationProfile;2;1;2;visible;
1002;logMapTreeRoot():void;6;2;3;invisible;0;0;1;
1003;rewriteMapTreeRoot(long):void;9;2;3;invisible;0;0;1;
1004;getRootLsn():long;2;1;1;visible;
1005;readMapTreeFromLog(long):void;10;2;4;invisible;1;0;0;
1006;addToCompressorQueue(BIN,Key,boolean):void;5;1;2;visible;
1007;addToCompressorQueue(BINReference,boolean):void;5;1;2;visible;
1008;addToCompressorQueue(Collection,boolean):void;5;1;2;visible;
1009;lazyCompress(IN):void;5;1;2;visible;
1010;initLogger(File):Logger;33;3;5;invisible;1;0;0;
1011;enableDebugLoggingToDbLog():void;6;1;2;visible;
1012;closeLogger():void;4;1;2;visible;
1013;open():void;2;1;1;visible;
1014;invalidate(RunRecoveryException):void;8;1;1;visible;
1015;isOpen():boolean;2;1;1;visible;
1016;isClosing():boolean;2;1;1;visible;
1017;isClosed():boolean;2;1;1;visible;
1018;mayNotWrite():boolean;2;1;1;visible;
1019;checkIfInvalid():void;4;1;1;visible;
1020;checkNotClosed():void;3;1;1;visible;
1021;close():void;3;1;1;visible;
1022;close(boolean):void;3;1;1;visible;
1023;doClose(boolean):void;68;5;6;invisible;0;0;1;
1024;closeAfterRunRecovery():void;11;1;1;visible;
1025;forceClose():void;3;1;1;visible;
1026;incReferenceCount():void;2;1;1;visible;
1027;checkLeaks():void;30;4;6;invisible;1;0;0;
1028;invokeCheckpoint(CheckpointConfig,boolean,string):boolean;6;1;1;visible;
1029;forceLogFileFlip():long;3;1;2;visible;
1030;invokeCompressor():boolean;6;1;2;visible;
1031;invokeEvictor():void;3;1;2;visible;
1032;invokeCleaner():int;7;1;2;visible;
1033;requestShutdownDaemons():void;11;4;4;visible;
1034;shutdownDaemons():void;31;4;5;visible;
1035;shutdownINCompressor():void;8;1;2;visible;
1036;shutdownEvictor():void;8;1;2;visible;
1037;shutdownCheckpointer():void;10;2;3;invisible;0;0;1;
1038;shutdownCleaner():void;7;1;2;visible;
1039;isNoLocking():boolean;2;1;1;visible;
1040;isTransactional():boolean;2;1;2;visible;
1041;isReadOnly():boolean;2;1;1;visible;
1042;createDb(Locker,string,DatabaseConfig,Database):DatabaseImpl;2;1;1;visible;
1043;getDb(Locker,string,Database):DatabaseImpl;2;1;1;visible;
1044;getDbNames():List;2;1;1;visible;
1045;dumpMapTree():void;2;1;1;visible;
1046;dbRename(Locker,string,string):void;2;1;2;visible;
1047;dbRemove(Locker,string):void;2;1;2;visible;
1048;truncate(Locker,DatabaseImpl):TruncateResult;2;1;2;visible;
1049;truncate(Locker,string,boolean):long;2;1;2;visible;
1050;txnBegin(Transaction,TransactionConfig):Txn;4;1;2;visible;
1051;getLogManager():LogManager;2;1;1;visible;
1052;getFileManager():FileManager;2;1;1;visible;
1053;getDbMapTree():DbTree;2;1;1;visible;
1054;getConfigManager():DbConfigManager;2;1;1;visible;
1055;cloneConfig():EnvironmentConfig;2;1;1;visible;
1056;cloneMutableConfig():EnvironmentMutableConfig;2;1;1;visible;
1057;checkImmutablePropsForEquality(EnvironmentConfig):void;2;1;1;visible;
1058;setMutableConfig(EnvironmentMutableConfig):void;17;1;1;visible;
1059;addConfigObserver(EnvConfigObserver):void;2;1;1;visible;
1060;removeConfigObserver(EnvConfigObserver):void;2;1;1;visible;
1061;getInMemoryINs():INList;2;1;1;visible;
1062;getTxnManager():TxnManager;2;1;1;visible;
1063;getCheckpointer():Checkpointer;2;1;1;visible;
1064;getCleaner():Cleaner;2;1;2;visible;
1065;getMemoryBudget():MemoryBudget;2;1;1;visible;
1066;getLogger():Logger;2;1;2;visible;
1067;verify(VerifyConfig,PrintStream):boolean;3;1;2;visible;
1068;verifyCursors():void;2;1;2;visible;
1069;loadStats(StatsConfig):EnvironmentStats;16;5;9;invisible;1;0;0;
1070;lockStat(StatsConfig):LockStats;2;1;2;visible;
1071;txnStat(StatsConfig):TransactionStats;2;1;2;visible;
1072;getINCompressorQueueSize():int;2;1;2;visible;
1073;getLastRecoveryInfo():RecoveryInfo;2;1;1;visible;
1074;getEnvironmentHome():File;2;1;1;visible;
1075;getTxnTimeout():long;2;1;1;visible;
1076;getLockTimeout():long;2;1;1;visible;
1077;getTriggerLatch():SharedLatch;2;1;2;visible;
1078;getEvictor():Evictor;2;1;2;visible;
1079;alertEvictor():void;3;1;2;visible;
1080;getEnvironmentConfig():EnvironmentConfig;2;1;1;visible;
1081;get(ConfigParam):string;2;1;1;visible;
1082;get(string):string;2;1;1;visible;
1083;getBoolean(BooleanConfigParam):boolean;4;1;1;visible;
1084;getShort(ShortConfigParam):short;9;1;1;visible;
1085;getInt(IntConfigParam):int;11;1;1;visible;
1086;getLong(LongConfigParam):long;11;1;1;visible;
1087;getLastDbId():int;2;1;1;visible;
1088;getNextDbId():int;2;1;1;visible;
1089;setLastDbId(int):void;2;1;1;visible;
1090;createLocker(EnvironmentImpl):Locker;5;2;2;invisible;0;0;1;
1091;setEnvironmentImpl(EnvironmentImpl):void;4;1;1;visible;
1092;createDb(Locker,string,DatabaseConfig,Database):DatabaseImpl;2;1;1;visible;
1093;createDb(Locker,string,DatabaseConfig,Database,boolean):DatabaseImpl;33;2;4;invisible;0;0;1;
1094;modifyDbRoot(DatabaseImpl):void;35;2;2;invisible;0;0;1;
1095;doWork(ChildReference):IN;4;1;1;visible;
1096;lockNameLN(Locker,string,string):NameLockResult;38;2;4;invisible;0;0;1;
1097;dbRename(Locker,string,string):boolean;20;2;3;invisible;0;0;1;
1098;dbRemove(Locker,string):void;21;2;3;invisible;0;0;1;
1099;truncate(Locker,string,boolean):long;50;3;4;invisible;0;0;1;
1100;deleteMapLN(DatabaseId):void;15;1;1;visible;
1101;truncate(Locker,DatabaseImpl,boolean):TruncateResult;57;3;4;invisible;0;0;1;
1102;getDb(Locker,string,Database):DatabaseImpl;2;1;1;visible;
1103;getDb(Locker,string,Database,boolean):DatabaseImpl;30;3;4;invisible;0;1;0;
1104;getDb(DatabaseId):DatabaseImpl;2;1;1;visible;
1105;getDb(DatabaseId,long):DatabaseImpl;2;1;1;visible;
1106;getDb(DatabaseId,long,Map):DatabaseImpl;7;1;1;visible;
1107;getDb(DatabaseId,long,boolean,string):DatabaseImpl;47;3;5;invisible;0;0;1;
1108;setDebugNameForDatabaseImpl(DatabaseImpl,string):void;9;1;1;visible;
1109;rebuildINListMapDb():void;2;1;1;visible;
1110;verify(VerifyConfig,PrintStream):boolean;53;3;6;invisible;1;0;0;
1111;getDbName(DatabaseId):string;35;2;2;invisible;0;0;1;
1112;getDbNames():List;26;1;1;visible;
1113;isReservedDbName(string):boolean;5;1;1;visible;
1114;getHighestLevel():int;10;1;1;visible;
1115;doWork(ChildReference):IN;4;1;1;visible;
1116;getRootLevel():int;2;1;1;visible;
1117;getLogType():LogEntryType;2;1;1;visible;
1118;marshallOutsideWriteLatch():boolean;2;1;1;visible;
1119;countAsObsoleteWhenLogged():boolean;2;1;1;visible;
1120;getLogSize():int;5;1;1;visible;
1121;writeToLog(ByteBuffer):void;7;1;1;visible;
1122;postLogWork(long):void;1;1;1;visible;
1123;readFromLog(ByteBuffer,byte):void;7;1;1;visible;
1124;dumpLog(StringBuffer,boolean):void;10;1;1;visible;
1125;logEntryIsTransactional():boolean;2;1;1;visible;
1126;getTransactionId():long;2;1;1;visible;
1127;dumpString(int):string;13;1;1;visible;
1128;toString():string;2;1;1;visible;
1129;dump():void;3;1;1;visible;
1130;getINs():SortedSet;2;1;1;visible;
1131;getSize():int;2;1;1;visible;
1132;add(IN):void;34;2;6;invisible;1;0;0;
1133;addAndSetMemory(Set,IN):void;8;2;2;visible;
1134;removeLatchAlreadyHeld(IN):void;18;3;5;invisible;1;0;0;
1135;remove(IN):void;7;2;3;invisible;0;0;1;
1136;tailSet(IN):SortedSet;4;2;2;visible;
1137;first():IN;4;2;2;visible;
1138;iterator():Iterator;4;2;2;visible;
1139;clear():void;13;3;4;visible;
1140;dump():void;6;1;1;visible;
1141;latchMajor():void;3;1;2;visible;
1142;releaseMajorLatchIfHeld():void;3;1;2;visible;
1143;releaseMajorLatch():void;6;1;2;visible;
1144;dumpAddedINsIntoMajorSet():void;4;1;2;visible;
1145;latchMinorAndDumpAddedINs():void;5;1;2;visible;
1146;latchMinor():void;2;1;2;visible;
1147;releaseMinorLatch():void;2;1;2;visible;
1148;isForward():boolean;2;1;1;visible;
1149;toString():string;2;1;1;visible;
1150;hashCode():int;2;1;1;visible;
1151;getTreeStatsAccumulator():TreeWalkerStatsAccumulator;5;1;1;visible;
1152;incrementLNCount():void;4;1;1;visible;
1153;setNonCloning(boolean):void;2;1;1;visible;
1154;isExactSearch():boolean;2;1;1;visible;
1155;isDataSearch():boolean;2;1;1;visible;
1156;toString():string;2;1;1;visible;
1157;setAllowEviction(boolean):void;2;1;2;visible;
1158;cloneCursor(boolean):CursorImpl;2;1;1;visible;
1159;cloneCursor(boolean,CursorImpl):CursorImpl;29;4;6;invisible;1;0;0;
1160;getIndex():int;2;1;1;visible;
1161;setIndex(int):void;2;1;1;visible;
1162;getBIN():BIN;2;1;1;visible;
1163;setBIN(BIN):void;2;1;1;visible;
1164;getBINToBeRemoved():BIN;2;1;1;visible;
1165;getDupIndex():int;2;1;1;visible;
1166;setDupIndex(int):void;2;1;1;visible;
1167;getDupBIN():DBIN;2;1;1;visible;
1168;setDupBIN(DBIN):void;2;1;1;visible;
1169;getDupBINToBeRemoved():DBIN;2;1;1;visible;
1170;setTreeStatsAccumulator(TreeWalkerStatsAccumulator):void;2;1;1;visible;
1171;setTargetBin():boolean;13;1;1;visible;
1172;advanceCursor(DatabaseEntry,DatabaseEntry):boolean;24;1;1;visible;
1173;latchBIN():BIN;11;2;6;invisible;0;0;1;
1174;releaseBIN():void;3;1;2;visible;
1175;latchBINs():void;3;1;2;visible;
1176;releaseBINs():void;3;1;2;visible;
1177;latchDBIN():DBIN;11;2;6;invisible;0;0;1;
1178;releaseDBIN():void;3;1;2;visible;
1179;getLocker():Locker;2;1;1;visible;
1180;addCursor(BIN):void;5;2;2;invisible;0;0;1;
1181;addCursor():void;5;1;1;visible;
1182;updateBin(BIN,int):void;7;1;1;visible;
1183;updateDBin(DBIN,int):void;4;1;1;visible;
1184;removeCursor():void;3;1;1;visible;
1185;removeCursorBIN():void;6;2;2;invisible;0;0;1;
1186;removeCursorDBIN():void;6;2;2;invisible;0;0;1;
1187;clearDupBIN(boolean):void;10;2;2;invisible;0;0;1;
1188;dumpTree():void;2;1;1;visible;
1189;isClosed():boolean;2;1;1;visible;
1190;isNotInitialized():boolean;2;1;1;visible;
1191;reset():void;13;2;2;visible;
1192;close():void;11;2;2;visible;
1193;count(LockType):int;35;2;6;invisible;1;0;0;
1194;delete():OperationStatus;86;5;20;invisible;1;0;0;
1195;dup(boolean):CursorImpl;10;1;1;visible;
1196;evict():void;7;2;4;invisible;0;0;1;
1197;lockNextKeyForInsert(DatabaseEntry,DatabaseEntry):void;39;2;6;invisible;1;0;0;
1198;putLN(byte[],LN,boolean):OperationStatus;14;2;2;visible;
1199;put(DatabaseEntry,DatabaseEntry,DatabaseEntry):OperationStatus;11;1;1;visible;
1200;putNoOverwrite(DatabaseEntry,DatabaseEntry):OperationStatus;3;1;1;visible;
1201;putNoDupData(DatabaseEntry,DatabaseEntry):OperationStatus;5;1;1;visible;
1202;putCurrent(DatabaseEntry,DatabaseEntry,DatabaseEntry):OperationStatus;119;4;16;invisible;1;0;0;
1203;getCurrent(DatabaseEntry,DatabaseEntry,LockType):OperationStatus;12;2;3;invisible;1;0;0;
1204;getCurrentAlreadyLatched(DatabaseEntry,DatabaseEntry,LockType,boolean):OperationStatus;7;2;3;invisible;0;0;1;
1205;getCurrentLN(LockType):LN;8;2;2;invisible;0;0;1;
1206;getCurrentLNAlreadyLatched(LockType):LN;25;2;5;invisible;1;0;0;
1207;getNext(DatabaseEntry,DatabaseEntry,LockType,boolean,boolean):OperationStatus;2;1;1;visible;
1208;getNextWithKeyChangeStatus(DatabaseEntry,DatabaseEntry,LockType,boolean,boolean):KeyChangeStatus;102;3;14;invisible;1;0;0;
1209;flushBINToBeRemoved():void;8;2;4;invisible;1;0;0;
1210;getNextNoDup(DatabaseEntry,DatabaseEntry,LockType,boolean,boolean):OperationStatus;6;1;1;visible;
1211;getFirstDuplicate(DatabaseEntry,DatabaseEntry,LockType):OperationStatus;9;1;1;visible;
1212;getNextDuplicate(DatabaseEntry,DatabaseEntry,LockType,boolean,boolean):OperationStatus;87;4;15;invisible;0;0;1;
1213;flushDBINToBeRemoved():void;8;2;4;invisible;1;0;0;
1214;positionFirstOrLast(boolean,DIN):boolean;66;2;4;invisible;1;0;0;
1215;searchAndPosition(DatabaseEntry,DatabaseEntry,SearchMode,LockType):int;78;2;3;invisible;1;0;0;
1216;searchAndPositionBoth(boolean,Node,DatabaseEntry,boolean,LockType,long):int;55;2;2;invisible;0;0;1;
1217;fetchCurrent(DatabaseEntry,DatabaseEntry,LockType,boolean):OperationStatus;85;3;11;invisible;1;0;0;
1218;lockLN(LN,LockType):LockResult;9;1;1;visible;
1219;lockLNDeletedAllowed(LN,LockType):LockResult;41;2;3;invisible;0;0;1;
1220;lockDupCountLN(DIN,LockType):LockResult;29;2;4;invisible;0;0;1;
1221;getLatchedDupRoot(boolean):DIN;23;2;6;invisible;1;0;0;
1222;setDbt(DatabaseEntry,byte[]):void;20;1;1;visible;
1223;verifyCursor(BIN):void;3;1;2;visible;
1224;assertCursorState(boolean):boolean;5;1;1;visible;
1225;checkCursorState(boolean):void;16;2;2;invisible;0;0;1;
1226;revertLock(LN,LockResult):void;2;1;1;visible;
1227;revertLock(long,LockGrantType):void;5;1;1;visible;
1228;lockEofNode(LockType):void;3;1;1;visible;
1229;checkEnv():void;2;1;1;visible;
1230;getLockerPrev():CursorImpl;2;1;1;visible;
1231;getLockerNext():CursorImpl;2;1;1;visible;
1232;setLockerPrev(CursorImpl):void;2;1;1;visible;
1233;setLockerNext(CursorImpl):void;2;1;1;visible;
1234;dump(boolean):void;2;1;1;visible;
1235;dump():void;2;1;1;visible;
1236;statusToString(byte):string;6;1;1;visible;
1237;dumpToString(boolean):string;12;1;1;visible;
1238;getLockStats():LockStats;2;1;2;visible;
1239;trace(Level,string,BIN,LN,int,long,long):void;18;2;3;visible;
1240;setTestHook(TestHook):void;2;1;1;visible;
1241;checkAlreadyLatched(boolean):boolean;7;1;2;visible;
1242;getId():int;2;1;1;visible;
1243;getBytes():byte[];4;1;1;visible;
1244;equals(Object):boolean;6;1;1;visible;
1245;hashCode():int;2;1;1;visible;
1246;toString():string;2;1;1;visible;
1247;compareTo(Object):int;10;1;1;visible;
1248;getLogSize():int;2;1;1;visible;
1249;writeToLog(ByteBuffer):void;2;1;1;visible;
1250;readFromLog(ByteBuffer,byte):void;2;1;1;visible;
1251;dumpLog(StringBuffer,boolean):void;4;1;1;visible;
1252;logEntryIsTransactional():boolean;2;1;1;visible;
1253;getTransactionId():long;2;1;1;visible;
1254;DatabaseImpl(string,DatabaseId,EnvironmentImpl,DatabaseConfig);20;3;3;visible;
1255;DatabaseImpl();10;2;2;visible;
1256;DatabaseImpl.ObsoleteProcessor(UtilizationTracker);2;1;1;visible;
1257;DatabaseImpl.StatsAccumulator(PrintStream,int,DatabaseStats);8;1;1;visible;
1258;DatabaseImpl.HaltPreloadException(PreloadStatus);3;1;1;visible;
1259;DatabaseImpl.PreloadProcessor(EnvironmentImpl,long,long,PreloadStats);6;2;2;visible;
1260;DatabaseImpl.PreloadLSNTreeWalker.INEntry(IN,int);3;1;1;visible;
1261;DatabaseImpl.PreloadLSNTreeWalker(DatabaseImpl,TreeNodeProcessor,PreloadConfig);3;1;1;visible;
1262;DbEnvPool();2;1;1;visible;
1263;DbEnvPool.EnvironmentImplInfo(EnvironmentImpl,boolean);3;1;1;visible;
1264;DbEnvState(string);2;1;1;visible;
1265;SortedLSNTreeWalker(DatabaseImpl,boolean,boolean,long,TreeNodeProcessor);13;1;1;visible;
1266;MemoryBudget(EnvironmentImpl,DbConfigManager);16;2;2;visible;
1267;TruncateResult(DatabaseImpl,int);3;1;1;visible;
1268;EnvironmentImpl(File,EnvironmentConfig);84;5;9;invisible;0;0;1;
1269;DbConfigManager(EnvironmentConfig);2;1;1;visible;
1270;DbTree();6;1;1;visible;
1271;DbTree(EnvironmentImpl);5;1;1;visible;
1272;DbTree.RewriteMapLN(CursorImpl);2;1;1;visible;
1273;DbTree.RootLevel(DatabaseImpl);3;1;1;visible;
1274;DbConfigException(Throwable);2;1;1;visible;
1275;DbConfigException(string);2;1;1;visible;
1276;DbConfigException(string,Throwable);2;1;1;visible;
1277;INList(EnvironmentImpl);9;3;3;visible;
1278;INList(INList,EnvironmentImpl);9;3;3;visible;
1279;GetMode(string,boolean);3;1;1;visible;
1280;RangeRestartException();2;1;1;visible;
1281;CursorImpl.SearchMode(boolean,boolean,string);4;1;1;visible;
1282;CursorImpl.KeyChangeStatus(OperationStatus,boolean);3;1;1;visible;
1283;CursorImpl(DatabaseImpl,Locker);2;1;1;visible;
1284;CursorImpl(DatabaseImpl,Locker,boolean);20;1;1;visible;
1285;DatabaseId(int);2;1;1;visible;
1286;DatabaseId();1;1;1;visible;
1287;serializeComparator(Comparator):string;5;1;1;visible;
1288;instantiateComparator(Class,string):Comparator;7;1;1;visible;
1289;getInstance():DbEnvPool;2;1;1;visible;
1290;getRuntimeMaxMemory():long;8;1;1;visible;
1291;byteArraySize(int):int;7;1;2;visible;
1292;getThreadLocalReferenceCount():int;2;1;1;visible;
1293;incThreadLocalReferenceCount():void;2;1;1;visible;
1294;decThreadLocalReferenceCount():void;2;1;1;visible;
1295;getNoComparators():boolean;2;1;1;visible;
1296;getFairLatches():boolean;2;1;2;visible;
1297;maybeForceYield():boolean;5;1;1;visible;
1298;getNextCursorId():long;2;1;1;visible;
1299;initStartingPosition(long,Long):void;32;2;3;invisible;0;0;1;
1300;attemptToMoveBadFile(DatabaseException):Long;14;1;1;visible;
1301;setEndOfFile():void;2;1;1;visible;
1302;getEndOfLog():long;2;1;1;visible;
1303;getLastValidLsn():long;2;1;1;visible;
1304;getPrevOffset():long;2;1;1;visible;
1305;getEntryType():LogEntryType;2;1;1;visible;
1306;setTargetType(LogEntryType):void;2;1;1;visible;
1307;getLastSeen(LogEntryType):long;6;1;1;visible;
1308;processEntry(ByteBuffer):boolean;8;1;1;visible;
1309;readNextEntry():boolean;16;1;1;visible;
1310;processEntry(ByteBuffer):boolean;34;1;1;visible;
1311;summarize():void;64;1;1;visible;
1312;pad(string):string;7;1;1;visible;
1313;summarizeCheckpointInfo():void;75;1;1;visible;
1314;compare(Object,Object):int;11;1;1;visible;
1315;increment(FileReader,byte):void;23;1;1;visible;
1316;reset(DbConfigManager):void;37;2;4;invisible;1;0;0;
1317;getWriteBuffer(int,boolean):LogBuffer;15;1;1;visible;
1318;writeBufferToFile(int):void;58;2;11;invisible;1;0;0;
1319;writeCompleted(long,boolean):void;4;1;1;visible;
1320;getReadBuffer(long):LogBuffer;27;3;7;invisible;1;0;0;
1321;loadStats(StatsConfig,EnvironmentStats):void;23;2;7;invisible;1;0;0;
1322;setDumpCorruptedBounds(boolean):void;2;1;1;visible;
1323;setTargetType(LogEntryType):void;2;1;1;visible;
1324;processEntry(ByteBuffer):boolean;6;1;1;visible;
1325;processEntryCallback(LogEntry,LogEntryType):void;1;1;1;visible;
1326;readNextEntry():boolean;6;1;1;visible;
1327;resyncReader(long,boolean):boolean;29;1;1;visible;
1328;isTargetEntry(byte,byte):boolean;6;1;1;visible;
1329;isTargetEntry(byte,byte):boolean;2;1;1;visible;
1330;processEntry(ByteBuffer):boolean;3;1;1;visible;
1331;getLastObject():Object;2;1;1;visible;
1332;release():void;2;1;2;visible;
1333;matches(string):boolean;5;1;1;visible;
1334;accept(File,string):boolean;24;1;1;visible;
1335;initStartingPosition(long,Long):void;33;1;1;visible;
1336;setAlwaysValidateChecksum(boolean):void;2;1;2;visible;
1337;getNumRead():int;2;1;1;visible;
1338;getNRepeatIteratorReads():long;2;1;1;visible;
1339;getLastLsn():long;2;1;1;visible;
1340;readNextEntry():boolean;50;3;5;invisible;0;0;1;
1341;resyncReader(long,boolean):boolean;3;1;1;visible;
1342;getLogEntryInReadBuffer():void;70;2;2;invisible;0;0;1;
1343;readHeader(ByteBuffer):void;14;1;1;visible;
1344;startChecksum(ByteBuffer):void;8;1;2;visible;
1345;validateChecksum(ByteBuffer):void;3;1;2;visible;
1346;readData(int,boolean):ByteBuffer;31;1;1;visible;
1347;adjustReadBufferSize(int):void;19;1;1;visible;
1348;copyToSaveBuffer(int):void;23;1;1;visible;
1349;fillReadBuffer(int):void;37;2;4;invisible;1;0;0;
1350;isTargetEntry(byte,byte):boolean;2;1;1;visible;
1351;processEntry(ByteBuffer):boolean;1;1;1;visible;
1352;threadSafeBufferFlip(ByteBuffer):Buffer;5;1;1;visible;
1353;threadSafeBufferPosition(ByteBuffer):int;5;1;1;visible;
1354;threadSafeBufferPosition(ByteBuffer,int):Buffer;5;1;1;visible;
1355;fsync():void;76;3;10;invisible;1;0;0;
1356;getNFSyncRequests():long;2;1;2;visible;
1357;getNFSyncs():long;2;1;2;visible;
1358;getNTimeouts():long;2;1;2;visible;
1359;loadStats(StatsConfig,EnvironmentStats):void;8;1;2;visible;
1360;executeFSync():void;2;1;1;visible;
1361;getLeader():boolean;9;1;1;visible;
1362;waitForFsync():int;30;1;1;visible;
1363;wakeupAll():void;3;1;1;visible;
1364;wakeupOne():void;3;1;1;visible;
1365;addTargetType(LogEntryType):void;2;1;1;visible;
1366;isTargetEntry(byte,byte):boolean;59;2;5;invisible;1;0;0;
1367;processEntry(ByteBuffer):boolean;100;3;4;invisible;0;0;1;
1368;isObsoleteLsnAlreadyCounted(long,long):boolean;6;1;2;visible;
1369;getIN():IN;2;1;1;visible;
1370;getDatabaseId():DatabaseId;7;1;1;visible;
1371;getMaxNodeId():long;2;1;1;visible;
1372;getMaxDbId():int;2;1;1;visible;
1373;getMaxTxnId():long;2;1;2;visible;
1374;isDeleteInfo():boolean;2;1;1;visible;
1375;isDupDeleteInfo():boolean;2;1;1;visible;
1376;getDeletedNodeId():long;2;1;1;visible;
1377;getDeletedIdKey():byte[];2;1;1;visible;
1378;getDupDeletedNodeId():long;2;1;1;visible;
1379;getDupDeletedMainKey():byte[];2;1;1;visible;
1380;getDupDeletedDupKey():byte[];2;1;1;visible;
1381;getLsnOfIN():long;2;1;1;visible;
1382;getLogEntryType():LogEntryType;2;1;1;visible;
1383;isNodeType():boolean;2;1;1;visible;
1384;getSharedLogEntry():LogEntry;2;1;1;visible;
1385;getNewLogEntry():LogEntry;4;1;1;visible;
1386;getTypeNum():byte;2;1;1;visible;
1387;getVersion():byte;2;1;1;visible;
1388;toString():string;2;1;1;visible;
1389;equalsType(byte,byte):boolean;2;1;1;visible;
1390;equalsType(byte):boolean;2;1;1;visible;
1391;equals(Object):boolean;8;1;1;visible;
1392;hashCode():int;2;1;1;visible;
1393;close():void;1;1;1;visible;
1394;flush():void;1;1;1;visible;
1395;publish(LogRecord):void;8;1;1;visible;
1396;getFile():RandomAccessFile;2;1;1;visible;
1397;isOldHeaderVersion():boolean;2;1;1;visible;
1398;latch():void;2;1;2;visible;
1399;latchNoWait():boolean;2;1;2;visible;
1400;release():void;2;1;2;visible;
1401;close():void;4;1;1;visible;
1402;addTargetType(LogEntryType):void;2;1;1;visible;
1403;isTargetEntry(byte,byte):boolean;9;1;1;visible;
1404;processEntry(ByteBuffer):boolean;3;1;1;visible;
1405;isLN():boolean;2;1;1;visible;
1406;getLN():LN;2;1;1;visible;
1407;getDatabaseId():DatabaseId;2;1;1;visible;
1408;getKey():byte[];2;1;1;visible;
1409;getDupTreeKey():byte[];2;1;1;visible;
1410;getTxnId():Long;2;1;2;visible;
1411;isPrepare():boolean;2;1;2;visible;
1412;getTxnPrepareId():long;2;1;1;visible;
1413;getTxnPrepareXid():Xid;2;1;1;visible;
1414;isAbort():boolean;2;1;1;visible;
1415;getTxnAbortId():long;2;1;1;visible;
1416;getTxnCommitId():long;2;1;1;visible;
1417;getNodeId():long;2;1;1;visible;
1418;getAbortLsn():long;2;1;1;visible;
1419;getAbortKnownDeleted():boolean;2;1;1;visible;
1420;getModeValue():string;2;1;1;visible;
1421;setLastPosition(long,long,long):void;7;1;1;visible;
1422;saveLastPosition():void;6;1;1;visible;
1423;restoreLastPosition():void;6;1;1;visible;
1424;setSyncAtFileEnd(boolean):void;2;1;1;visible;
1425;getFirstFileNum():Long;2;1;1;visible;
1426;getReadOnly():boolean;2;1;1;visible;
1427;getLastFileNum():Long;2;1;1;visible;
1428;getCurrentFileNum():long;2;1;1;visible;
1429;setIncludeDeletedFiles(boolean):void;2;1;1;visible;
1430;getAllFileNumbers():Long[];7;1;1;visible;
1431;getFollowingFileNum(long,boolean):Long;27;1;1;visible;
1432;filesExist():boolean;3;1;1;visible;
1433;getFileNum(boolean):Long;9;1;1;visible;
1434;getNumFromName(string):Long;3;1;1;visible;
1435;listFiles(string[]):string[];4;1;1;visible;
1436;getFullFileNames(long):string[];9;1;1;visible;
1437;getFullFileName(long,string):string;2;1;1;visible;
1438;getFullFileName(string):string;2;1;1;visible;
1439;renameFile(long,string):void;20;2;2;invisible;0;0;1;
1440;deleteFile(long):void;9;2;3;invisible;1;0;0;
1441;getFileHandle(long):FileHandle;39;4;14;invisible;1;0;0;
1442;makeFileHandle(long,FileMode):FileHandle;48;1;1;visible;
1443;closeFileInErrorCase(RandomAccessFile):void;5;1;1;visible;
1444;readAndValidateFileHeader(RandomAccessFile,string,long):boolean;6;1;1;visible;
1445;writeFileHeader(RandomAccessFile,string,FileHeader):void;26;1;1;visible;
1446;getFileHeaderPrevOffset(long):long;4;1;1;visible;
1447;getPrevEntryOffset():long;2;1;1;visible;
1448;bumpLsn(long):boolean;22;1;1;visible;
1449;writeLogBuffer(LogBuffer):void;49;2;4;invisible;0;0;1;
1450;writeToFile(RandomAccessFile,ByteBuffer,long):int;50;5;6;invisible;1;0;0;
1451;readFromFile(RandomAccessFile,ByteBuffer,long):void;34;5;5;invisible;0;0;1;
1452;abortCommittedTxns(ByteBuffer):void;33;2;3;invisible;1;0;0;
1453;syncLogEnd():void;4;1;1;visible;
1454;syncLogEndAndFinishFile():void;4;1;1;visible;
1455;groupSync():void;2;1;2;visible;
1456;clear():void;8;3;4;invisible;0;0;1;
1457;close():void;10;2;2;visible;
1458;lockEnvironment(boolean,boolean):boolean;28;1;2;visible;
1459;releaseExclusiveLock():void;5;1;2;visible;
1460;checkEnvHomePermissions(boolean):boolean;5;1;1;visible;
1461;truncateLog(long,long):void;8;1;1;visible;
1462;forceNewLogFile():void;2;1;1;visible;
1463;getNextLsn():long;2;1;1;visible;
1464;getLastUsedLsn():long;2;1;1;visible;
1465;getNFSyncs():long;2;1;2;visible;
1466;getNFSyncRequests():long;2;1;2;visible;
1467;getNFSyncTimeouts():long;2;1;2;visible;
1468;loadStats(StatsConfig,EnvironmentStats):void;2;1;2;visible;
1469;getCacheKeys():Set;2;1;2;visible;
1470;clearFileCache(long):void;6;2;4;invisible;0;0;1;
1471;get(Long):FileHandle;2;1;1;visible;
1472;add(Long,FileHandle):void;30;2;3;invisible;0;0;1;
1473;remove(long):void;13;2;3;invisible;0;0;1;
1474;clear():void;12;2;3;invisible;0;0;1;
1475;getCacheKeys():Set;2;1;1;visible;
1476;getWritableFile(long):RandomAccessFile;12;1;1;visible;
1477;force():void;18;1;1;visible;
1478;close():void;19;1;1;visible;
1479;generateRunRecoveryException(RandomAccessFile,ByteBuffer,long):void;19;1;1;visible;
1480;reset():void;2;1;1;visible;
1481;update(EnvironmentImpl,ByteBuffer,int,boolean):void;11;1;1;visible;
1482;validate(EnvironmentImpl,long,long):void;3;1;1;visible;
1483;validate(EnvironmentImpl,long,long,long,boolean):void;6;1;1;visible;
1484;getFormatId():int;2;1;1;visible;
1485;getGlobalTransactionId():byte[];2;1;1;visible;
1486;getBranchQualifier():byte[];2;1;1;visible;
1487;equals(Object):boolean;9;1;1;visible;
1488;hashCode():int;9;1;1;visible;
1489;compareByteArrays(byte[],byte[]):boolean;9;1;1;visible;
1490;toString():string;15;1;1;visible;
1491;logItem(LoggableObject,boolean,boolean,boolean,long,boolean,ByteBuffer,UtilizationTracker):LogResult;3;3;4;invisible;0;1;0;
1492;flushInternal():void;5;2;2;invisible;0;0;1;
1493;getUnflushableTrackedSummary(long):TrackedFileSummary;3;2;3;invisible;0;0;1;
1494;countObsoleteNode(long,LogEntryType):void;5;2;4;invisible;1;0;0;
1495;countObsoleteNodes(TrackedFileSummary[]):void;5;2;4;invisible;1;0;0;
1496;countObsoleteINs(List):void;3;2;3;invisible;0;0;1;
1497;release():void;1;1;1;visible;
1498;getBytes(long):ByteBuffer;7;1;1;visible;
1499;getBytes(long,int):ByteBuffer;8;1;1;visible;
1500;isTargetEntry(byte,byte):boolean;15;1;1;visible;
1501;processEntry(ByteBuffer):boolean;3;1;1;visible;
1502;isRoot():boolean;2;1;1;visible;
1503;isCheckpointEnd():boolean;2;1;1;visible;
1504;isCheckpointStart():boolean;2;1;1;visible;
1505;isTargetEntry(byte,byte):boolean;6;1;1;visible;
1506;summarize():void;1;1;1;visible;
1507;recordLogWrite(int,LoggableObject):boolean;3;1;1;visible;
1508;activate():void;3;1;1;visible;
1509;getChecksumOnRead():boolean;2;1;2;visible;
1510;getLastLsnAtRecovery():long;2;1;1;visible;
1511;setLastLsnAtRecovery(long):void;2;1;1;visible;
1512;resetPool(DbConfigManager):void;2;1;1;visible;
1513;logForceFlush(LoggableObject,boolean):long;6;2;3;invisible;0;1;0;
1514;logForceFlip(LoggableObject):long;7;1;1;visible;
1515;log(LoggableObject):long;7;1;1;visible;
1516;log(LoggableObject,boolean,long):long;5;1;1;visible;
1517;log(LoggableObject,boolean,boolean,boolean,boolean,long):long;48;4;9;invisible;1;0;0;
1518;logItem(LoggableObject,boolean,boolean,boolean,long,boolean,ByteBuffer,UtilizationTracker):LogResult;1;2;2;visible;
1519;logInternal(LoggableObject,boolean,boolean,boolean,long,boolean,ByteBuffer,UtilizationTracker):LogResult;107;5;14;invisible;1;0;0;
1520;marshallIntoBuffer(LoggableObject,int,boolean,int):ByteBuffer;11;1;1;visible;
1521;addPrevOffsetAndChecksum(ByteBuffer,long,int):ByteBuffer;12;1;1;visible;
1522;putIntoBuffer(LoggableObject,int,long,boolean,int):ByteBuffer;3;1;1;visible;
1523;writeHeader(ByteBuffer,LogEntryType,int,boolean):void;12;1;1;visible;
1524;getLogEntry(long):LogEntry;11;1;1;visible;
1525;getLogEntry(long,RandomAccessFile):LogEntry;2;1;1;visible;
1526;getLogEntryFromLogSource(long,LogSource):LogEntry;61;3;4;invisible;0;0;1;
1527;get(long):Object;3;1;1;visible;
1528;getLogSource(long):LogSource;11;1;1;visible;
1529;flush():void;5;1;1;visible;
1530;flushInternal():void;1;1;1;visible;
1531;loadStats(StatsConfig,EnvironmentStats):void;9;2;3;visible;
1532;getUnflushableTrackedSummary(long):TrackedFileSummary;1;1;2;visible;
1533;getUnflushableTrackedSummaryInternal(long):TrackedFileSummary;2;1;2;visible;
1534;countObsoleteNode(long,LogEntryType):void;1;1;2;visible;
1535;countObsoleteNodeInternal(UtilizationTracker,long,LogEntryType):void;2;1;2;visible;
1536;countObsoleteNodes(TrackedFileSummary[]):void;1;1;2;visible;
1537;countObsoleteNodesInternal(UtilizationTracker,TrackedFileSummary[]):void;4;1;2;visible;
1538;countObsoleteINs(List):void;1;1;2;visible;
1539;countObsoleteINsInternal(List):void;5;1;2;visible;
1540;setReadHook(TestHook):void;2;1;1;visible;
1541;logItem(LoggableObject,boolean,boolean,boolean,long,boolean,ByteBuffer,UtilizationTracker):LogResult;5;2;3;invisible;0;1;0;
1542;flushInternal():void;6;1;1;visible;
1543;getUnflushableTrackedSummary(long):TrackedFileSummary;5;1;2;visible;
1544;countObsoleteNode(long,LogEntryType):void;6;1;2;visible;
1545;countObsoleteNodes(TrackedFileSummary[]):void;6;1;2;visible;
1546;countObsoleteINs(List):void;5;1;2;visible;
1547;reinit():void;10;3;4;visible;
1548;getFirstLsn():long;2;1;1;visible;
1549;registerLsn(long):void;10;2;3;invisible;0;0;1;
1550;hasRoom(int):boolean;2;1;1;visible;
1551;getDataBuffer():ByteBuffer;2;1;1;visible;
1552;getCapacity():int;2;1;1;visible;
1553;containsLsn(long):boolean;13;2;3;invisible;0;0;1;
1554;latchForWrite():void;2;1;2;visible;
1555;release():void;2;1;2;visible;
1556;getRewriteAllowed():boolean;2;1;2;visible;
1557;setRewriteAllowed():void;2;1;2;visible;
1558;getBytes(long):ByteBuffer;20;1;1;visible;
1559;getBytes(long,int):ByteBuffer;5;1;1;visible;
1560;validate(string,long):boolean;4;1;1;visible;
1561;getLastEntryInPrevFileOffset():long;2;1;1;visible;
1562;getLogType():LogEntryType;2;1;1;visible;
1563;marshallOutsideWriteLatch():boolean;2;1;1;visible;
1564;countAsObsoleteWhenLogged():boolean;2;1;1;visible;
1565;postLogWork(long):void;1;1;1;visible;
1566;getLogSize():int;2;1;1;visible;
1567;writeToLog(ByteBuffer):void;5;1;1;visible;
1568;readFromLog(ByteBuffer,byte):void;7;1;1;visible;
1569;dumpLog(StringBuffer,boolean):void;9;1;1;visible;
1570;logEntryIsTransactional():boolean;2;1;1;visible;
1571;getTransactionId():long;2;1;1;visible;
1572;toString():string;4;1;1;visible;
1573;processEntry(ByteBuffer):boolean;35;2;3;invisible;1;0;0;
1574;addTargetType(byte,LogEntryType):void;2;1;1;visible;
1575;initStartingPosition(long,Long):void;10;1;1;visible;
1576;isTargetEntry(byte,byte):boolean;10;1;1;visible;
1577;processEntry(ByteBuffer):boolean;3;1;1;visible;
1578;isIN():boolean;2;1;1;visible;
1579;isLN():boolean;2;1;1;visible;
1580;isRoot():boolean;2;1;1;visible;
1581;getLN():LN;2;1;1;visible;
1582;getIN():IN;2;1;1;visible;
1583;getDatabaseId():DatabaseId;7;1;1;visible;
1584;getKey():byte[];2;1;1;visible;
1585;getDupTreeKey():byte[];2;1;1;visible;
1586;DbChecksumException(EnvironmentImpl,string);2;1;1;visible;
1587;DbChecksumException(EnvironmentImpl,string,Throwable);2;1;1;visible;
1588;LastFileReader(EnvironmentImpl,int);7;1;1;visible;
1589;LastFileReader(EnvironmentImpl,int,Long);7;1;1;visible;
1590;StatsFileReader(EnvironmentImpl,int,long,long,string,string,boolean);9;1;1;visible;
1591;StatsFileReader.EntryInfo();6;1;1;visible;
1592;LogBufferPool(FileManager,EnvironmentImpl);12;2;3;invisible;1;0;0;
1593;ScavengerFileReader(EnvironmentImpl,int,long,long,long);9;1;1;visible;
1594;SearchFileReader(EnvironmentImpl,int,boolean,long,long,LogEntryType);4;1;1;visible;
1595;FileHandleSource(FileHandle,int,FileManager);3;1;1;visible;
1596;JEFileFilter(string[]);2;1;1;visible;
1597;FileReader(EnvironmentImpl,int,boolean,long,Long,long,long);25;2;5;invisible;1;0;0;
1598;FSyncManager(EnvironmentImpl);8;2;3;invisible;1;0;0;
1599;FSyncManager.FSyncGroup(long,EnvironmentImpl);5;1;1;visible;
1600;INFileReader(EnvironmentImpl,int,long,long,boolean,boolean,long,Map);25;2;4;invisible;0;0;1;
1601;LogEntryType(byte,byte);4;1;1;visible;
1602;LogEntryType(byte,byte,string,LogEntry);6;1;1;visible;
1603;TraceLogHandler(EnvironmentImpl);2;1;1;visible;
1604;FileHandle(RandomAccessFile,string,EnvironmentImpl,boolean);5;2;2;visible;
1605;LNFileReader(EnvironmentImpl,int,long,boolean,long,long,Long);3;1;1;visible;
1606;FileManager.FileMode(string);2;1;1;visible;
1607;FileManager(EnvironmentImpl,File,boolean);34;6;8;invisible;1;0;0;
1608;FileManager.FileCache(DbConfigManager);7;1;1;visible;
1609;ChecksumValidator();2;1;1;visible;
1610;LogUtils.XidImpl(int,byte[],byte[]);4;1;1;visible;
1611;LogException(string);2;1;1;visible;
1612;LogException(string,Exception);2;1;1;visible;
1613;SyncedLogManager(EnvironmentImpl,boolean);2;1;1;visible;
1614;FileSource(RandomAccessFile,int,FileManager);4;1;1;visible;
1615;CheckpointFileReader(EnvironmentImpl,int,boolean,long,long,long);2;1;1;visible;
1616;DumpFileReader(EnvironmentImpl,int,long,long,string,string,boolean);23;2;3;visible;
1617;LogFileNotFoundException(string);2;1;1;visible;
1618;CheckpointMonitor(EnvironmentImpl);8;1;1;visible;
1619;LogManager(EnvironmentImpl,boolean);20;4;6;invisible;1;0;0;
1620;LogManager.LogResult(long,boolean,boolean);6;3;5;visible;
1621;LatchedLogManager(EnvironmentImpl,boolean);2;1;1;visible;
1622;LogBuffer(int,EnvironmentImpl);8;4;4;visible;
1623;LogBuffer(ByteBuffer,long);6;2;2;visible;
1624;FileHeader(long,long);6;1;1;visible;
1625;FileHeader();1;1;1;visible;
1626;PrintFileReader(EnvironmentImpl,int,long,long,string,string,boolean);2;1;1;visible;
1627;CleanerFileReader(EnvironmentImpl,int,long,Long);25;2;3;invisible;1;0;0;
1628;CleanerFileReader.EntryInfo(LogEntry,byte);3;1;1;visible;
1629;isNodeType(byte,byte):boolean;2;1;1;visible;
1630;findType(byte,byte):LogEntryType;4;1;1;visible;
1631;getAllTypes():Set;5;1;1;visible;
1632;setProvisional(byte):byte;2;1;1;visible;
1633;clearProvisional(byte):byte;2;1;1;visible;
1634;isProvisional(byte):boolean;2;1;1;visible;
1635;isValidType(byte):boolean;2;1;1;visible;
1636;listFiles(File,string[]):string[];4;1;1;visible;
1637;getFileName(long,string):string;4;1;1;visible;
1638;firstLogEntryOffset():int;2;1;1;visible;
1639;writeUnsignedInt(ByteBuffer,long):void;5;1;1;visible;
1640;getUnsignedInt(ByteBuffer):long;6;1;1;visible;
1641;writeShort(ByteBuffer,short):void;5;1;1;visible;
1642;readShort(ByteBuffer):short;2;1;1;visible;
1643;writeInt(ByteBuffer,int):void;9;1;1;visible;
1644;readInt(ByteBuffer):int;6;1;1;visible;
1645;getIntLogSize():int;2;1;1;visible;
1646;writeIntMSB(ByteBuffer,int):void;9;1;1;visible;
1647;readIntMSB(ByteBuffer):int;6;1;1;visible;
1648;writeLong(ByteBuffer,long):void;17;1;1;visible;
1649;readLong(ByteBuffer):long;10;1;1;visible;
1650;getLongLogSize():int;2;1;1;visible;
1651;writeByteArray(ByteBuffer,byte[]):void;6;1;1;visible;
1652;readByteArray(ByteBuffer):byte[];11;1;1;visible;
1653;getByteArrayLogSize(byte[]):int;2;1;1;visible;
1654;writeString(ByteBuffer,string):void;2;1;1;visible;
1655;readString(ByteBuffer):string;2;1;1;visible;
1656;getStringLogSize(string):int;2;1;1;visible;
1657;writeTimestamp(ByteBuffer,Timestamp):void;2;1;1;visible;
1658;readTimestamp(ByteBuffer):Timestamp;3;1;1;visible;
1659;getTimestampLogSize():int;2;1;1;visible;
1660;writeBoolean(ByteBuffer,boolean):void;3;1;1;visible;
1661;readBoolean(ByteBuffer):boolean;3;1;1;visible;
1662;getBooleanLogSize():int;2;1;1;visible;
1663;dumpBoolean(ByteBuffer,StringBuffer,string):boolean;12;1;1;visible;
1664;getXidSize(Xid):int;9;1;1;visible;
1665;writeXid(ByteBuffer,Xid):void;14;1;1;visible;
1666;readXid(ByteBuffer):Xid;13;1;1;visible;
1667;entrySize():int;6;1;1;visible;
1668;envConfigUpdate(DbConfigManager):void;3;1;1;visible;
1669;getLockTableIndex(Long):int;2;1;1;visible;
1670;getLockTableIndex(long):int;2;1;1;visible;
1671;lock(long,Locker,LockType,long,boolean,DatabaseImpl):LockGrantType;60;2;2;invisible;0;0;1;
1672;attemptLock(Long,Locker,LockType,boolean):LockAttemptResult;1;1;1;visible;
1673;attemptLockInternal(Long,Locker,LockType,boolean,int):LockAttemptResult;25;3;4;invisible;0;0;1;
1674;makeTimeoutMsg(string,Locker,long,LockType,LockGrantType,Lock,long,long,long,DatabaseImpl):string;1;1;1;visible;
1675;makeTimeoutMsgInternal(string,Locker,long,LockType,LockGrantType,Lock,long,long,long,DatabaseImpl):string;34;1;1;visible;
1676;release(long,Locker):boolean;2;1;1;visible;
1677;release(Lock,Locker):boolean;2;1;1;visible;
1678;release(long,Lock,Locker,boolean):boolean;16;1;1;visible;
1679;releaseAndFindNotifyTargets(long,Lock,Locker,boolean):Set;1;1;1;visible;
1680;releaseAndFindNotifyTargetsInternal(long,Lock,Locker,boolean,int):Set;24;2;2;invisible;0;0;1;
1681;transfer(long,Locker,Locker,boolean):void;1;1;1;visible;
1682;transferInternal(long,Locker,Locker,boolean,int):void;8;1;1;visible;
1683;transferMultiple(long,Locker,Locker[]):void;1;1;1;visible;
1684;transferMultipleInternal(long,Locker,Locker[],int):void;7;1;1;visible;
1685;demote(long,Locker):void;1;1;1;visible;
1686;demoteInternal(long,Locker,int):void;5;1;1;visible;
1687;isLocked(Long):boolean;1;1;1;visible;
1688;isLockedInternal(Long,int):boolean;6;1;1;visible;
1689;isOwner(Long,Locker,LockType):boolean;1;1;1;visible;
1690;isOwnerInternal(Long,Locker,LockType,int):boolean;6;1;1;visible;
1691;isWaiter(Long,Locker):boolean;1;1;1;visible;
1692;isWaiterInternal(Long,Locker,int):boolean;6;1;1;visible;
1693;nWaiters(Long):int;1;1;1;visible;
1694;nWaitersInternal(Long,int):int;6;1;1;visible;
1695;nOwners(Long):int;1;1;1;visible;
1696;nOwnersInternal(Long,int):int;6;1;1;visible;
1697;getWriteOwnerLocker(Long):Locker;1;1;1;visible;
1698;getWriteOwnerLockerInternal(Long,int):Locker;10;1;1;visible;
1699;validateOwnership(Long,Locker,LockType,boolean,MemoryBudget):boolean;1;1;1;visible;
1700;validateOwnershipInternal(Long,Locker,LockType,boolean,MemoryBudget,int):boolean;8;1;1;visible;
1701;lockStat(StatsConfig):LockStats;16;2;4;invisible;1;0;0;
1702;dumpLockTable(LockStats):void;1;2;2;visible;
1703;dumpLockTableInternal(LockStats,int):void;20;2;6;invisible;1;0;0;
1704;dump():void;2;1;1;visible;
1705;dumpToString():string;9;2;3;invisible;0;0;1;
1706;dumpToStringNoLatch(StringBuffer,int):void;10;1;1;visible;
1707;checkNoLatchesHeld(boolean):boolean;6;1;2;visible;
1708;findDeadlock(Lock,Locker):StringBuffer;8;1;1;visible;
1709;findDeadlock1(Set,Lock,Locker):StringBuffer;31;1;1;visible;
1710;attemptLock(Long,Locker,LockType,boolean):LockAttemptResult;5;2;3;invisible;1;0;0;
1711;makeTimeoutMsg(string,Locker,long,LockType,LockGrantType,Lock,long,long,long,DatabaseImpl):string;5;2;3;invisible;1;0;0;
1712;releaseAndFindNotifyTargets(long,Lock,Locker,boolean):Set;8;2;3;invisible;1;0;0;
1713;transfer(long,Locker,Locker,boolean):void;5;2;3;invisible;1;0;0;
1714;transferMultiple(long,Locker,Locker[]):void;5;2;3;invisible;1;0;0;
1715;demote(long,Locker):void;5;2;3;invisible;1;0;0;
1716;isLocked(Long):boolean;5;2;3;invisible;1;0;0;
1717;isOwner(Long,Locker,LockType):boolean;5;2;3;invisible;1;0;0;
1718;isWaiter(Long,Locker):boolean;5;2;3;invisible;1;0;0;
1719;nWaiters(Long):int;5;2;3;invisible;1;0;0;
1720;nOwners(Long):int;5;2;3;invisible;1;0;0;
1721;getWriteOwnerLocker(Long):Locker;5;2;3;invisible;1;0;0;
1722;validateOwnership(Long,Locker,LockType,boolean,MemoryBudget):boolean;5;2;3;invisible;1;0;0;
1723;dumpLockTable(LockStats):void;4;3;4;invisible;0;1;0;
1724;getLogType():LogEntryType;2;1;1;visible;
1725;getTagName():string;2;1;1;visible;
1726;setLocker(Locker):void;2;1;1;visible;
1727;getLocker():Locker;2;1;1;visible;
1728;setLockType(LockType):void;2;1;1;visible;
1729;getLockType():LockType;2;1;1;visible;
1730;clone():Object;2;1;1;visible;
1731;dump():void;2;1;1;visible;
1732;toString():string;13;1;1;visible;
1733;getLogType():LogEntryType;2;1;1;visible;
1734;getTagName():string;2;1;1;visible;
1735;getAllowed():boolean;2;1;1;visible;
1736;getRestart():boolean;2;1;1;visible;
1737;init(EnvironmentImpl,TransactionConfig):void;39;2;3;invisible;1;0;0;
1738;generateId(TxnManager):long;2;1;1;visible;
1739;getLastLsn():long;2;1;1;visible;
1740;setPrepared(boolean):void;5;1;1;visible;
1741;setSuspended(boolean):void;5;1;1;visible;
1742;isSuspended():boolean;2;1;1;visible;
1743;lockInternal(long,LockType,boolean,DatabaseImpl):LockResult;17;1;1;visible;
1744;prepare(Xid):int;14;1;1;visible;
1745;commit(Xid):void;4;1;1;visible;
1746;abort(Xid):void;4;1;1;visible;
1747;commit():long;2;1;1;visible;
1748;commit(byte):long;90;5;7;invisible;0;0;1;
1749;abort(boolean):long;2;1;1;visible;
1750;abortInternal(boolean,boolean):long;53;4;5;invisible;0;0;1;
1751;undo():void;36;5;5;invisible;0;1;0;
1752;clearWriteLocks():int;9;1;1;visible;
1753;clearReadLocks():int;10;1;1;visible;
1754;addLogInfo(long):void;9;1;1;visible;
1755;getFirstActiveLsn():long;3;1;1;visible;
1756;markDeleteAtTxnEnd(DatabaseImpl,boolean):void;12;2;5;invisible;0;0;1;
1757;setDeletedDatabaseState(boolean):void;7;1;2;visible;
1758;cleanupDatabaseImpls(boolean):void;12;1;2;visible;
1759;addLock(Long,Lock,LockType,LockGrantType):void;21;2;6;invisible;0;0;1;
1760;addReadLock(Lock):void;10;2;3;invisible;0;0;1;
1761;removeLock(long,Lock):void;13;2;3;invisible;0;0;1;
1762;moveWriteToReadLock(long,Lock):void;9;2;2;invisible;0;0;1;
1763;updateMemoryUsage(int):void;6;1;2;visible;
1764;getAccumulatedDelta():int;2;1;2;visible;
1765;createdNode(long):boolean;8;1;1;visible;
1766;getAbortLsn(long):long;9;1;1;visible;
1767;getWriteLockInfo(long):WriteLockInfo;6;1;1;visible;
1768;isTransactional():boolean;2;1;1;visible;
1769;isSerializableIsolation():boolean;2;1;1;visible;
1770;isReadCommittedIsolation():boolean;2;1;1;visible;
1771;getTxnLocker():Txn;2;1;1;visible;
1772;newNonTxnLocker():Locker;2;1;1;visible;
1773;releaseNonTxnLocks():void;1;1;1;visible;
1774;operationEnd():void;1;1;1;visible;
1775;operationEnd(boolean):void;1;1;1;visible;
1776;setHandleLockOwner(boolean,Database,boolean):void;22;1;1;visible;
1777;registerCursor(CursorImpl):void;7;1;1;visible;
1778;unRegisterCursor(CursorImpl):void;12;1;1;visible;
1779;isHandleLockTransferrable():boolean;2;1;1;visible;
1780;checkCursorsForClose():boolean;7;1;1;visible;
1781;collectStats(LockStats):LockStats;7;1;2;visible;
1782;setOnlyAbortable():void;3;1;1;visible;
1783;getOnlyAbortable():boolean;2;1;1;visible;
1784;checkState(boolean):void;13;1;1;visible;
1785;close(boolean):void;10;1;1;visible;
1786;getLogSize():int;3;1;1;visible;
1787;writeToLog(ByteBuffer):void;4;1;1;visible;
1788;readFromLog(ByteBuffer,byte):void;3;1;1;visible;
1789;dumpLog(StringBuffer,boolean):void;6;1;1;visible;
1790;getTransactionId():long;2;1;1;visible;
1791;logEntryIsTransactional():boolean;2;1;1;visible;
1792;transferHandleLockToHandleSet(Long,Set):void;16;1;1;visible;
1793;traceCommit(int,int):void;11;3;3;visible;
1794;getInMemorySize():int;2;1;1;visible;
1795;generateId(TxnManager):long;1;1;1;visible;
1796;getId():long;2;1;1;visible;
1797;getDefaultNoWait():boolean;2;1;1;visible;
1798;getLockTimeout():long;2;1;1;visible;
1799;setLockTimeout(long):void;2;1;1;visible;
1800;setTxnTimeout(long):void;3;1;1;visible;
1801;isReadUncommittedDefault():boolean;2;1;1;visible;
1802;getWaitingFor():Lock;2;1;1;visible;
1803;setWaitingFor(Lock):void;2;1;1;visible;
1804;setOnlyAbortable():void;2;1;1;visible;
1805;checkState(boolean):void;1;1;1;visible;
1806;lockInternal(long,LockType,boolean,DatabaseImpl):LockResult;1;1;1;visible;
1807;lock(long,LockType,boolean,DatabaseImpl):LockResult;7;1;1;visible;
1808;nonBlockingLock(long,LockType,DatabaseImpl):LockResult;2;1;1;visible;
1809;releaseLock(long):void;6;1;1;visible;
1810;demoteLock(long):void;4;1;1;visible;
1811;isTransactional():boolean;1;1;2;visible;
1812;isSerializableIsolation():boolean;1;1;1;visible;
1813;isReadCommittedIsolation():boolean;1;1;1;visible;
1814;getTxnLocker():Txn;1;1;2;visible;
1815;newNonTxnLocker():Locker;1;1;1;visible;
1816;releaseNonTxnLocks():void;1;1;1;visible;
1817;sharesLocksWith(Locker):boolean;6;1;1;visible;
1818;operationEnd():void;1;1;1;visible;
1819;operationEnd(boolean):void;1;1;1;visible;
1820;setHandleLockOwner(boolean,Database,boolean):void;1;1;1;visible;
1821;operationEnd(OperationStatus):void;2;1;1;visible;
1822;registerCursor(CursorImpl):void;1;1;1;visible;
1823;unRegisterCursor(CursorImpl):void;1;1;1;visible;
1824;getAbortLsn(long):long;1;1;1;visible;
1825;getWriteLockInfo(long):WriteLockInfo;1;1;1;visible;
1826;markDeleteAtTxnEnd(DatabaseImpl,boolean):void;1;1;2;visible;
1827;addDeleteInfo(BIN,Key):void;11;1;2;visible;
1828;addLock(Long,Lock,LockType,LockGrantType):void;1;1;1;visible;
1829;createdNode(long):boolean;1;1;1;visible;
1830;removeLock(long,Lock):void;1;1;1;visible;
1831;moveWriteToReadLock(long,Lock):void;1;1;1;visible;
1832;collectStats(LockStats):LockStats;1;1;2;visible;
1833;isTimedOut():boolean;6;1;1;visible;
1834;getTxnTimeOut():long;2;1;1;visible;
1835;getTxnStartMillis():long;2;1;1;visible;
1836;unregisterHandle(Database):void;7;1;1;visible;
1837;addToHandleMaps(Long,Database):void;17;1;1;visible;
1838;isHandleLockTransferrable():boolean;2;1;1;visible;
1839;transferHandleLockToHandle(Database):void;5;1;1;visible;
1840;transferHandleLock(Database,Locker,boolean):void;25;1;1;visible;
1841;rememberHandleWriteLock(Long):void;2;1;1;visible;
1842;toString():string;4;1;1;visible;
1843;dumpLockTable():void;2;1;1;visible;
1844;attemptLock(Long,Locker,LockType,boolean):LockAttemptResult;2;1;1;visible;
1845;makeTimeoutMsg(string,Locker,long,LockType,LockGrantType,Lock,long,long,long,DatabaseImpl):string;2;1;1;visible;
1846;releaseAndFindNotifyTargets(long,Lock,Locker,boolean):Set;2;1;1;visible;
1847;transfer(long,Locker,Locker,boolean):void;1;1;1;visible;
1848;transferMultiple(long,Locker,Locker[]):void;1;1;1;visible;
1849;demote(long,Locker):void;1;1;1;visible;
1850;isLocked(Long):boolean;2;1;1;visible;
1851;isOwner(Long,Locker,LockType):boolean;2;1;1;visible;
1852;isWaiter(Long,Locker):boolean;2;1;1;visible;
1853;nWaiters(Long):int;2;1;1;visible;
1854;nOwners(Long):int;2;1;1;visible;
1855;getWriteOwnerLocker(Long):Locker;2;1;1;visible;
1856;validateOwnership(Long,Locker,LockType,boolean,MemoryBudget):boolean;2;1;1;visible;
1857;dumpLockTable(LockStats):void;1;2;2;visible;
1858;getId():long;2;1;1;visible;
1859;getLastLsn():long;2;1;1;visible;
1860;getTagName():string;1;1;1;visible;
1861;getLogType():LogEntryType;1;1;1;visible;
1862;marshallOutsideWriteLatch():boolean;2;1;1;visible;
1863;countAsObsoleteWhenLogged():boolean;2;1;1;visible;
1864;postLogWork(long):void;1;1;1;visible;
1865;getLogSize():int;3;1;1;visible;
1866;writeToLog(ByteBuffer):void;4;1;1;visible;
1867;readFromLog(ByteBuffer,byte):void;4;1;1;visible;
1868;dumpLog(StringBuffer,boolean):void;7;1;1;visible;
1869;logEntryIsTransactional():boolean;2;1;1;visible;
1870;getTransactionId():long;2;1;1;visible;
1871;getNodeId():Long;2;1;1;visible;
1872;addWaiterToEndOfList(LockInfo,MemoryBudget,int):void;12;2;2;visible;
1873;addWaiterToHeadOfList(LockInfo,MemoryBudget,int):void;9;2;2;visible;
1874;getWaitersListClone():List;7;1;1;visible;
1875;flushWaiter(Locker,MemoryBudget,int):void;13;2;3;invisible;0;0;1;
1876;addOwner(LockInfo,MemoryBudget,int):void;9;2;2;visible;
1877;getOwnersClone():Set;10;1;1;visible;
1878;flushOwner(LockInfo,MemoryBudget,int):boolean;13;2;3;invisible;1;0;0;
1879;flushOwner(Locker,MemoryBudget,int):LockInfo;17;2;3;invisible;1;0;0;
1880;getOwnerLockInfo(Locker):LockInfo;10;1;1;visible;
1881;isOwner(Locker,LockType):boolean;10;1;1;visible;
1882;isOwnedWriteLock(Locker):boolean;3;1;1;visible;
1883;isWaiter(Locker):boolean;11;1;1;visible;
1884;nWaiters():int;7;1;1;visible;
1885;nOwners():int;7;1;1;visible;
1886;lock(LockType,Locker,boolean,MemoryBudget,int):LockGrantType;53;1;1;visible;
1887;release(Locker,MemoryBudget,int):Set;55;2;2;invisible;0;0;1;
1888;tryLock(LockInfo,boolean,MemoryBudget,int):LockGrantType;76;1;1;visible;
1889;rangeInsertConflict(Locker):boolean;19;1;1;visible;
1890;demote(Locker):void;6;1;1;visible;
1891;transfer(Locker,Locker,MemoryBudget,int):LockType;35;2;3;invisible;1;0;0;
1892;setNewLocker(LockInfo,Locker):LockType;4;1;1;visible;
1893;transferMultiple(Locker,Locker[],MemoryBudget,int):LockType;47;1;1;visible;
1894;cloneLockInfo(LockInfo,Locker,Locker[],MemoryBudget,int):LockInfo;13;1;1;visible;
1895;getWriteOwnerLocker():Locker;19;1;1;visible;
1896;validateRequest(Locker):boolean;11;1;1;visible;
1897;toString():string;20;1;1;visible;
1898;newNonTxnLocker():Locker;2;1;1;visible;
1899;lockInternal(long,LockType,boolean,DatabaseImpl):LockResult;5;1;1;visible;
1900;releaseLock(long):void;3;1;1;visible;
1901;createdNode(long):boolean;2;1;1;visible;
1902;getAbortLsn(long):long;2;1;1;visible;
1903;getWriteLockInfo(long):WriteLockInfo;2;1;1;visible;
1904;addDeleteInfo(BIN,Key):void;2;1;2;visible;
1905;registerCursor(CursorImpl):void;2;1;1;visible;
1906;unRegisterCursor(CursorImpl):void;2;1;1;visible;
1907;isTransactional():boolean;2;1;1;visible;
1908;isReadCommittedIsolation():boolean;2;1;1;visible;
1909;generateId(TxnManager):long;2;1;1;visible;
1910;checkState(boolean):void;2;1;1;visible;
1911;lockInternal(long,LockType,boolean,DatabaseImpl):LockResult;12;1;1;visible;
1912;getWriteOwnerLocker(long):Locker;2;1;1;visible;
1913;getOwnerAbortLsn(long):long;5;1;1;visible;
1914;isTransactional():boolean;2;1;1;visible;
1915;isSerializableIsolation():boolean;2;1;1;visible;
1916;isReadCommittedIsolation():boolean;2;1;1;visible;
1917;getTxnLocker():Txn;2;1;2;visible;
1918;newNonTxnLocker():Locker;2;1;1;visible;
1919;releaseNonTxnLocks():void;2;1;1;visible;
1920;operationEnd():void;2;1;1;visible;
1921;operationEnd(boolean):void;21;2;2;visible;
1922;setHandleLockOwner(boolean,Database,boolean):void;6;1;1;visible;
1923;registerCursor(CursorImpl):void;1;1;1;visible;
1924;unRegisterCursor(CursorImpl):void;1;1;1;visible;
1925;getAbortLsn(long):long;2;1;1;visible;
1926;getWriteLockInfo(long):WriteLockInfo;2;1;1;visible;
1927;markDeleteAtTxnEnd(DatabaseImpl,boolean):void;3;1;2;visible;
1928;addLock(Long,Lock,LockType,LockGrantType):void;10;1;1;visible;
1929;removeLock(long,Lock):void;5;1;1;visible;
1930;createdNode(long):boolean;2;1;1;visible;
1931;moveWriteToReadLock(long,Lock):void;1;1;1;visible;
1932;collectStats(LockStats):LockStats;15;1;2;visible;
1933;attemptLock(Long,Locker,LockType,boolean):LockAttemptResult;7;1;1;visible;
1934;makeTimeoutMsg(string,Locker,long,LockType,LockGrantType,Lock,long,long,long,DatabaseImpl):string;7;1;1;visible;
1935;releaseAndFindNotifyTargets(long,Lock,Locker,boolean):Set;10;1;1;visible;
1936;transfer(long,Locker,Locker,boolean):void;7;1;1;visible;
1937;transferMultiple(long,Locker,Locker[]):void;7;1;1;visible;
1938;demote(long,Locker):void;7;1;1;visible;
1939;isLocked(Long):boolean;7;1;1;visible;
1940;isOwner(Long,Locker,LockType):boolean;7;1;1;visible;
1941;isWaiter(Long,Locker):boolean;7;1;1;visible;
1942;nWaiters(Long):int;7;1;1;visible;
1943;nOwners(Long):int;7;1;1;visible;
1944;getWriteOwnerLocker(Long):Locker;7;1;1;visible;
1945;validateOwnership(Long,Locker,LockType,boolean,MemoryBudget):boolean;7;1;1;visible;
1946;dumpLockTable(LockStats):void;6;2;3;invisible;0;1;0;
1947;getAbortKnownDeleted():boolean;2;1;1;visible;
1948;getAbortLsn():long;2;1;1;visible;
1949;getXid():Xid;2;1;1;visible;
1950;getLogType():LogEntryType;2;1;1;visible;
1951;getTagName():string;2;1;1;visible;
1952;getLogSize():int;5;1;1;visible;
1953;writeToLog(ByteBuffer):void;4;1;1;visible;
1954;readFromLog(ByteBuffer,byte):void;4;1;1;visible;
1955;dumpLog(StringBuffer,boolean):void;7;1;1;visible;
1956;operationEnd(boolean):void;6;1;1;visible;
1957;operationEnd():void;2;1;1;visible;
1958;setHandleLockOwner(boolean,Database,boolean):void;5;1;1;visible;
1959;checkState(boolean):void;3;1;1;visible;
1960;newNonTxnLocker():Locker;3;1;1;visible;
1961;sharesLocksWith(Locker):boolean;7;1;1;visible;
1962;isWriteLock():boolean;2;1;1;visible;
1963;setCausesRestart():void;2;1;1;visible;
1964;getCausesRestart():boolean;2;1;1;visible;
1965;getConflict(LockType):LockConflict;2;1;1;visible;
1966;getUpgrade(LockType):LockUpgrade;4;1;1;visible;
1967;toString():string;2;1;1;visible;
1968;getIllegal():boolean;2;1;1;visible;
1969;getUpgrade():LockType;2;1;1;visible;
1970;getPromotion():boolean;2;1;1;visible;
1971;setLastTxnId(long):void;2;1;2;visible;
1972;getLastTxnId():long;2;1;2;visible;
1973;incTxnId():long;2;1;2;visible;
1974;txnBegin(Transaction,TransactionConfig):Txn;4;1;2;visible;
1975;getLockManager():LockManager;2;1;1;visible;
1976;registerTxn(Txn):void;8;2;4;visible;
1977;unRegisterTxn(Txn,boolean):void;17;4;6;invisible;1;0;0;
1978;registerXATxn(Xid,Txn,boolean):void;8;3;4;invisible;0;0;1;
1979;unRegisterXATxn(Xid,boolean):void;10;3;3;visible;
1980;getTxnFromXid(Xid):Txn;2;1;1;visible;
1981;setTxnForThread(Transaction):void;3;1;1;visible;
1982;unsetTxnForThread():Transaction;3;1;1;visible;
1983;getTxnForThread():Transaction;2;1;1;visible;
1984;XARecover():Xid[];5;1;1;visible;
1985;areOtherSerializableTransactionsActive(Locker):boolean;3;1;1;visible;
1986;getFirstActiveLsn():long;19;2;5;invisible;1;0;0;
1987;txnStat(StatsConfig):TransactionStats;28;2;6;invisible;1;0;0;
1988;lockStat(StatsConfig):LockStats;2;1;2;visible;
1989;getBuddy():Locker;2;1;1;visible;
1990;getTxnLocker():Txn;2;1;2;visible;
1991;newNonTxnLocker():Locker;2;1;1;visible;
1992;releaseNonTxnLocks():void;3;1;1;visible;
1993;sharesLocksWith(Locker):boolean;5;1;1;visible;
1994;toString():string;2;1;1;visible;
1995;getLN():LN;2;1;1;visible;
1996;setLN(LN):void;2;1;1;visible;
1997;getLockGrant():LockGrantType;2;1;1;visible;
1998;setAbortLsn(long,boolean):void;2;1;1;visible;
1999;setAbortLsn(long,boolean,boolean):void;2;1;1;visible;
2000;setAbortLsnInternal(long,boolean,boolean):void;9;1;1;visible;
2001;LockManager(EnvironmentImpl);22;4;8;invisible;1;0;0;
2002;LockManager.LockAttemptResult(Lock,LockGrantType,boolean);4;1;1;visible;
2003;SyncedLockManager(EnvironmentImpl);2;1;1;visible;
2004;TxnCommit(long,long);2;1;1;visible;
2005;TxnCommit();1;1;1;visible;
2006;LockInfo(Locker,LockType);5;1;1;visible;
2007;TxnAbort(long,long);2;1;1;visible;
2008;TxnAbort();1;1;1;visible;
2009;LockConflict(boolean,boolean);3;1;1;visible;
2010;Txn(EnvironmentImpl,TransactionConfig);5;1;1;visible;
2011;Txn(EnvironmentImpl,TransactionConfig,long);6;1;1;visible;
2012;Txn();2;1;1;visible;
2013;Txn.DatabaseCleanupInfo(DatabaseImpl,boolean);3;1;1;visible;
2014;Locker(EnvironmentImpl,boolean,boolean);21;1;1;visible;
2015;Locker();1;1;1;visible;
2016;DummyLockManager(EnvironmentImpl);2;1;1;visible;
2017;TxnEnd(long,long);4;1;1;visible;
2018;TxnEnd();2;1;1;visible;
2019;Lock(Long);2;1;1;visible;
2020;Lock();1;1;1;visible;
2021;ReadCommittedLocker(EnvironmentImpl,Locker);6;2;2;visible;
2022;BasicLocker(EnvironmentImpl);2;1;1;visible;
2023;LatchedLockManager(EnvironmentImpl);2;1;1;visible;
2024;WriteLockInfo(Lock);6;1;1;visible;
2025;WriteLockInfo();6;1;1;visible;
2026;TxnPrepare(long,Xid);4;1;1;visible;
2027;TxnPrepare();1;1;1;visible;
2028;AutoTxn(EnvironmentImpl,TransactionConfig);2;1;1;visible;
2029;ThreadLocker(EnvironmentImpl);2;1;1;visible;
2030;LockType(int,boolean,string);4;1;1;visible;
2031;LockUpgrade(LockType,boolean,boolean);4;1;1;visible;
2032;TxnManager(EnvironmentImpl);25;5;7;visible;
2033;BuddyLocker(EnvironmentImpl,Locker);3;1;1;visible;
2034;LockGrantType(string);2;1;1;visible;
2035;LockResult(LockGrantType,WriteLockInfo);3;1;1;visible;
2036;setLockTableDump(boolean):void;2;1;1;visible;
2037;setDeadlockStackTrace(boolean):void;2;1;1;visible;
2038;getDeadlockStackTrace():boolean;2;1;1;visible;
2039;getWritableLocker(Environment,Transaction,boolean):Locker;2;2;5;invisible;0;1;0;
2040;getWritableLocker(Environment,Transaction,boolean,boolean,TransactionConfig):Locker;33;2;5;visible;
2041;getReadableLocker(Environment,Transaction,boolean,boolean,boolean):Locker;16;2;6;invisible;1;0;0;
2042;getReadableLocker(Environment,Database,Locker,boolean,boolean):Locker;16;2;5;invisible;1;0;0;
2043;getReadableLocker(Environment,Locker,boolean,boolean):Locker;28;2;3;invisible;1;0;0;
2044;getKey():byte[];2;1;1;visible;
2045;getData():byte[];2;1;1;visible;
2046;toString():string;2;1;1;visible;
2047;toString():string;2;1;1;visible;
2048;init(DatabaseImpl,byte[],int,int):void;20;3;4;invisible;1;0;0;
2049;initMemorySize():void;2;1;2;visible;
2050;getEqualityKey():long;4;1;1;visible;
2051;equals(Object):boolean;5;1;1;visible;
2052;hashCode():int;2;1;1;visible;
2053;compareTo(Object):int;12;1;1;visible;
2054;createNewInstance(byte[],int,int):IN;2;1;1;visible;
2055;postFetchInit(DatabaseImpl,long):void;9;2;3;invisible;1;0;0;
2056;postRecoveryInit(DatabaseImpl,long):void;5;2;2;visible;
2057;setLastFullLsn(long):void;2;1;1;visible;
2058;getLastFullVersion():long;2;1;1;visible;
2059;latch(boolean):void;5;2;2;visible;
2060;latchNoWait(boolean):boolean;7;2;2;invisible;0;0;1;
2061;latch():void;2;1;2;visible;
2062;latchNoWait():boolean;2;1;2;visible;
2063;releaseLatch():void;2;1;2;visible;
2064;releaseLatchIfOwner():void;2;1;2;visible;
2065;isLatchOwner():boolean;2;1;2;visible;
2066;getGeneration():long;2;1;1;visible;
2067;setGeneration():void;2;1;1;visible;
2068;setGeneration(long):void;2;1;1;visible;
2069;getLevel():int;2;1;1;visible;
2070;generateLevel(DatabaseId,int):int;5;1;1;visible;
2071;getDirty():boolean;2;1;1;visible;
2072;setDirty(boolean):void;2;1;1;visible;
2073;isRoot():boolean;2;1;1;visible;
2074;isDbRoot():boolean;2;1;1;visible;
2075;setIsRoot(boolean):void;3;1;1;visible;
2076;getIdentifierKey():byte[];2;1;1;visible;
2077;setIdentifierKey(byte[]):void;3;1;1;visible;
2078;getChildKey(IN):byte[];2;1;1;visible;
2079;selectKey(byte[],byte[]):byte[];2;1;1;visible;
2080;getDupKey():byte[];2;1;1;visible;
2081;getDupTreeKey():byte[];2;1;1;visible;
2082;getMainTreeKey():byte[];2;1;1;visible;
2083;getDatabase():DatabaseImpl;2;1;1;visible;
2084;setDatabase(DatabaseImpl):void;2;1;1;visible;
2085;getDatabaseId():DatabaseId;2;1;1;visible;
2086;setEntryInternal(int,int):void;15;1;1;visible;
2087;clearEntry(int):void;5;1;1;visible;
2088;getKey(int):byte[];2;1;1;visible;
2089;setKey(int,byte[]):void;3;1;1;visible;
2090;getMigrate(int):boolean;2;1;1;visible;
2091;setMigrate(int,boolean):void;5;1;1;visible;
2092;getState(int):byte;2;1;1;visible;
2093;getTarget(int):Node;2;1;1;visible;
2094;setTarget(int,Node):void;2;1;1;visible;
2095;getLsn(int):long;10;1;1;visible;
2096;setLsn(int,long):void;9;2;4;invisible;1;0;0;
2097;getEntryLsnLongArray():long[];2;1;1;visible;
2098;getEntryLsnByteArray():byte[];2;1;1;visible;
2099;initEntryLsn(int):void;4;1;1;visible;
2100;setLsnElement(int,long):void;34;1;1;visible;
2101;mutateToLongArray(int,long):void;8;1;1;visible;
2102;adjustFileNumbers(long):boolean;18;1;1;visible;
2103;setFileNumberOffset(int,byte):void;2;1;1;visible;
2104;getFileNumberOffset(int):byte;2;1;1;visible;
2105;setFileOffset(int,int):void;2;1;1;visible;
2106;getFileOffset(int):int;2;1;1;visible;
2107;put3ByteInt(int,int):void;4;1;1;visible;
2108;get3ByteInt(int):int;7;1;1;visible;
2109;isEntryPendingDeleted(int):boolean;2;1;1;visible;
2110;setPendingDeleted(int):void;3;1;1;visible;
2111;clearPendingDeleted(int):void;3;1;1;visible;
2112;isEntryKnownDeleted(int):boolean;2;1;1;visible;
2113;setKnownDeleted(int):void;3;1;1;visible;
2114;clearKnownDeleted(int):void;3;1;1;visible;
2115;isDirty(int):boolean;2;1;1;visible;
2116;getNEntries():int;2;1;1;visible;
2117;getMaxEntries():int;2;1;1;visible;
2118;fetchTarget(int):Node;26;2;2;invisible;0;0;1;
2119;setEntry(int,Node,byte[],long,byte):void;19;2;5;invisible;1;0;0;
2120;updateEntry(int,Node):void;7;2;3;visible;
2121;updateEntry(int,Node,long):void;10;2;4;invisible;1;0;0;
2122;updateEntry(int,Node,long,byte[]):void;11;2;4;invisible;1;0;0;
2123;updateEntry(int,long):void;3;1;1;visible;
2124;updateEntry(int,long,byte):void;4;1;1;visible;
2125;updateEntry(int,long,long,long):void;5;2;4;visible;
2126;updateEntryCompareKey(int,Node,long,byte[]):void;14;2;4;invisible;1;0;0;
2127;verifyMemorySize():boolean;10;2;3;invisible;0;0;1;
2128;getInMemorySize():long;2;1;2;visible;
2129;getEntryInMemorySize(int):long;2;1;2;visible;
2130;getEntryInMemorySize(byte[],Node):long;9;1;2;visible;
2131;computeMemorySize():long;14;1;2;visible;
2132;computeLsnOverhead():int;5;1;2;visible;
2133;getMemoryOverhead(MemoryBudget):long;2;1;2;visible;
2134;updateMemorySize(ChildReference,ChildReference):void;7;1;2;visible;
2135;updateMemorySize(long,long):void;3;1;2;visible;
2136;updateMemorySize(Node,Node):void;7;1;2;visible;
2137;changeMemorySize(long):void;12;1;2;visible;
2138;getAccumulatedDelta():int;2;1;2;visible;
2139;setInListResident(boolean):void;2;1;2;visible;
2140;isKeyInBounds(byte[]):boolean;17;1;1;visible;
2141;findEntry(byte[],boolean,boolean):int;41;1;1;visible;
2142;insertEntry(ChildReference):boolean;2;1;1;visible;
2143;insertEntry1(ChildReference):int;36;2;4;invisible;0;0;1;
2144;deleteEntry(byte[],boolean):boolean;8;1;1;visible;
2145;deleteEntry(int,boolean):boolean;25;3;4;invisible;0;0;1;
2146;setProhibitNextDelta():void;1;1;1;visible;
2147;compress(BINReference,boolean):boolean;2;1;1;visible;
2148;isCompressible():boolean;2;1;1;visible;
2149;validateSubtreeBeforeDelete(int):boolean;15;2;4;invisible;0;0;1;
2150;needsSplitting():boolean;5;1;1;visible;
2151;entryZeroKeyComparesLow():boolean;2;1;1;visible;
2152;split(IN,int,int):void;2;1;1;visible;
2153;splitInternal(IN,int,int,int):void;115;5;9;invisible;1;0;0;
2154;splitSpecial(IN,int,int,byte[],boolean):void;8;1;1;visible;
2155;adjustCursors(IN,int,int):void;2;1;1;visible;
2156;adjustCursorsForInsert(int):void;2;1;1;visible;
2157;getKeyComparator():Comparator;2;1;1;visible;
2158;shiftEntriesRight(int):void;5;1;1;visible;
2159;shiftEntriesLeft(int):void;6;1;1;visible;
2160;verify(byte[]):void;26;2;4;invisible;0;0;1;
2161;rebuildINList(INList):void;13;2;3;invisible;1;0;0;
2162;accountForSubtreeRemoval(INList,UtilizationTracker):void;16;2;5;invisible;1;0;0;
2163;isValidForDelete():boolean;21;2;4;invisible;0;0;1;
2164;findParent(SearchType,long,boolean,boolean,byte[],byte[],SearchResult,boolean,boolean,int,List,boolean):void;105;2;6;invisible;0;0;1;
2165;descendOnParentSearch(SearchResult,boolean,boolean,long,Node,boolean):void;20;2;4;invisible;0;0;1;
2166;isSoughtNode(long,boolean):boolean;8;2;2;invisible;0;0;1;
2167;canBeAncestor(boolean):boolean;2;1;1;visible;
2168;isEvictable():boolean;6;1;2;visible;
2169;getEvictionType():int;5;1;2;visible;
2170;isEvictionProhibited():boolean;2;1;2;visible;
2171;hasNonLNChildren():boolean;2;1;1;visible;
2172;getChildEvictionType():int;2;1;2;visible;
2173;hasResidentChildren():boolean;5;1;1;visible;
2174;accumulateStats(TreeWalkerStatsAccumulator):void;2;1;1;visible;
2175;log(LogManager):long;6;1;1;visible;
2176;log(LogManager,boolean,boolean):long;4;1;1;visible;
2177;logProvisional(LogManager,IN):long;5;1;1;visible;
2178;log(LogManager,boolean,boolean,boolean,IN):long;2;1;1;visible;
2179;logInternal(LogManager,boolean,boolean,boolean,IN):long;16;1;1;visible;
2180;trackProvisionalObsolete(IN,long,long):void;27;2;6;invisible;0;0;1;
2181;flushProvisionalObsolete(LogManager):void;9;3;4;invisible;0;0;1;
2182;getLogType():LogEntryType;2;1;1;visible;
2183;getLogSize():int;26;1;1;visible;
2184;writeToLog(ByteBuffer):void;39;1;1;visible;
2185;readFromLog(ByteBuffer,byte):void;58;2;2;visible;
2186;dumpLog(StringBuffer,boolean):void;34;1;1;visible;
2187;logEntryIsTransactional():boolean;2;1;1;visible;
2188;getTransactionId():long;2;1;1;visible;
2189;dumpLogAdditional(StringBuffer):void;1;1;1;visible;
2190;beginTag():string;2;1;1;visible;
2191;endTag():string;2;1;1;visible;
2192;dumpKeys():void;3;1;1;visible;
2193;dumpString(int,boolean):string;67;1;1;visible;
2194;toString():string;2;1;1;visible;
2195;shortClassName():string;2;1;1;visible;
2196;traceSplit(Level,IN,IN,long,long,long,int,int,int):void;27;2;3;visible;
2197;traceDelete(Level,int):void;11;2;3;visible;
2198;isDeleted():boolean;2;1;1;visible;
2199;makeDeleted():void;4;1;1;visible;
2200;getDatabase():DatabaseImpl;2;1;1;visible;
2201;postFetchInit(DatabaseImpl,long):void;2;1;1;visible;
2202;toString():string;2;1;1;visible;
2203;beginTag():string;2;1;1;visible;
2204;endTag():string;2;1;1;visible;
2205;dumpString(int,boolean):string;10;1;1;visible;
2206;getTransactionalLogType():LogEntryType;2;1;1;visible;
2207;getLogType():LogEntryType;2;1;1;visible;
2208;getLogSize():int;2;1;1;visible;
2209;writeToLog(ByteBuffer):void;5;1;1;visible;
2210;readFromLog(ByteBuffer,byte):void;4;1;1;visible;
2211;dumpLogAdditional(StringBuffer,boolean):void;2;1;1;visible;
2212;postFetchInit(DatabaseImpl,long):void;2;1;1;visible;
2213;getNodeId():long;2;1;1;visible;
2214;setNodeId(long):void;2;1;1;visible;
2215;verify(byte[]):void;1;1;1;visible;
2216;containsDuplicates():boolean;2;1;1;visible;
2217;getLevel():int;2;1;1;visible;
2218;matchLNByNodeId(TreeLocation,long):boolean;2;1;1;visible;
2219;rebuildINList(INList):void;1;1;1;visible;
2220;accountForSubtreeRemoval(INList,UtilizationTracker):void;1;2;2;visible;
2221;isValidForDelete():boolean;1;1;1;visible;
2222;isSoughtNode(long,boolean):boolean;1;1;1;visible;
2223;canBeAncestor(boolean):boolean;1;1;1;visible;
2224;getMemorySizeIncludedByParent():long;2;1;1;visible;
2225;toString():string;2;1;1;visible;
2226;beginTag():string;2;1;1;visible;
2227;endTag():string;2;1;1;visible;
2228;dump(int):void;2;1;1;visible;
2229;dumpString(int,boolean):string;9;1;1;visible;
2230;shortDescription():string;2;1;1;visible;
2231;getType():string;2;1;1;visible;
2232;getLogType():LogEntryType;1;1;1;visible;
2233;marshallOutsideWriteLatch():boolean;2;1;1;visible;
2234;countAsObsoleteWhenLogged():boolean;2;1;1;visible;
2235;postLogWork(long):void;1;1;1;visible;
2236;getLogSize():int;2;1;1;visible;
2237;writeToLog(ByteBuffer):void;2;1;1;visible;
2238;readFromLog(ByteBuffer,byte):void;2;1;1;visible;
2239;dumpLog(StringBuffer,boolean):void;4;1;1;visible;
2240;getDeletedNodeId():long;2;1;1;visible;
2241;getDeletedIdKey():byte[];2;1;1;visible;
2242;getDatabaseId():DatabaseId;2;1;1;visible;
2243;getLogType():LogEntryType;2;1;1;visible;
2244;marshallOutsideWriteLatch():boolean;2;1;1;visible;
2245;countAsObsoleteWhenLogged():boolean;2;1;1;visible;
2246;postLogWork(long):void;1;1;1;visible;
2247;getLogSize():int;2;1;1;visible;
2248;writeToLog(ByteBuffer):void;4;1;1;visible;
2249;readFromLog(ByteBuffer,byte):void;4;1;1;visible;
2250;dumpLog(StringBuffer,boolean):void;6;1;1;visible;
2251;logEntryIsTransactional():boolean;2;1;1;visible;
2252;getTransactionId():long;2;1;1;visible;
2253;hasNext():boolean;15;2;3;invisible;0;0;1;
2254;next():Object;14;2;2;invisible;0;0;1;
2255;remove():void;2;1;1;visible;
2256;advance():void;7;1;1;visible;
2257;reset():void;5;1;1;visible;
2258;toString():string;14;1;1;visible;
2259;init(byte[],int,int,int,int):void;6;1;1;visible;
2260;init(byte[],int,int):void;2;1;1;visible;
2261;getData():byte[];2;1;1;visible;
2262;copyData():byte[];5;1;1;visible;
2263;isDeleted():boolean;2;1;1;visible;
2264;makeDeleted():void;2;1;1;visible;
2265;isValidForDelete():boolean;2;1;1;visible;
2266;isSoughtNode(long,boolean):boolean;2;1;1;visible;
2267;canBeAncestor(boolean):boolean;2;1;1;visible;
2268;delete(DatabaseImpl,byte[],byte[],long,Locker):long;41;2;3;invisible;0;1;0;
2269;modify(byte[],DatabaseImpl,byte[],long,Locker):long;6;1;1;visible;
2270;addToDirtyMap(Map):void;1;1;1;visible;
2271;rebuildINList(INList):void;2;1;1;visible;
2272;accountForSubtreeRemoval(INList,UtilizationTracker):void;2;2;2;visible;
2273;getMemorySizeIncludedByParent():long;5;1;2;visible;
2274;beginTag():string;2;1;1;visible;
2275;endTag():string;2;1;1;visible;
2276;dumpString(int,boolean):string;18;1;1;visible;
2277;logProvisional(EnvironmentImpl,DatabaseId,byte[],long):long;2;1;1;visible;
2278;log(EnvironmentImpl,DatabaseId,byte[],long,Locker):long;2;1;1;visible;
2279;log(EnvironmentImpl,DatabaseId,byte[],long,Locker,boolean):long;25;2;4;invisible;1;0;0;
2280;getTransactionalLogType():LogEntryType;2;1;1;visible;
2281;countAsObsoleteWhenLogged():boolean;2;1;1;visible;
2282;getLogType():LogEntryType;2;1;1;visible;
2283;getLogSize():int;8;1;1;visible;
2284;writeToLog(ByteBuffer):void;8;1;1;visible;
2285;readFromLog(ByteBuffer,byte):void;5;1;1;visible;
2286;dumpLog(StringBuffer,boolean):void;9;1;1;visible;
2287;logEntryIsTransactional():boolean;2;1;1;visible;
2288;getTransactionId():long;2;1;1;visible;
2289;dumpLogAdditional(StringBuffer,boolean):void;1;1;1;visible;
2290;getDeletedNodeId():long;2;1;1;visible;
2291;getDeletedMainKey():byte[];2;1;1;visible;
2292;getDeletedDupKey():byte[];2;1;1;visible;
2293;getDatabaseId():DatabaseId;2;1;1;visible;
2294;getLogType():LogEntryType;2;1;1;visible;
2295;marshallOutsideWriteLatch():boolean;2;1;1;visible;
2296;countAsObsoleteWhenLogged():boolean;2;1;1;visible;
2297;postLogWork(long):void;1;1;1;visible;
2298;getLogSize():int;2;1;1;visible;
2299;writeToLog(ByteBuffer):void;5;1;1;visible;
2300;readFromLog(ByteBuffer,byte):void;5;1;1;visible;
2301;dumpLog(StringBuffer,boolean):void;7;1;1;visible;
2302;logEntryIsTransactional():boolean;2;1;1;visible;
2303;getTransactionId():long;2;1;1;visible;
2304;setTrackedSummary(TrackedFileSummary):void;3;1;1;visible;
2305;getTrackedSummary():TrackedFileSummary;2;1;1;visible;
2306;getBaseSummary():FileSummary;2;1;1;visible;
2307;getObsoleteOffsets():PackedOffsets;2;1;1;visible;
2308;hasStringKey(byte[]):boolean;5;1;1;visible;
2309;getFileNumber(byte[]):long;9;1;1;visible;
2310;postFetchInit(DatabaseImpl,long):void;4;1;1;visible;
2311;toString():string;2;1;1;visible;
2312;beginTag():string;2;1;1;visible;
2313;endTag():string;2;1;1;visible;
2314;dumpString(int,boolean):string;8;1;1;visible;
2315;dumpLogAdditional(StringBuffer,boolean):void;5;1;1;visible;
2316;getTransactionalLogType():LogEntryType;3;1;1;visible;
2317;getLogType():LogEntryType;2;1;1;visible;
2318;marshallOutsideWriteLatch():boolean;2;1;1;visible;
2319;countAsObsoleteWhenLogged():boolean;2;1;1;visible;
2320;getLogSize():int;7;1;1;visible;
2321;writeToLog(ByteBuffer):void;14;1;1;visible;
2322;readFromLog(ByteBuffer,byte):void;7;1;1;visible;
2323;getOffsets():void;6;1;1;visible;
2324;createNewInstance(byte[],int,int):IN;2;1;1;visible;
2325;generateLevel(DatabaseId,int):int;2;1;1;visible;
2326;getKeyComparator():Comparator;2;1;1;visible;
2327;getDupKey():byte[];2;1;1;visible;
2328;getChildKey(IN):byte[];2;1;1;visible;
2329;selectKey(byte[],byte[]):byte[];2;1;1;visible;
2330;getDupTreeKey():byte[];2;1;1;visible;
2331;getMainTreeKey():byte[];2;1;1;visible;
2332;containsDuplicates():boolean;2;1;1;visible;
2333;getBINDeltaType():LogEntryType;2;1;1;visible;
2334;createReference():BINReference;2;1;1;visible;
2335;computeMemorySize():long;7;1;2;visible;
2336;getMemoryOverhead(MemoryBudget):long;2;1;2;visible;
2337;canBeAncestor(boolean):boolean;2;1;1;visible;
2338;hasNonLNChildren():boolean;2;1;1;visible;
2339;getCursorBIN(CursorImpl):BIN;2;1;1;visible;
2340;getCursorBINToBeRemoved(CursorImpl):BIN;2;1;1;visible;
2341;getCursorIndex(CursorImpl):int;2;1;1;visible;
2342;setCursorBIN(CursorImpl,BIN):void;2;1;1;visible;
2343;setCursorIndex(CursorImpl,int):void;2;1;1;visible;
2344;matchLNByNodeId(TreeLocation,long):boolean;11;1;1;visible;
2345;accumulateStats(TreeWalkerStatsAccumulator):void;2;1;1;visible;
2346;beginTag():string;2;1;1;visible;
2347;endTag():string;2;1;1;visible;
2348;dumpString(int,boolean):string;14;1;1;visible;
2349;getLogType():LogEntryType;2;1;1;visible;
2350;getLogSize():int;6;1;1;visible;
2351;writeToLog(ByteBuffer):void;5;1;1;visible;
2352;readFromLog(ByteBuffer,byte):void;5;1;1;visible;
2353;dumpLogAdditional(StringBuffer):void;3;1;1;visible;
2354;shortClassName():string;2;1;1;visible;
2355;init(Node,byte[],long,int):void;5;1;1;visible;
2356;getKey():byte[];2;1;1;visible;
2357;setKey(byte[]):void;3;1;1;visible;
2358;fetchTarget(DatabaseImpl,IN):Node;21;2;2;invisible;0;0;1;
2359;getState():byte;2;1;1;visible;
2360;getTarget():Node;2;1;1;visible;
2361;setTarget(Node):void;2;1;1;visible;
2362;clearTarget():void;2;1;1;visible;
2363;getLsn():long;2;1;1;visible;
2364;setLsn(long):void;3;1;1;visible;
2365;isPendingDeleted():boolean;2;1;1;visible;
2366;isKnownDeleted():boolean;2;1;1;visible;
2367;isDirty():boolean;2;1;1;visible;
2368;getMigrate():boolean;2;1;1;visible;
2369;setMigrate(boolean):void;5;1;1;visible;
2370;getLogSize():int;5;1;1;visible;
2371;writeToLog(ByteBuffer):void;8;1;1;visible;
2372;readFromLog(ByteBuffer,byte):void;8;1;1;visible;
2373;dumpLog(StringBuffer,boolean):void;7;1;1;visible;
2374;logEntryIsTransactional():boolean;2;1;1;visible;
2375;getTransactionId():long;2;1;1;visible;
2376;dumpString(int,boolean):string;27;1;1;visible;
2377;toString():string;2;1;1;visible;
2378;getDupCount():int;2;1;1;visible;
2379;incDupCount():int;4;1;1;visible;
2380;decDupCount():int;4;1;1;visible;
2381;setDupCount(int):void;2;1;1;visible;
2382;containsDuplicates():boolean;2;1;1;visible;
2383;isDeleted():boolean;2;1;1;visible;
2384;getMemorySizeIncludedByParent():long;2;1;2;visible;
2385;accumulateStats(TreeWalkerStatsAccumulator):void;2;1;2;visible;
2386;toString():string;2;1;1;visible;
2387;beginTag():string;2;1;1;visible;
2388;endTag():string;2;1;1;visible;
2389;dumpString(int,boolean):string;13;1;1;visible;
2390;getTransactionalLogType():LogEntryType;2;1;1;visible;
2391;getLogType():LogEntryType;2;1;1;visible;
2392;getLogSize():int;2;1;1;visible;
2393;writeToLog(ByteBuffer):void;4;1;1;visible;
2394;readFromLog(ByteBuffer,byte):void;3;1;1;visible;
2395;dumpLogAdditional(StringBuffer,boolean):void;3;1;1;visible;
2396;createReference():BINReference;2;1;1;visible;
2397;createNewInstance(byte[],int,int):IN;2;1;1;visible;
2398;getChildKey(IN):byte[];2;1;1;visible;
2399;getBINDeltaType():LogEntryType;2;1;1;visible;
2400;getLastDeltaVersion():long;2;1;1;visible;
2401;setProhibitNextDelta():void;2;1;1;visible;
2402;descendOnParentSearch(SearchResult,boolean,boolean,long,Node,boolean):void;40;2;5;invisible;0;0;1;
2403;canBeAncestor(boolean):boolean;3;1;1;visible;
2404;isEvictionProhibited():boolean;2;1;1;visible;
2405;hasNonLNChildren():boolean;7;1;1;visible;
2406;getChildEvictionType():int;12;2;4;invisible;0;0;1;
2407;entryZeroKeyComparesLow():boolean;2;1;1;visible;
2408;setKnownDeleted(int):void;11;2;3;invisible;1;0;0;
2409;setKnownDeletedLeaveTarget(int):void;6;1;1;visible;
2410;clearKnownDeleted(int):void;3;1;1;visible;
2411;getMemoryOverhead(MemoryBudget):long;2;1;2;visible;
2412;getCursorSet():Set;2;1;1;visible;
2413;addCursor(CursorImpl):void;4;2;2;visible;
2414;removeCursor(CursorImpl):void;4;2;2;visible;
2415;nCursors():int;2;1;1;visible;
2416;getCursorBIN(CursorImpl):BIN;2;1;1;visible;
2417;getCursorBINToBeRemoved(CursorImpl):BIN;2;1;1;visible;
2418;getCursorIndex(CursorImpl):int;2;1;1;visible;
2419;setCursorBIN(CursorImpl,BIN):void;2;1;1;visible;
2420;setCursorIndex(CursorImpl,int):void;2;1;1;visible;
2421;splitSpecial(IN,int,int,byte[],boolean):void;11;1;1;visible;
2422;adjustCursors(IN,int,int):void;85;2;2;visible;
2423;verifyCursors():void;8;1;2;visible;
2424;adjustCursorsForInsert(int):void;13;2;2;visible;
2425;adjustCursorsForMutation(int,DBIN,int,CursorImpl):void;13;2;2;visible;
2426;compress(BINReference,boolean):boolean;78;2;2;invisible;0;0;1;
2427;isCompressible():boolean;2;1;1;visible;
2428;evictLNs():long;19;4;6;invisible;0;1;0;
2429;evictLN(int):void;6;3;5;invisible;0;1;0;
2430;evictInternal(int,Cleaner):long;8;2;5;invisible;0;1;0;
2431;validateSubtreeBeforeDelete(int):boolean;2;1;1;visible;
2432;isValidForDelete():boolean;31;2;5;invisible;1;0;0;
2433;accumulateStats(TreeWalkerStatsAccumulator):void;2;1;1;visible;
2434;getKeyComparator():Comparator;2;1;1;visible;
2435;beginTag():string;2;1;1;visible;
2436;endTag():string;2;1;1;visible;
2437;getLogType():LogEntryType;2;1;1;visible;
2438;shortClassName():string;2;1;1;visible;
2439;logInternal(LogManager,boolean,boolean,boolean,IN):long;33;2;3;invisible;1;0;0;
2440;doDeltaLog(BINDelta):boolean;6;1;1;visible;
2441;generateLevel(DatabaseId,int):int;2;1;1;visible;
2442;createNewInstance(byte[],int,int):IN;2;1;1;visible;
2443;getDupKey():byte[];2;1;1;visible;
2444;getChildKey(IN):byte[];2;1;1;visible;
2445;selectKey(byte[],byte[]):byte[];2;1;1;visible;
2446;getDupTreeKey():byte[];2;1;1;visible;
2447;getMainTreeKey():byte[];2;1;1;visible;
2448;getDupCountLNRef():ChildReference;2;1;1;visible;
2449;getDupCountLN():DupCountLN;2;1;1;visible;
2450;setDupCountLN(ChildReference):void;4;2;2;visible;
2451;updateDupCountLN(Node):void;7;2;3;visible;
2452;updateDupCountLNRefAndNullTarget(long):void;10;2;4;invisible;1;0;0;
2453;updateDupCountLNRef(long):void;3;1;1;visible;
2454;containsDuplicates():boolean;2;1;1;visible;
2455;isDbRoot():boolean;2;1;1;visible;
2456;getKeyComparator():Comparator;2;1;1;visible;
2457;incrementDuplicateCount(LockResult,byte[],Locker,boolean):void;13;1;1;visible;
2458;computeMemorySize():long;9;1;2;visible;
2459;getMemoryOverhead(MemoryBudget):long;2;1;2;visible;
2460;matchLNByNodeId(TreeLocation,long):boolean;8;1;1;visible;
2461;accumulateStats(TreeWalkerStatsAccumulator):void;2;1;1;visible;
2462;getLogType():LogEntryType;2;1;1;visible;
2463;logInternal(LogManager,boolean,boolean,boolean,IN):long;7;2;2;visible;
2464;getLogSize():int;10;1;1;visible;
2465;writeToLog(ByteBuffer):void;10;1;1;visible;
2466;readFromLog(ByteBuffer,byte):void;11;1;1;visible;
2467;dumpLogAdditional(StringBuffer):void;5;1;1;visible;
2468;beginTag():string;2;1;1;visible;
2469;endTag():string;2;1;1;visible;
2470;dumpString(int,boolean):string;22;1;1;visible;
2471;toString():string;2;1;1;visible;
2472;shortClassName():string;2;1;1;visible;
2473;isDeleted():boolean;2;1;1;visible;
2474;makeDeleted():void;2;1;1;visible;
2475;getId():DatabaseId;2;1;1;visible;
2476;setId(DatabaseId):void;2;1;1;visible;
2477;toString():string;2;1;1;visible;
2478;beginTag():string;2;1;1;visible;
2479;endTag():string;2;1;1;visible;
2480;dumpString(int,boolean):string;13;1;1;visible;
2481;getTransactionalLogType():LogEntryType;2;1;1;visible;
2482;getLogType():LogEntryType;2;1;1;visible;
2483;getLogSize():int;5;1;1;visible;
2484;writeToLog(ByteBuffer):void;8;1;1;visible;
2485;readFromLog(ByteBuffer,byte):void;7;1;1;visible;
2486;dumpLogAdditional(StringBuffer,boolean):void;2;1;1;visible;
2487;getNodeId():long;2;1;1;visible;
2488;getDatabaseId():DatabaseId;2;1;1;visible;
2489;getKey():byte[];2;1;1;visible;
2490;getData():byte[];2;1;1;visible;
2491;addDeletedKey(Key):void;4;1;1;visible;
2492;addDeletedKeys(BINReference):void;5;1;1;visible;
2493;removeDeletedKey(Key):void;5;1;1;visible;
2494;hasDeletedKey(Key):boolean;2;1;1;visible;
2495;deletedKeysExist():boolean;2;1;1;visible;
2496;getDeletedKeyIterator():Iterator;5;1;1;visible;
2497;equals(Object):boolean;6;1;1;visible;
2498;hashCode():int;2;1;1;visible;
2499;toString():string;2;1;1;visible;
2500;getNumDeltas():int;2;1;1;visible;
2501;getDbId():DatabaseId;2;1;1;visible;
2502;getLastFullLsn():long;2;1;1;visible;
2503;reconstituteBIN(EnvironmentImpl):BIN;47;2;5;invisible;1;0;0;
2504;getLogType():LogEntryType;2;1;1;visible;
2505;marshallOutsideWriteLatch():boolean;2;1;1;visible;
2506;countAsObsoleteWhenLogged():boolean;2;1;1;visible;
2507;postLogWork(long):void;1;1;1;visible;
2508;readFromLog(ByteBuffer,byte):void;11;1;1;visible;
2509;getLogSize():int;10;1;1;visible;
2510;writeToLog(ByteBuffer):void;11;1;1;visible;
2511;dumpLog(StringBuffer,boolean):void;10;1;1;visible;
2512;logEntryIsTransactional():boolean;2;1;1;visible;
2513;getTransactionId():long;2;1;1;visible;
2514;init(DatabaseImpl):void;6;2;2;visible;
2515;setDatabase(DatabaseImpl):void;6;1;1;visible;
2516;getDatabase():DatabaseImpl;2;1;1;visible;
2517;setRoot(ChildReference,boolean):void;4;2;3;visible;
2518;makeRootChildReference(Node,byte[],long):ChildReference;2;1;1;visible;
2519;makeRootChildReference():ChildReference;2;1;1;visible;
2520;fetchTarget(DatabaseImpl,IN):Node;6;2;2;visible;
2521;setTarget(Node):void;4;2;2;visible;
2522;clearTarget():void;4;2;2;visible;
2523;setLsn(long):void;4;2;2;visible;
2524;getRootLsn():long;5;1;1;visible;
2525;getTreeStats():TreeStats;2;1;1;visible;
2526;getTreeStatsAccumulator():TreeWalkerStatsAccumulator;5;1;1;visible;
2527;setTreeStatsAccumulator(TreeWalkerStatsAccumulator):void;2;1;1;visible;
2528;withRootLatchedExclusive(WithRootLatched):IN;6;2;3;invisible;0;0;1;
2529;withRootLatchedShared(WithRootLatched):IN;6;2;3;invisible;0;0;1;
2530;delete(byte[],UtilizationTracker):void;71;4;9;invisible;1;0;0;
2531;releaseNodeLadderLatches(ArrayList):void;7;1;2;visible;
2532;logTreeRemoval(IN,UtilizationTracker):IN;25;3;3;visible;
2533;cascadeUpdates(ArrayList,BIN,int):boolean;26;2;2;invisible;0;0;1;
2534;deleteDup(byte[],byte[],UtilizationTracker):void;20;3;7;invisible;1;0;0;
2535;deleteDupSubtree(byte[],BIN,int):IN;62;3;4;invisible;0;0;1;
2536;getFirstNode():IN;3;1;1;visible;
2537;getLastNode():IN;3;1;1;visible;
2538;getFirstNode(DIN):DBIN;9;2;3;invisible;1;0;0;
2539;getLastNode(DIN):DBIN;9;2;3;invisible;1;0;0;
2540;getParentINForChildIN(IN,boolean,boolean):SearchResult;2;1;1;visible;
2541;getParentINForChildIN(IN,boolean,boolean,int,List):SearchResult;15;2;5;invisible;1;0;0;
2542;getParentINForChildIN(long,boolean,boolean,byte[],byte[],boolean,boolean,int,List,boolean):SearchResult;19;2;2;invisible;0;0;1;
2543;getParentBINForChildLN(TreeLocation,byte[],byte[],LN,boolean,boolean,boolean,boolean):boolean;77;2;3;invisible;0;0;1;
2544;searchDupTreeByNodeId(TreeLocation,Node,LN,boolean,boolean):boolean;16;2;2;invisible;0;0;1;
2545;searchDupTreeForDupCountLNParent(TreeLocation,byte[],Node):boolean;13;1;1;visible;
2546;searchDupTreeForDBIN(TreeLocation,byte[],DIN,LN,boolean,boolean,boolean,boolean,boolean):boolean;42;2;6;invisible;1;0;0;
2547;getNextBin(BIN,boolean):BIN;2;1;1;visible;
2548;getPrevBin(BIN,boolean):BIN;2;1;1;visible;
2549;getNextBinInternal(boolean,BIN,boolean):BIN;110;2;11;invisible;1;0;0;
2550;splitRoot():void;46;3;7;invisible;1;0;0;
2551;search(byte[],SearchType,long,BINBoundary,boolean):IN;7;1;1;visible;
2552;searchSplitsAllowed(byte[],long,boolean):IN;51;2;7;invisible;0;0;1;
2553;searchSubTree(IN,byte[],SearchType,long,BINBoundary,boolean):IN;67;2;7;invisible;1;0;0;
2554;searchDeletableSubTree(IN,byte[],ArrayList):void;52;2;5;invisible;1;0;0;
2555;searchSubTreeSplitsAllowed(IN,byte[],long,boolean):IN;19;1;1;visible;
2556;searchSubTreeUntilSplit(IN,byte[],long,boolean):IN;47;2;9;invisible;1;0;0;
2557;forceSplit(IN,byte[]):void;123;2;9;invisible;1;0;0;
2558;getRootIN(boolean):IN;11;2;4;invisible;1;0;0;
2559;insert(LN,byte[],boolean,CursorImpl,LockResult):boolean;117;3;7;invisible;1;0;0;
2560;insertDuplicate(byte[],BIN,LN,LogManager,INList,CursorImpl,LockResult,boolean):boolean;160;3;10;invisible;0;0;1;
2561;maybeSplitDuplicateRoot(BIN,int):boolean;37;3;4;invisible;0;0;1;
2562;createDuplicateTree(byte[],LogManager,INList,LN,CursorImpl):DIN;124;3;11;invisible;1;0;0;
2563;validateInsertArgs(boolean):void;3;1;1;visible;
2564;findBinForInsert(byte[],LogManager,INList,CursorImpl):BIN;92;2;11;invisible;1;0;0;
2565;accountForSubtreeRemoval(INList,IN,UtilizationTracker):void;8;4;6;invisible;0;1;0;
2566;getLogSize():int;7;1;1;visible;
2567;writeToLog(ByteBuffer):void;4;1;1;visible;
2568;readFromLog(ByteBuffer,byte):void;5;1;1;visible;
2569;dumpLog(StringBuffer,boolean):void;5;1;1;visible;
2570;logEntryIsTransactional():boolean;2;1;1;visible;
2571;getTransactionId():long;2;1;1;visible;
2572;rebuildINList():void;10;2;3;invisible;0;0;1;
2573;dump():void;2;1;1;visible;
2574;dumpString(int):string;17;1;1;visible;
2575;validateDelete(int):boolean;7;2;3;invisible;0;0;1;
2576;validateINList(IN):void;19;1;1;visible;
2577;setWaitHook(TestHook):void;2;1;1;visible;
2578;setSearchHook(TestHook):void;2;1;1;visible;
2579;setCkptHook(TestHook):void;2;1;1;visible;
2580;traceSplitRoot(Level,string,IN,long,IN,long):void;12;2;3;visible;
2581;traceMutate(Level,BIN,LN,LN,long,DupCountLN,long,DIN,long,DBIN,long):void;29;2;3;visible;
2582;traceInsert(Level,EnvironmentImpl,BIN,LN,long,int):void;16;2;3;visible;
2583;traceInsertDuplicate(Level,EnvironmentImpl,BIN,LN,long,long):void;17;2;3;visible;
2584;toString():string;2;1;1;visible;
2585;getKey():byte[];2;1;1;visible;
2586;compareTo(Object):int;5;1;1;visible;
2587;equals(Object):boolean;2;1;1;visible;
2588;hashCode():int;5;1;1;visible;
2589;getLogSize():int;4;1;1;visible;
2590;writeToLog(ByteBuffer):void;4;1;1;visible;
2591;readFromLog(ByteBuffer,byte):void;4;1;1;visible;
2592;dumpLog(StringBuffer,boolean):void;4;1;1;visible;
2593;logEntryIsTransactional():boolean;2;1;1;visible;
2594;getTransactionId():long;2;1;1;visible;
2595;getKey():byte[];2;1;1;visible;
2596;getState():byte;2;1;1;visible;
2597;isKnownDeleted():boolean;2;1;1;visible;
2598;getLsn():long;2;1;1;visible;
2599;DBINReference(long,DatabaseId,byte[],byte[]);3;1;1;visible;
2600;SearchResult();6;1;1;visible;
2601;IN();3;1;1;visible;
2602;IN(DatabaseImpl,byte[],int,int);5;2;2;visible;
2603;MapLN(DatabaseImpl);4;1;1;visible;
2604;MapLN();3;1;1;visible;
2605;NodeNotEmptyException();1;1;1;visible;
2606;Node(boolean);3;1;1;visible;
2607;INDeleteInfo(long,byte[],DatabaseId);4;1;1;visible;
2608;INDeleteInfo();2;1;1;visible;
2609;TreeIterator(Tree);8;2;3;invisible;1;0;0;
2610;DuplicateEntryException();2;1;1;visible;
2611;DuplicateEntryException(string);2;1;1;visible;
2612;LN();3;1;1;visible;
2613;LN(byte[]);6;1;1;visible;
2614;LN(DatabaseEntry);9;1;1;visible;
2615;SplitRequiredException();1;1;1;visible;
2616;INDupDeleteInfo(long,byte[],byte[],DatabaseId);5;1;1;visible;
2617;INDupDeleteInfo();2;1;1;visible;
2618;FileSummaryLN(FileSummary);6;1;1;visible;
2619;FileSummaryLN();3;1;1;visible;
2620;DBIN();2;1;1;visible;
2621;DBIN(DatabaseImpl,byte[],int,byte[],int);3;1;1;visible;
2622;ChildReference();2;1;1;visible;
2623;ChildReference(Node,byte[],long);2;1;1;visible;
2624;ChildReference(Node,byte[],long,byte);2;1;1;visible;
2625;DupCountLN(int);7;1;1;visible;
2626;DupCountLN();3;1;1;visible;
2627;BIN();4;1;1;visible;
2628;BIN(DatabaseImpl,byte[],int,int);5;1;1;visible;
2629;DIN();4;1;1;visible;
2630;DIN(DatabaseImpl,byte[],int,byte[],ChildReference,int);7;2;2;visible;
2631;NameLN(DatabaseId);4;1;1;visible;
2632;NameLN();3;1;1;visible;
2633;BINReference(long,DatabaseId,byte[]);4;1;1;visible;
2634;InconsistentNodeException();2;1;1;visible;
2635;InconsistentNodeException(string);2;1;1;visible;
2636;BINDelta(BIN);13;1;1;visible;
2637;BINDelta();4;1;1;visible;
2638;Tree.SearchType();1;1;1;visible;
2639;Tree(DatabaseImpl);3;1;1;visible;
2640;Tree();4;1;1;visible;
2641;Tree.RootChildReference();2;1;1;visible;
2642;Tree.RootChildReference(Node,byte[],long);2;1;1;visible;
2643;Tree.SplitInfo(IN,IN,int);4;1;1;visible;
2644;TrackingInfo(long,long);3;1;1;visible;
2645;CursorsExistException();1;1;1;visible;
2646;Key(byte[]);6;1;1;visible;
2647;DeltaInfo(byte[],long,byte);4;1;1;visible;
2648;DeltaInfo();2;1;1;visible;
2649;isStateKnownDeleted(byte):boolean;2;1;1;visible;
2650;isStatePendingDeleted(byte):boolean;2;1;1;visible;
2651;makeFetchErrorMsg(string,IN,long,byte):string;15;1;1;visible;
2652;computeOverhead(DbConfigManager):long;4;1;2;visible;
2653;computeArraysOverhead(DbConfigManager):long;6;1;2;visible;
2654;dumpDeletedState(StringBuffer,byte):void;5;1;1;visible;
2655;getNextGeneration():long;2;1;1;visible;
2656;setLastNodeId(long):void;3;1;1;visible;
2657;getNextNodeId():long;2;1;1;visible;
2658;getLastId():long;2;1;1;visible;
2659;makePartialKey(long):byte[];5;1;1;visible;
2660;makeFullKey(long,int):byte[];10;1;1;visible;
2661;computeOverhead(DbConfigManager):long;4;1;2;visible;
2662;computeOverhead(DbConfigManager):long;4;1;2;visible;
2663;computeOverhead(DbConfigManager):long;4;1;2;visible;
2664;indent(int):string;2;1;1;visible;
2665;dumpByteArray(byte[]):string;13;1;1;visible;
2666;makeKey(DatabaseEntry):byte[];8;1;1;visible;
2667;compareKeys(byte[],byte[],Comparator):int;5;1;1;visible;
2668;compareUnsignedBytes(byte[],byte[]):int;14;1;1;visible;
2669;dumpString(byte[],int):string;19;1;1;visible;
2670;getNoFormatString(byte[]):string;2;1;1;visible;
2672;printUsage(string):void;4;1;1;visible;
2673;parseArgs(string[]):void;26;1;1;visible;
2674;stats(PrintStream):boolean;21;2;3;invisible;0;0;1;
2675;dump(File,string,string,long,long,boolean,boolean):void;17;1;1;visible;
2676;printUsage(string):void;4;1;1;visible;
2677;parseArgs(string[]):void;28;1;1;visible;
2678;openEnv():void;5;1;1;visible;
2679;closeEnv():void;5;1;1;visible;
2680;verify(PrintStream):boolean;40;2;3;invisible;0;0;1;
2681;printUsage(string):void;5;1;1;visible;
2682;parseArgs(string[]):void;24;1;1;visible;
2683;print(PrintStream):void;29;1;1;visible;
2684;compareTo(Object):int;3;1;1;visible;
2685;add(Summary):void;3;1;1;visible;
2686;print(PrintStream):void;12;1;1;visible;
2687;utilization():int;2;1;1;visible;
2688;pad(PrintStream,string,int,char):void;5;1;1;visible;
2689;listDbs():void;7;1;1;visible;
2690;printUsage(string):void;4;1;1;visible;
2691;parseArgs(string[]):boolean;44;1;1;visible;
2692;openEnv(boolean):void;7;1;1;visible;
2693;dump():void;23;2;4;invisible;1;0;0;
2694;printHeader(PrintStream,boolean,boolean):void;9;1;1;visible;
2695;dumpOne(PrintStream,byte[],boolean):void;5;1;1;visible;
2696;setCommandLine(boolean):void;2;1;1;visible;
2697;setEnv(Environment):void;2;1;1;visible;
2698;setDbName(string):void;2;1;1;visible;
2699;setInputReader(BufferedReader):void;2;1;1;visible;
2700;setNoOverwrite(boolean):void;2;1;1;visible;
2701;setTextFileMode(boolean):void;2;1;1;visible;
2702;setIgnoreUnknownConfig(boolean):void;2;1;1;visible;
2703;setProgressInterval(long):void;2;1;1;visible;
2704;setTotalLoadBytes(long):void;2;1;1;visible;
2705;load():boolean;23;2;4;invisible;1;0;0;
2706;loadConfigLine(string):void;39;1;1;visible;
2707;loadHeader():void;7;1;1;visible;
2708;loadData(Database):void;35;1;1;visible;
2709;loadLine(string):byte[];12;1;1;visible;
2710;readPrintableLine(string):byte[];31;1;1;visible;
2711;DbStat();1;1;1;visible;
2712;DbStat(Environment,string);2;1;1;visible;
2713;DbVerify();1;1;1;visible;
2714;DbVerify(Environment,string,boolean);4;1;1;visible;
2715;DbSpace();1;1;1;visible;
2716;DbSpace(Environment,boolean,boolean,boolean);2;1;1;visible;
2717;DbSpace(EnvironmentImpl,boolean,boolean,boolean);5;1;1;visible;
2718;DbSpace.Summary();1;1;1;visible;
2719;DbSpace.Summary(Long,FileSummary);4;1;1;visible;
2720;DbDump();1;1;1;visible;
2721;DbDump(Environment,string,PrintStream,string,boolean);11;1;1;visible;
2722;DbLoad();1;1;1;visible;
2723;main(string[]):void;41;1;1;visible;
2724;usage():void;7;1;1;visible;
2725;main(string[]):void;80;1;1;visible;
2726;usage(string):void;5;1;1;visible;
2727;printCacheSizes(PrintStream,long,int,int,int,int,long):void;25;1;1;visible;
2728;calcInSize(int,int,int,boolean):int;13;1;1;visible;
2729;calcLnSize(int):int;2;1;1;visible;
2730;line(long,long,string):string;11;1;1;visible;
2731;column(StringBuffer,string):void;7;1;1;visible;
2732;measure(PrintStream,File,long,int,int,int,boolean):void;23;2;3;invisible;0;0;1;
2733;openEnvironment(File,boolean):Environment;5;1;1;visible;
2734;openDatabase(Environment,int,boolean):Database;5;1;1;visible;
2735;insertRecords(PrintStream,Environment,Database,long,int,int,boolean):void;37;2;2;invisible;0;0;1;
2736;preloadRecords(PrintStream,Database):void;14;1;1;visible;
2737;printStats(PrintStream,Environment,string):void;7;1;2;visible;
2738;main(string[]):void;14;1;1;visible;
2739;main(string[]):void;99;11;16;invisible;0;1;0;
2740;removeAndClean(Environment,string):void;33;3;8;invisible;1;0;0;
2741;getSecs(long,long):string;2;1;1;visible;
2742;preload(Environment,string):void;15;1;1;visible;
2743;usage():void;6;1;1;visible;
2744;main(string[]):void;53;1;1;visible;
2745;usage():void;12;1;1;visible;
2746;main(string[]):void;18;1;1;visible;
2747;main(string[]):void;16;1;1;visible;
2748;main(string[]):void;16;1;1;visible;
2749;main(string[]):void;6;1;1;visible;
2750;printUsage(string):void;4;1;1;visible;
2751;parseArgs(string[]):DbLoad;69;1;1;visible;
2752;setName(string):void;2;1;1;visible;
2753;acquire():void;38;2;4;invisible;0;0;1;
2754;acquireNoWait():boolean;19;2;4;invisible;0;0;1;
2755;releaseIfOwner():void;2;1;1;visible;
2756;release():void;3;1;1;visible;
2757;doRelease(boolean):boolean;22;2;2;invisible;0;0;1;
2758;isOwner():boolean;2;1;1;visible;
2759;owner():Thread;2;1;1;visible;
2760;nWaiters():int;2;1;1;visible;
2761;getLatchStats():LatchStats;6;1;2;visible;
2762;toString():string;2;1;1;visible;
2763;getNameString():string;2;1;1;visible;
2764;noteLatch():boolean;2;1;1;visible;
2765;unNoteLatch(boolean):boolean;7;1;1;visible;
2766;toString():string;2;1;1;visible;
2767;getOwner():Thread;2;1;1;visible;
2768;setName(string):void;2;1;1;visible;
2769;acquire():void;15;2;3;invisible;0;0;1;
2770;acquireNoWait():boolean;16;2;4;invisible;0;0;1;
2771;releaseIfOwner():void;2;1;1;visible;
2772;release():void;3;1;1;visible;
2773;doRelease(boolean):boolean;11;2;2;invisible;0;0;1;
2774;isOwner():boolean;2;1;1;visible;
2775;owner():Thread;2;1;1;visible;
2776;nWaiters():int;2;1;1;visible;
2777;getLatchStats():LatchStats;6;1;2;visible;
2778;toString():string;2;1;1;visible;
2779;noteLatch():boolean;2;1;1;visible;
2780;unNoteLatch(boolean):boolean;7;1;1;visible;
2781;setName(string):void;2;1;1;visible;
2782;setNoteLatch(boolean):void;2;1;1;visible;
2783;acquireExclusive():void;8;1;1;visible;
2784;acquireExclusiveNoWait():boolean;9;1;1;visible;
2785;acquireShared():void;6;1;1;visible;
2786;release():void;11;1;1;visible;
2787;noteLatch():boolean;2;1;1;visible;
2788;unNoteLatch():boolean;2;1;1;visible;
2789;toString():string;10;1;1;visible;
2790;clone():Object;2;1;1;visible;
2791;noteLatch(Object):boolean;8;1;1;visible;
2792;unNoteLatch(Object,string):boolean;7;1;1;visible;
2793;countLatchesHeld():int;7;1;1;visible;
2794;latchesHeldToString():string;9;1;1;visible;
2795;clearNotes():void;2;1;1;visible;
2796;getNameString(string):string;5;1;1;visible;
2797;toString(string,Object,List,int):string;14;1;1;visible;
2798;setName(string):void;2;1;1;visible;
2799;setNoteLatch(boolean):void;2;1;1;visible;
2800;acquireExclusive():void;23;2;3;invisible;0;0;1;
2801;acquireExclusiveNoWait():boolean;19;2;2;invisible;0;0;1;
2802;acquireShared():void;19;2;2;invisible;0;0;1;
2803;release():void;16;2;2;invisible;0;0;1;
2804;indexOf(Thread):int;7;1;1;visible;
2805;firstWriter():int;7;1;1;visible;
2806;getNameString():string;2;1;1;visible;
2807;noteLatch():boolean;2;1;1;visible;
2808;unNoteLatch():boolean;2;1;1;visible;
2809;isWriteLockedByCurrentThread():boolean;6;1;1;visible;
2810;LatchNotHeldException();2;1;1;visible;
2811;LatchNotHeldException(string);2;1;1;visible;
2812;LatchImpl(string,EnvironmentImpl);3;1;1;visible;
2813;LatchImpl(EnvironmentImpl);3;1;1;visible;
2814;LatchImpl.LatchWaiter(Thread);3;1;1;visible;
2815;Java5LatchImpl.JEReentrantLock(boolean);2;1;1;visible;
2816;Java5LatchImpl();2;1;1;visible;
2817;Java5SharedLatchImpl();2;1;1;visible;
2818;LatchTable(string);3;1;1;visible;
2819;SharedLatchImpl(string,EnvironmentImpl);3;1;1;visible;
2820;SharedLatchImpl.Owner(Thread,int);3;1;1;visible;
2821;LatchException();2;1;1;visible;
2822;LatchException(string);2;1;1;visible;
2823;getJava5LatchClass():Class;2;1;1;visible;
2824;makeLatch(string,EnvironmentImpl):Latch;11;1;1;visible;
2825;makeLatch(EnvironmentImpl):Latch;9;1;1;visible;
2826;makeSharedLatch(string,EnvironmentImpl):SharedLatch;11;1;1;visible;
2827;countLatchesHeld():int;2;1;1;visible;
2828;dumpLatchesHeld():void;2;1;1;visible;
2829;latchesHeldToString():string;2;1;1;visible;
2830;clearNotes():void;2;1;1;visible;
2831;validate(Long):void;8;1;1;visible;
2832;validateValue(string):void;4;1;1;visible;
2833;getExtraDescription():string;9;1;1;visible;
2834;validate(Integer):void;8;1;1;visible;
2835;validateValue(string):void;4;1;1;visible;
2836;getExtraDescription():string;9;1;1;visible;
2837;validate(Short):void;8;1;1;visible;
2838;validateValue(string):void;4;1;1;visible;
2839;getExtraDescription():string;9;1;1;visible;
2840;validateValue(string):void;3;1;1;visible;
2841;getName():string;2;1;1;visible;
2842;getDescription():string;2;1;1;visible;
2843;getExtraDescription():string;3;1;1;visible;
2844;getDefault():string;2;1;1;visible;
2845;isMutable():boolean;2;1;1;visible;
2846;validate():void;3;1;1;visible;
2847;validateName(string):void;3;1;1;visible;
2848;validateValue(string):void;1;1;1;visible;
2849;toString():string;2;1;1;visible;
2850;LongConfigParam(string,Long,Long,Long,boolean,string);5;1;1;visible;
2851;IntConfigParam(string,Integer,Integer,Integer,boolean,string);5;1;1;visible;
2852;ShortConfigParam(string,Short,Short,Short,boolean,string);5;1;1;visible;
2853;BooleanConfigParam(string,boolean,boolean,string);3;1;1;visible;
2854;ConfigParam(string,string,boolean,string);10;1;1;visible;
2855;main(string[]):void;19;1;1;visible;
2856;addSupportedParam(ConfigParam):void;2;1;1;visible;
2857;toString():string;4;1;1;visible;
2858;clearEnv():void;2;1;1;visible;
2859;verifyCursors():void;20;2;3;invisible;0;0;1;
2860;addToQueue(Object):void;2;1;1;visible;
2861;getBinRefQueueSize():int;5;1;1;visible;
2862;addBinKeyToQueue(BIN,Key,boolean):void;5;1;1;visible;
2863;addBinRefToQueue(BINReference,boolean):void;5;1;1;visible;
2864;addMultipleBinRefsToQueue(Collection,boolean):void;8;1;1;visible;
2865;addBinRefToQueueAlreadyLatched(BINReference):void;7;1;1;visible;
2866;addBinKeyToQueueAlreadyLatched(BIN,Key):void;11;1;1;visible;
2867;exists(long):boolean;4;1;1;visible;
2868;removeCompressibleBinReference(long):BINReference;13;1;1;visible;
2869;loadStats(StatsConfig,EnvironmentStats):void;22;1;2;visible;
2870;nDeadlockRetries():int;2;1;1;visible;
2871;onWakeup():void;7;2;3;invisible;1;0;0;
2872;doCompress():void;80;5;12;invisible;0;1;0;
2873;compressBin(DatabaseImpl,BIN,BINReference,UtilizationTracker):boolean;34;4;7;invisible;1;0;0;
2874;pruneBIN(DatabaseImpl,BINReference,byte[],boolean,byte[],UtilizationTracker):boolean;28;3;7;invisible;0;1;0;
2875;checkForRelocatedSlots(DatabaseImpl,BINReference,UtilizationTracker):void;15;2;3;invisible;0;1;0;
2876;isRunnable():boolean;2;1;1;visible;
2877;searchForBIN(DatabaseImpl,BINReference):BIN;2;1;1;visible;
2878;searchForBIN(DatabaseImpl,byte[],byte[]):BIN;53;2;6;invisible;1;0;0;
2879;resetPerRunCounters():void;6;1;2;visible;
2880;accumulatePerRunCounters():void;6;1;2;visible;
2881;lazyCompress(IN):void;34;2;6;invisible;1;0;0;
2882;findDBAndBIN(BINSearch,BINReference,DbTree,Map):boolean;27;5;8;invisible;1;0;0;
2883;INCompressor(EnvironmentImpl,long,string);6;1;1;visible;
2884;iterator():Iterator;2;1;1;visible;
2885;pack(long[]):void;15;1;1;visible;
2886;toArray():long[];8;1;1;visible;
2887;append(short[],int,long):int;11;1;1;visible;
2888;hasNext():boolean;2;1;1;visible;
2889;next():long;11;1;1;visible;
2890;getLogSize():int;2;1;1;visible;
2891;writeToLog(ByteBuffer):void;8;1;1;visible;
2892;readFromLog(ByteBuffer,byte):void;7;1;1;visible;
2893;dumpLog(StringBuffer,boolean):void;13;1;1;visible;
2894;getTransactionId():long;2;1;1;visible;
2895;logEntryIsTransactional():boolean;2;1;1;visible;
2896;toString():string;4;1;1;visible;
2897;envConfigUpdate(DbConfigManager):void;37;3;3;visible;
2898;getUtilizationTracker():UtilizationTracker;2;1;1;visible;
2899;getUtilizationProfile():UtilizationProfile;2;1;1;visible;
2900;runOrPause(boolean):void;5;1;2;visible;
2901;wakeup():void;4;1;1;visible;
2902;requestShutdown():void;4;1;2;visible;
2903;shutdown():void;6;1;2;visible;
2904;getNWakeupRequests():int;6;1;2;visible;
2905;areThreadsRunning():boolean;5;1;1;visible;
2906;doClean(boolean,boolean):int;4;1;1;visible;
2907;loadStats(StatsConfig,EnvironmentStats):void;43;1;2;visible;
2908;deleteSafeToDeleteFiles():void;60;4;6;invisible;0;0;1;
2909;traceFileNotDeleted(Exception,long):void;3;2;2;visible;
2910;getFilesAtCheckpointStart():Set[];4;1;1;visible;
2911;updateFilesAtCheckpointEnd(Set[]):void;3;1;1;visible;
2912;updateReadOnlyFileCollections():void;5;2;2;visible;
2913;processPending():void;26;4;4;invisible;0;0;1;
2914;processPendingLN(LN,DatabaseImpl,byte[],byte[],TreeLocation):void;101;6;10;invisible;0;0;1;
2915;isEvictable(BIN,int):boolean;11;1;2;visible;
2916;lazyMigrateLNs(BIN,boolean):void;35;1;1;visible;
2918;lazyMigrateDupCountLN(DIN,ChildReference,boolean):void;11;1;1;visible;
2919;shouldMigrateLN(boolean,boolean,boolean,boolean,long):boolean;35;2;4;invisible;0;0;1;
2920;migrateLN(DatabaseImpl,long,BIN,int,boolean,boolean,long,string):void;119;3;8;invisible;0;0;1;
2921;migrateDupCountLN(DatabaseImpl,long,DIN,ChildReference,boolean,boolean,long,string):void;90;3;6;invisible;0;0;1;
2922;getLNMainKey(BIN,int):byte[];5;1;1;visible;
2923;getLNDupKey(BIN,int,LN):byte[];14;1;1;visible;
2924;addPendingDB(DatabaseImpl):void;6;2;3;invisible;0;0;1;
2925;trace(Level,string,Node,long,boolean,boolean,boolean):void;17;2;3;visible;
2926;add(long,boolean):boolean;10;1;1;visible;
2927;size():int;2;1;1;visible;
2928;merge(OffsetList):boolean;19;1;1;visible;
2929;toArray():long[];10;1;1;visible;
2930;contains(long):boolean;6;1;1;visible;
2931;add(long):Segment;16;1;1;visible;
2932;get(int):long;2;1;1;visible;
2933;next():Segment;2;1;1;visible;
2934;setNext(Segment):void;2;1;1;visible;
2935;size():int;2;1;1;visible;
2936;getLN():LN;2;1;1;visible;
2937;getDbId():DatabaseId;2;1;1;visible;
2938;getKey():byte[];2;1;1;visible;
2939;getDupKey():byte[];2;1;1;visible;
2940;getMemorySize():int;9;1;1;visible;
2941;clearEnv():void;5;1;1;visible;
2942;nDeadlockRetries():int;2;1;1;visible;
2943;addToQueue(Object):void;2;1;1;visible;
2944;onWakeup():void;5;1;1;visible;
2945;doClean(boolean,boolean,boolean):int;65;4;8;invisible;0;0;1;
2946;processFile(Long):boolean;144;7;25;invisible;1;0;0;
2947;processLN(Long,TreeLocation,Long,LNInfo,LookAheadCache,Map):void;100;6;14;invisible;0;0;1;
2948;processFoundLN(LNInfo,long,long,BIN,int,DIN):void;103;3;5;invisible;0;0;1;
2949;processIN(IN,DatabaseImpl,long):void;44;5;11;invisible;1;0;0;
2950;findINInTree(Tree,DatabaseImpl,IN,long):IN;42;2;3;invisible;1;0;0;
2951;doWork(ChildReference):IN;9;1;1;visible;
2952;isRoot(Tree,DatabaseImpl,IN,long):IN;3;1;1;visible;
2953;resetPerRunCounters():void;14;1;2;visible;
2954;accumulatePerRunCounters():void;13;1;2;visible;
2955;toString():string;4;1;1;visible;
2956;isEmpty():boolean;2;1;1;visible;
2957;isFull():boolean;2;1;1;visible;
2958;nextOffset():Long;2;1;1;visible;
2959;add(Long,LNInfo):void;6;2;2;visible;
2960;remove(Long):LNInfo;8;2;2;invisible;0;0;1;
2961;selectFileForCleaning(UtilizationProfile,boolean,boolean,int):Long;28;1;1;visible;
2962;isFileCleaningInProgress(Long):boolean;2;1;1;visible;
2963;putBackFileForCleaning(Long):void;3;1;1;visible;
2964;addCleanedFile(Long):void;3;1;1;visible;
2965;getLowUtilizationFiles():Set;3;1;1;visible;
2966;getMustBeCleanedFiles():Set;4;1;1;visible;
2967;getBacklog():int;2;1;1;visible;
2968;getFilesAtCheckpointStart():Set[];6;1;1;visible;
2969;updateFilesAtCheckpointEnd(Set[]):void;14;1;1;visible;
2970;addPendingLN(LN,DatabaseId,byte[],byte[]):boolean;5;1;1;visible;
2971;getPendingLNs():LNInfo[];7;1;1;visible;
2972;removePendingLN(long):void;3;1;1;visible;
2973;addPendingDB(DatabaseId):boolean;4;1;2;visible;
2974;getPendingDBs():DatabaseId[];7;1;2;visible;
2975;removePendingDB(DatabaseId):void;3;1;2;visible;
2976;copySafeToDeleteFiles():Set;5;1;1;visible;
2977;removeDeletedFile(Long):void;2;1;1;visible;
2978;updateProcessedFiles():void;8;2;3;invisible;1;0;0;
2979;processLSN(long,LogEntryType):void;2;1;1;visible;
2980;getLsns():Set;2;1;1;visible;
2981;envConfigUpdate(DbConfigManager):void;4;1;1;visible;
2982;isRMWFixEnabled():boolean;2;1;1;visible;
2983;getNumberOfFiles():int;3;1;1;visible;
2984;getCheapestFileToClean(SortedSet):Long;16;1;1;visible;
2985;getBestFileForCleaning(FileSelector,boolean,Set):Long;59;1;1;visible;
2986;estimateUPObsoleteSize(FileSummary):int;23;1;1;visible;
2987;getFileSummary(Long):FileSummary;19;1;1;visible;
2988;isForceCleanFile(long):boolean;8;1;1;visible;
2989;parseForceCleanFiles(string):void;41;1;1;visible;
2990;countAndLogSummaries(TrackedFileSummary[]):void;12;1;1;visible;
2991;getFileSummaryMap(boolean):SortedMap;19;1;1;visible;
2992;clearCache():void;7;2;2;visible;
2993;removeFile(Long):void;11;2;2;invisible;0;0;1;
2994;deleteFileSummary(Long):void;39;3;3;invisible;0;0;1;
2995;flushFileSummary(TrackedFileSummary):void;3;1;1;visible;
2996;putFileSummary(TrackedFileSummary):PackedOffsets;39;2;2;invisible;0;0;1;
2997;getObsoleteDetail(Long,PackedOffsets,boolean):TrackedFileSummary;72;4;4;invisible;0;0;1;
2998;populateCache():boolean;100;5;11;invisible;1;0;0;
2999;getFirstFSLN(CursorImpl,long,DatabaseEntry,DatabaseEntry,LockType):boolean;13;1;1;visible;
3000;openFileSummaryDatabase():boolean;22;3;5;invisible;1;0;0;
3001;insertFileSummary(FileSummaryLN,long,int):void;22;3;4;invisible;0;0;1;
3002;verifyFileSummaryDatabase():boolean;39;3;3;invisible;0;0;1;
3003;verifyLsnIsObsolete(long):boolean;49;3;5;invisible;1;0;0;
3004;getAllowFlush():boolean;2;1;1;visible;
3005;setAllowFlush(boolean):void;2;1;1;visible;
3006;getFileNumber():long;2;1;1;visible;
3007;getMemorySize():int;2;1;2;visible;
3008;reset():void;8;2;3;invisible;1;0;0;
3009;trackObsolete(long):void;16;2;6;invisible;1;0;0;
3010;addTrackedSummary(TrackedFileSummary):void;16;2;2;invisible;0;0;1;
3011;getObsoleteOffsets():long[];5;1;1;visible;
3012;containsObsoleteOffset(long):boolean;5;1;1;visible;
3013;updateMemoryBudget(int):void;3;1;2;visible;
3014;isEmpty():boolean;2;1;1;visible;
3015;getObsoleteLNSize():int;9;1;1;visible;
3016;getObsoleteINSize():int;9;1;1;visible;
3017;getObsoleteSize():int;13;1;1;visible;
3018;getEntriesCounted():int;2;1;1;visible;
3019;getNonObsoleteCount():int;2;1;1;visible;
3020;reset():void;9;1;1;visible;
3021;add(FileSummary):void;9;1;1;visible;
3022;getLogSize():int;2;1;1;visible;
3023;writeToLog(ByteBuffer):void;9;1;1;visible;
3024;readFromLog(ByteBuffer,byte):void;14;1;1;visible;
3025;dumpLog(StringBuffer,boolean):void;18;1;1;visible;
3026;getTransactionId():long;2;1;1;visible;
3027;logEntryIsTransactional():boolean;2;1;1;visible;
3028;toString():string;4;1;1;visible;
3029;getEnvironment():EnvironmentImpl;2;1;1;visible;
3030;evictMemory():long;38;2;7;invisible;1;0;0;
3031;activateCleaner():void;3;1;1;visible;
3032;getTrackedFiles():TrackedFileSummary[];2;1;1;visible;
3033;getTrackedFile(long):TrackedFileSummary;8;1;1;visible;
3034;countNewLogEntry(long,LogEntryType,int):boolean;13;1;1;visible;
3035;countObsoleteNode(long,LogEntryType):void;4;1;1;visible;
3036;countObsoleteNodeInexact(long,LogEntryType):void;3;1;1;visible;
3037;countOneNode(TrackedFileSummary,LogEntryType):void;6;1;1;visible;
3038;addSummary(long,TrackedFileSummary):void;3;1;1;visible;
3039;getUnflushableTrackedSummary(long):TrackedFileSummary;4;1;1;visible;
3040;getFile(long):TrackedFileSummary;14;1;1;visible;
3041;resetFile(TrackedFileSummary):void;4;1;1;visible;
3042;takeSnapshot():void;6;1;1;visible;
3043;inArray(Object,Object[]):boolean;5;1;1;visible;
3044;PackedOffsets();1;1;1;visible;
3045;PackedOffsets.Iterator();1;1;1;visible;
3046;Cleaner(EnvironmentImpl,string);15;1;1;visible;
3047;OffsetList();3;1;1;visible;
3048;OffsetList.Segment();2;1;1;visible;
3049;LNInfo(LN,DatabaseId,byte[],byte[]);5;1;1;visible;
3050;FileProcessor(string,EnvironmentImpl,Cleaner,UtilizationProfile,FileSelector);6;1;1;visible;
3051;FileProcessor.RootDoWork(DatabaseImpl,IN,long);4;1;1;visible;
3052;FileProcessor.LookAheadCache(int);5;2;2;visible;
3053;FileSelector();12;2;3;invisible;1;0;0;
3054;UtilizationProfile(EnvironmentImpl,UtilizationTracker);9;1;1;visible;
3055;TrackedFileSummary(UtilizationTracker,long,boolean);4;1;1;visible;
3056;FileSummary();1;1;1;visible;
3057;UtilizationTracker(EnvironmentImpl);2;1;1;visible;
3058;UtilizationTracker(EnvironmentImpl,Cleaner);7;1;1;visible;
3059;checkLsns(Database):void;53;1;1;visible;
3060;utilization(long,long):int;5;1;1;visible;
3061;toString():string;4;1;1;visible;
3062;addToQueue(Object):void;2;1;2;visible;
3063;loadStats(StatsConfig,EnvironmentStats):void;13;1;2;visible;
3064;clearEnv():void;2;1;1;visible;
3065;nDeadlockRetries():int;2;1;2;visible;
3066;alert():void;3;1;1;visible;
3067;onWakeup():void;4;1;2;visible;
3068;doEvict(string):void;3;1;1;visible;
3069;doEvict(string,boolean):void;16;1;1;visible;
3070;doCriticalEviction():void;13;2;3;visible;
3071;evictBatch(string,long):long;74;5;12;invisible;1;0;0;
3072;isRunnable(string):boolean;49;3;11;invisible;1;0;0;
3073;selectIN(INList,ScanIterator):IN;87;3;5;invisible;1;0;0;
3074;normalizeLevel(IN,int):int;5;1;1;visible;
3075;evict(INList,IN,ScanIterator):long;52;4;4;invisible;0;0;1;
3076;evictIN(IN,IN,int,INList,ScanIterator,boolean):long;58;4;8;invisible;1;0;0;
3077;getNextNode():IN;2;1;1;visible;
3078;setRunnableHook(TestHook):void;2;1;1;visible;
3079;count(IN):boolean;3;1;1;visible;
3080;getCandidates():List;2;1;1;visible;
3081;clear():boolean;3;1;1;visible;
3082;reset(IN):void;2;1;1;visible;
3083;mark():IN;6;1;1;visible;
3084;resetToMark():void;2;1;1;visible;
3085;hasNext():boolean;2;1;1;visible;
3086;next():IN;2;1;1;visible;
3087;remove():void;2;1;1;visible;
3088;Evictor(EnvironmentImpl,string);15;2;3;invisible;1;0;0;
3089;Evictor.ScanIterator(IN,INList);3;1;1;visible;
3090;update(int):void;6;1;1;visible;
3091;update(byte[],int,int):void;13;1;1;visible;
3092;reset():void;2;1;1;visible;
3093;getValue():long;2;1;1;visible;
3094;toString():string;2;1;1;visible;
3095;toString():string;2;1;1;visible;
3096;size():int;7;1;1;visible;
3097;remove(Object):boolean;12;1;1;visible;
3098;add(Object):boolean;12;1;1;visible;
3099;copy():Set;9;1;1;visible;
3100;iterator():Iterator;6;1;1;visible;
3101;hasNext():boolean;2;1;1;visible;
3102;next():Object;5;1;1;visible;
3103;remove():void;4;1;1;visible;
3104;setDumpCorruptedBounds(boolean):void;2;1;1;visible;
3105;dump():void;26;1;1;visible;
3106;scavengeDbTree(long,long):void;15;1;1;visible;
3108;reportProgress(long,long):long;8;1;1;visible;
3109;checkProcessEntry(LogEntry,LogEntryType,boolean):boolean;42;2;4;invisible;1;0;0;
3110;processDbTreeEntry(LogEntry,LogEntryType):void;20;1;1;visible;
3111;scavenge(long,long):void;13;1;1;visible;
3113;processRegularEntry(LogEntry,LogEntryType):void;15;1;1;visible;
3114;getOutputStream(Integer):PrintStream;17;1;1;visible;
3115;closeOutputStreams():void;6;1;1;visible;
3116;getMessage():string;2;1;2;visible;
3117;getCurrentTimestamp():Timestamp;3;1;2;visible;
3118;getLogType():LogEntryType;2;1;2;visible;
3119;marshallOutsideWriteLatch():boolean;2;1;2;visible;
3120;countAsObsoleteWhenLogged():boolean;2;1;2;visible;
3121;postLogWork(long):void;1;1;2;visible;
3122;getLogSize():int;2;1;2;visible;
3123;writeToLog(ByteBuffer):void;4;1;2;visible;
3124;readFromLog(ByteBuffer,byte):void;4;1;2;visible;
3125;dumpLog(StringBuffer,boolean):void;8;1;2;visible;
3126;logEntryIsTransactional():boolean;2;1;2;visible;
3127;getTransactionId():long;2;1;2;visible;
3128;toString():string;2;1;2;visible;
3129;hashCode():int;2;1;2;visible;
3130;equals(Object):boolean;11;1;2;visible;
3131;getThread():Thread;2;1;1;visible;
3132;runOrPause(boolean):void;11;1;1;visible;
3133;requestShutdown():void;2;1;1;visible;
3134;shutdown():void;11;1;1;visible;
3135;toString():string;4;1;1;visible;
3136;addToQueue(Object):void;7;2;3;visible;
3137;getQueueSize():int;8;2;4;invisible;1;0;0;
3138;addToQueueAlreadyLatched(Collection):void;2;1;1;visible;
3139;wakeup():void;4;1;1;visible;
3140;run():void;51;2;3;invisible;0;0;1;
3141;nDeadlockRetries():int;2;1;1;visible;
3142;onWakeup():void;1;1;1;visible;
3143;isShutdownRequested():boolean;2;1;1;visible;
3144;isRunning():boolean;2;1;1;visible;
3145;getNWakeupRequests():int;2;1;1;visible;
3146;logEntryIsTransactionalX():boolean;2;1;1;visible;
3147;getTransactionIdX():long;2;1;1;visible;
3148;putIN(IN):void;7;1;1;visible;
3149;set(long):void;8;1;1;visible;
3150;get(long):boolean;8;1;1;visible;
3151;getBitSet(long,boolean):BitSet;8;1;1;visible;
3152;getIntIndex(long):int;2;1;1;visible;
3153;getNumSegments():int;2;1;1;visible;
3154;cardinality():int;7;1;1;visible;
3155;EventTrace(string);2;1;1;visible;
3156;EventTrace();2;1;1;visible;
3157;EventTrace.ExceptionEventTrace();2;1;1;visible;
3158;TinyHashSet.SingleElementIterator(Object,TinyHashSet);4;1;1;visible;
3159;DbScavenger(Environment,PrintStream,string,boolean,boolean,boolean);7;1;1;visible;
3160;Tracer(string);3;1;2;visible;
3161;Tracer();1;1;2;visible;
3162;DaemonThread(long,string,EnvironmentImpl);7;2;2;visible;
3163;DbLsn();1;1;1;visible;
3164;BitMap();2;1;1;visible;
3165;NotImplementedYetException();2;1;1;visible;
3166;NotImplementedYetException(string);2;1;1;visible;
3167;InternalException();2;1;1;visible;
3168;InternalException(string);2;1;1;visible;
3169;makeChecksum():Checksum;5;1;1;visible;
3170;getArg(string[],int):string;5;1;1;visible;
3171;readLongNumber(string):long;5;1;1;visible;
3172;formatEntry(StringBuffer,byte[],boolean):void;20;1;1;visible;
3173;isPrint(int):boolean;2;1;1;visible;
3174;makeUtilityEnvironment(File,boolean):EnvironmentImpl;17;4;5;invisible;1;0;0;
3175;getJavaCommand(Class):string;4;1;1;visible;
3176;addEvent(EventTrace):void;6;1;1;visible;
3177;addEvent(string):void;4;1;1;visible;
3178;dumpEvents():void;15;1;1;visible;
3179;formatLong(long):string;6;1;1;visible;
3180;getBoolean(Properties,string):boolean;6;1;1;visible;
3181;validateProps(Properties,Set,string):Properties;10;1;1;visible;
3182;validateProp(string,Set,string):void;3;1;1;visible;
3183;microsToMillis(long):long;2;1;1;visible;
3184;main(string[]):void;10;1;1;visible;
3185;usage(string):void;4;1;1;visible;
3186;trace(Level,EnvironmentImpl,string):void;3;2;2;visible;
3187;trace(EnvironmentImpl,string,string,string,Throwable):void;5;2;3;visible;
3188;parseLevel(EnvironmentImpl,ConfigParam):Level;7;1;1;visible;
3189;getStackTrace(Throwable):string;7;1;1;visible;
3190;doHookIfSet(TestHook):boolean;4;1;1;visible;
3191;makeLsn(long,long):long;2;1;1;visible;
3192;longToLsn(Long):long;4;1;1;visible;
3193;getFileNumber(long):long;2;1;1;visible;
3194;getFileOffset(long):long;2;1;1;visible;
3195;compareLong(long,long):int;7;1;1;visible;
3196;compareTo(long,long):int;9;1;1;visible;
3197;toString(long):string;2;1;1;visible;
3198;getNoFormatString(long):string;2;1;1;visible;
3199;dumpString(long,int):string;5;1;1;visible;
3200;getNoCleaningDistance(long,long,long):long;15;1;1;visible;
3201;getWithCleaningDistance(long,FileManager,long,long):long;20;1;1;visible;
3202;calcDiff(long,long,long,long):long;5;1;1;visible;
3203;getLogType():LogEntryType;2;1;1;visible;
3204;marshallOutsideWriteLatch():boolean;2;1;1;visible;
3205;countAsObsoleteWhenLogged():boolean;2;1;1;visible;
3206;postLogWork(long):void;1;1;1;visible;
3207;getLogSize():int;14;1;1;visible;
3208;writeToLog(ByteBuffer):void;14;2;3;invisible;1;0;0;
3209;readFromLog(ByteBuffer,byte):void;12;1;1;visible;
3210;dumpLog(StringBuffer,boolean):void;22;2;3;invisible;1;0;0;
3211;logEntryIsTransactional():boolean;2;1;1;visible;
3212;getTransactionId():long;2;1;1;visible;
3213;toString():string;15;2;3;invisible;1;0;0;
3214;getCheckpointStartLsn():long;2;1;1;visible;
3215;getRootLsn():long;2;1;1;visible;
3216;getFirstActiveLsn():long;2;1;1;visible;
3217;getLastNodeId():long;2;1;1;visible;
3218;getLastDbId():int;2;1;1;visible;
3219;getLastTxnId():long;2;1;2;visible;
3220;getId():long;2;1;1;visible;
3221;getLogType():LogEntryType;2;1;1;visible;
3222;marshallOutsideWriteLatch():boolean;2;1;1;visible;
3223;countAsObsoleteWhenLogged():boolean;2;1;1;visible;
3224;postLogWork(long):void;1;1;1;visible;
3225;getLogSize():int;2;1;1;visible;
3226;writeToLog(ByteBuffer):void;4;1;1;visible;
3227;readFromLog(ByteBuffer,byte):void;4;1;1;visible;
3228;dumpLog(StringBuffer,boolean):void;5;1;1;visible;
3229;logEntryIsTransactional():boolean;2;1;1;visible;
3230;getTransactionId():long;2;1;1;visible;
3231;getHighestFlushLevel():int;2;1;1;visible;
3232;setCheckpointId(long):void;2;1;1;visible;
3233;toString():string;4;1;2;visible;
3234;loadStats(StatsConfig,EnvironmentStats):void;13;1;2;visible;
3235;getFirstActiveLsn():long;2;1;1;visible;
3236;setFirstActiveLsn(long):void;2;1;1;visible;
3237;clearEnv():void;2;1;2;visible;
3238;nDeadlockRetries():int;2;1;2;visible;
3239;onWakeup():void;5;1;2;visible;
3240;isRunnable(CheckpointConfig):boolean;51;5;13;invisible;0;0;1;
3241;doCheckpoint(CheckpointConfig,boolean,string):void;107;8;26;invisible;1;0;0;
3242;trace(EnvironmentImpl,string,boolean):void;11;2;5;invisible;1;0;0;
3243;flushUtilizationInfo():void;8;1;2;visible;
3244;flushDirtyNodes(SortedMap,boolean,boolean,boolean,long):void;25;4;4;invisible;0;0;1;
3245;selectDirtyINs(boolean,boolean):SortedMap;52;4;13;invisible;1;0;0;
3246;flushIN(CheckpointReference,Map,int,boolean,boolean,long):void;76;3;3;invisible;0;0;1;
3247;checkParentChildRelationship(SearchResult,int):boolean;27;1;1;visible;
3248;dumpParentChildInfo(SearchResult,IN,long,int,Tree):string;9;1;1;visible;
3249;logTargetAndUpdateParent(IN,IN,int,boolean,long,boolean):boolean;42;4;8;invisible;1;0;0;
3250;doWork(ChildReference):IN;18;2;4;invisible;1;0;0;
3251;getFlushed():boolean;2;1;1;visible;
3252;stillRoot():boolean;2;1;1;visible;
3253;addToDirtyMap(Map,IN):void;10;1;1;visible;
3254;resetPerRunCounters():void;4;1;2;visible;
3255;equals(Object):boolean;5;1;1;visible;
3256;hashCode():int;2;1;1;visible;
3257;recover(boolean):RecoveryInfo;78;7;9;invisible;0;0;1;
3258;findEndOfLog(boolean):void;25;2;2;visible;
3259;findLastCheckpoint():void;45;1;1;visible;
3260;buildTree():void;137;4;32;invisible;1;0;0;
3261;readINsAndTrackIds(long):void;44;3;6;invisible;1;0;0;
3262;readINs(long,boolean,LogEntryType,LogEntryType,LogEntryType,boolean):int;39;1;1;visible;
3263;replayOneIN(INFileReader,DatabaseImpl,boolean):void;35;2;2;invisible;0;0;1;
3264;undoLNs(RecoveryInfo,Set):void;74;8;13;invisible;0;1;0;
3265;redoLNs(RecoveryInfo,Set):void;74;5;9;invisible;0;1;0;
3266;rebuildINList():void;14;1;1;visible;
3267;equals(Object):boolean;6;1;1;visible;
3268;hashCode():int;2;1;1;visible;
3269;toString():string;2;1;1;visible;
3270;replaceOrInsert(DatabaseImpl,IN,long,long,boolean):void;25;3;3;invisible;0;0;1;
3271;printTrackList(List):string;12;1;1;visible;
3272;replayINDelete(DatabaseImpl,long,boolean,byte[],byte[],long):void;31;4;4;invisible;0;0;1;
3273;doWork(ChildReference):IN;3;1;1;visible;
3274;replaceOrInsertRoot(DatabaseImpl,IN,long):void;15;2;2;invisible;0;0;1;
3275;doWork(ChildReference):IN;17;2;3;invisible;1;0;0;
3276;updateDone():boolean;2;1;1;visible;
3277;getInserted():boolean;2;1;1;visible;
3278;getReplaced():boolean;2;1;1;visible;
3279;getOriginalLsn():long;2;1;1;visible;
3280;replaceOrInsertDuplicateRoot(DatabaseImpl,DIN,long):void;40;3;3;invisible;0;0;1;
3281;replaceOrInsertChild(DatabaseImpl,IN,long,long,List,boolean):void;48;3;3;invisible;0;0;1;
3282;redo(DatabaseImpl,TreeLocation,LN,byte[],byte[],long,RecoveryInfo):long;68;4;4;invisible;0;0;1;
3283;redoUtilizationInfo(long,long,long,boolean,LN,TxnNodeId,Set):void;42;2;7;invisible;0;1;0;
3284;undoUtilizationInfo(LN,long,long,boolean,TxnNodeId,Map,Set):void;23;2;6;invisible;0;1;0;
3285;passStartHeader(int):string;2;1;1;visible;
3286;passEndHeader(int,long,long):string;2;1;1;visible;
3287;traceINDeleteReplay(long,long,boolean,boolean,int,boolean):void;13;2;3;visible;
3288;traceAndThrowException(long,string,Exception):void;6;2;3;invisible;1;0;0;
3289;toString():string;25;2;3;invisible;1;0;0;
3290;appendLsn(StringBuffer,string,long):void;3;1;1;visible;
3291;RecoveryException(EnvironmentImpl,string,Throwable);2;1;1;visible;
3292;RecoveryException(EnvironmentImpl,string);2;1;1;visible;
3293;CheckpointEnd(string,long,long,long,long,int,long,long);23;2;4;invisible;1;0;0;
3294;CheckpointEnd();4;1;1;visible;
3295;CheckpointStart(long,string);8;1;1;visible;
3296;CheckpointStart();1;1;1;visible;
3297;Checkpointer(EnvironmentImpl,long,string);15;5;10;invisible;1;0;0;
3298;Checkpointer.RootFlusher(DatabaseImpl,LogManager,long);6;1;1;visible;
3299;Checkpointer.CheckpointReference(DatabaseImpl,long,boolean,boolean,byte[],byte[]);7;1;1;visible;
3300;RecoveryManager(EnvironmentImpl);16;3;4;invisible;1;0;0;
3301;RecoveryManager.TxnNodeId(long,long);3;1;1;visible;
3302;RecoveryManager.RootDeleter(Tree);2;1;1;visible;
3303;RecoveryManager.RootUpdater(Tree,IN,long);4;1;1;visible;
3304;getWakeupPeriod(DbConfigManager):long;14;4;7;invisible;0;1;0;
3305;undo(Level,DatabaseImpl,TreeLocation,LN,byte[],byte[],long,long,boolean,RecoveryInfo,boolean):void;70;5;8;invisible;1;0;0;
3306;insertRecovery(DatabaseImpl,TreeLocation,long):boolean;30;1;1;visible;
3307;trace(Level,DatabaseImpl,string,boolean,Node,long,IN,boolean,boolean,boolean,long,long,int):void;32;2;3;visible;
3308;traceRootDeletion(Level,DatabaseImpl):void;10;2;3;visible;
3309;readEntry(ByteBuffer,int,byte,boolean):void;33;2;2;invisible;0;0;1;
3310;dumpEntry(StringBuffer,boolean):StringBuffer;16;2;6;invisible;1;0;0;
3311;getMainItem():Object;2;1;1;visible;
3312;clone():Object;2;1;1;visible;
3313;isTransactional():boolean;2;1;2;visible;
3314;getTransactionId():long;5;1;2;visible;
3315;getNodeId():long;2;1;1;visible;
3316;getLogType():LogEntryType;2;1;1;visible;
3317;marshallOutsideWriteLatch():boolean;2;1;1;visible;
3318;countAsObsoleteWhenLogged():boolean;2;1;1;visible;
3319;postLogWork(long):void;4;2;2;visible;
3320;getLogSize():int;10;2;3;invisible;1;0;0;
3321;writeToLog(ByteBuffer):void;12;2;2;visible;
3322;getLN():LN;2;1;1;visible;
3323;getDbId():DatabaseId;2;1;1;visible;
3324;getKey():byte[];2;1;1;visible;
3325;getDupKey():byte[];5;1;1;visible;
3326;getAbortLsn():long;2;1;1;visible;
3327;getAbortKnownDeleted():boolean;2;1;1;visible;
3328;getTxnId():Long;5;1;2;visible;
3329;getUserTxn():Txn;5;1;2;visible;
3330;readEntry(ByteBuffer,int,byte,boolean):void;6;1;1;visible;
3331;dumpEntry(StringBuffer,boolean):StringBuffer;3;1;1;visible;
3332;getMainItem():Object;2;1;1;visible;
3333;clone():Object;2;1;1;visible;
3334;isTransactional():boolean;2;1;1;visible;
3335;getTransactionId():long;2;1;1;visible;
3336;getNewInstance():LogEntry;5;1;1;visible;
3337;readEntry(ByteBuffer,int,byte,boolean):void;37;1;1;visible;
3338;getObsoleteLsn():long;2;1;1;visible;
3339;dumpEntry(StringBuffer,boolean):StringBuffer;4;1;1;visible;
3340;getMainItem():Object;2;1;1;visible;
3341;clone():Object;2;1;1;visible;
3342;isTransactional():boolean;2;1;1;visible;
3343;getTransactionId():long;2;1;1;visible;
3344;getLogType():LogEntryType;2;1;1;visible;
3345;marshallOutsideWriteLatch():boolean;2;1;1;visible;
3346;countAsObsoleteWhenLogged():boolean;2;1;1;visible;
3347;postLogWork(long):void;1;1;1;visible;
3348;getLogSize():int;2;1;1;visible;
3349;writeToLog(ByteBuffer):void;4;1;1;visible;
3350;getIN(EnvironmentImpl):IN;2;1;1;visible;
3351;getNodeId():long;2;1;1;visible;
3352;getDbId():DatabaseId;2;1;1;visible;
3353;getLsnOfIN(long):long;2;1;1;visible;
3354;readEntry(ByteBuffer,int,byte,boolean):void;8;1;1;visible;
3355;dumpEntry(StringBuffer,boolean):StringBuffer;4;1;1;visible;
3356;getLogSize():int;2;1;1;visible;
3357;writeToLog(ByteBuffer):void;3;1;1;visible;
3358;getDupKey():byte[];2;1;1;visible;
3359;getIN(EnvironmentImpl):IN;3;1;1;visible;
3360;getDbId():DatabaseId;3;1;1;visible;
3361;getLsnOfIN(long):long;3;1;1;visible;
3362;LNLogEntry(Class,boolean);4;2;2;visible;
3363;LNLogEntry(LogEntryType,LN,DatabaseId,byte[],long,boolean,Txn);12;2;3;visible;
3364;SingleItemLogEntry(Class);2;1;1;visible;
3365;INLogEntry(Class);2;1;1;visible;
3366;INLogEntry(IN);6;1;1;visible;
3367;DeletedDupLNLogEntry(boolean);2;1;1;visible;
3368;DeletedDupLNLogEntry(LogEntryType,LN,DatabaseId,byte[],byte[],long,boolean,Txn);3;2;3;invisible;0;1;0;
3369;BINDeltaLogEntry(Class);2;1;1;visible;
