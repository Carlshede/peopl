package de.slisson.mps.tables.runtime.gridmodel;

/*Generated by MPS */

import junit.framework.TestCase;
import junit.framework.Assert;

public class TableBlockTest_Test extends TestCase {
  private Grid main;
  private HeaderReference in1;
  private HeaderReference in2;
  private HeaderReference out1;
  private GridLeaf in1val;
  private GridLeaf in2val;
  private GridLeaf out1val;
  public void test_sizeX() throws Exception {
    Assert.assertEquals(3, main.getSizeX());
  }
  public void test_sizeY() throws Exception {
    Assert.assertEquals(1, main.getSizeY());
  }
  public void setUp() {
    main = new Grid();
    in1 = new StringHeaderReference("in1");
    in2 = new StringHeaderReference("in2");
    out1 = new StringHeaderReference("out1");
    in1val = new GridLeaf("in1val");
    in2val = new GridLeaf("in2val");
    out1val = new GridLeaf("out1val");

    main.setColumnHeader(0, 0, in1);
    main.setColumnHeader(1, 0, in2);
    main.setColumnHeader(2, 0, out1);

    Grid row1in1 = new Grid();
    Grid row1in2 = new Grid();
    row1in1.setElement(0, 0, in1val);
    row1in2.setElement(0, 0, in2val);

    Grid row1in = new Grid();
    row1in.setElement(0, 0, row1in1);
    row1in.setElement(1, 0, row1in2);
    row1in.setColumnHeader(0, 0, in1);
    row1in.setColumnHeader(1, 0, in2);

    Grid row1out1 = new Grid();
    row1out1.setElement(0, 0, out1val);

    Grid row1out = new Grid();
    row1out.setElement(0, 0, row1out1);

    Grid row1 = new Grid();
    row1.setElement(0, 0, row1in);
    row1.setElement(1, 0, row1out);
    row1.flattenOneLevel();
    row1.setSpanX(3);

    main.setElement(0, 0, row1);

    System.out.println("before flatten: " + main);
    main.flatten();
    System.out.println("after flatten: " + main);
  }
}
