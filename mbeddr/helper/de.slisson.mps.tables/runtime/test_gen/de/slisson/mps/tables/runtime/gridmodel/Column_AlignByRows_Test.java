package de.slisson.mps.tables.runtime.gridmodel;

/*Generated by MPS */

import junit.framework.TestCase;
import junit.framework.Assert;

public class Column_AlignByRows_Test extends TestCase {
  private Grid gridMain;
  private Grid row1;
  private Grid row2;
  private GridLeaf leaf1A;
  private GridLeaf leaf1B;
  private GridLeaf leaf1C;
  private GridLeaf leaf2A;
  private GridLeaf leaf2B;
  private GridLeaf leaf2C;
  private HeaderReference headerA;
  private HeaderReference headerB;
  private HeaderReference headerC;
  public void test_sizeX() throws Exception {
    Assert.assertEquals(3, gridMain.getSizeX());
  }
  public void test_sizeY() throws Exception {
    Assert.assertEquals(2, gridMain.getSizeY());
  }
  public void test_elements_order() throws Exception {
    Assert.assertSame(leaf1C, gridMain.getElement(0, 0));
    Assert.assertSame(leaf1A, gridMain.getElement(1, 0));
    Assert.assertSame(leaf1B, gridMain.getElement(2, 0));
    Assert.assertSame(leaf2C, gridMain.getElement(0, 1));
    Assert.assertSame(leaf2A, gridMain.getElement(1, 1));
    Assert.assertSame(leaf2B, gridMain.getElement(2, 1));
  }
  public void test_header_order() throws Exception {
    Assert.assertEquals(headerC, gridMain.getColumnHeaders().getElement(0, 0));
    Assert.assertEquals(headerA, gridMain.getColumnHeaders().getElement(1, 0));
    Assert.assertEquals(headerB, gridMain.getColumnHeaders().getElement(2, 0));
  }
  public void setUp() {
    gridMain = new Grid();
    row1 = new Grid();
    row2 = new Grid();
    leaf1A = new GridLeaf("1A");
    leaf1B = new GridLeaf("1B");
    leaf1C = new GridLeaf("1C");
    leaf2A = new GridLeaf("2A");
    leaf2B = new GridLeaf("2B");
    leaf2C = new GridLeaf("2C");
    headerA = new StringHeaderReference("ColumnA");
    headerB = new StringHeaderReference("ColumnB");
    headerC = new StringHeaderReference("ColumnC");

    row1.setElement(0, 0, leaf1C);
    row1.setElement(1, 0, leaf1A);
    row1.setElement(2, 0, leaf1B);
    row1.setColumnHeader(0, 0, headerC);
    row1.setColumnHeader(1, 0, headerA);
    row1.setColumnHeader(2, 0, headerB);

    row2.setElement(0, 0, leaf2A);
    row2.setElement(1, 0, leaf2B);
    row2.setElement(2, 0, leaf2C);
    row2.setColumnHeader(0, 0, headerA);
    row2.setColumnHeader(1, 0, headerB);
    row2.setColumnHeader(2, 0, headerC);

    gridMain.setElement(0, 0, row1);
    gridMain.setElement(0, 1, row2);

    gridMain.flatten();

  }
}
