package de.slisson.mps.tables.runtime.gridmodel;

/*Generated by MPS */

import junit.framework.TestCase;
import junit.framework.Assert;

public class Grid_AutospanOnFlattening_Test extends TestCase {
  private Grid gridMain;
  private Grid gridA;
  private GridLeaf leafA;
  private GridLeaf leafB;
  private GridLeaf leafC;
  private GridLeaf leafD;
  private GridLeaf leafE;
  public void test_element_position() throws Exception {
    Assert.assertSame(leafA, gridMain.getElement(1, 0));
    Assert.assertSame(leafB, gridMain.getElement(2, 0));
    Assert.assertSame(leafC, gridMain.getElement(3, 0));
    Assert.assertSame(leafD, gridMain.getElement(1, 1));
    Assert.assertSame(leafE, gridMain.getElement(3, 1));
  }
  public void test_auto_spanned_element() throws Exception {
    Assert.assertEquals(2, leafD.getSpanX());
    Assert.assertEquals(SpannedPosition.class, gridMain.getElement(2, 1).getClass());
    Assert.assertSame(leafD, ((SpannedPosition) gridMain.getElement(2, 1)).getSpanningElement());
  }
  public void setUp() {
    gridMain = new Grid();
    gridA = new Grid();
    leafA = new GridLeaf("leafA");
    leafB = new GridLeaf("leafB");
    leafC = new GridLeaf("leafC");
    leafD = new GridLeaf("leafD");
    leafE = new GridLeaf("leafE");

    gridA.setElement(0, 0, leafA);
    gridA.setElement(1, 0, leafB);
    gridMain.setElement(1, 0, gridA);
    gridMain.setElement(2, 0, leafC);
    gridMain.setElement(1, 1, leafD);
    gridMain.setElement(2, 1, leafE);
    gridMain.flatten();
  }
}
