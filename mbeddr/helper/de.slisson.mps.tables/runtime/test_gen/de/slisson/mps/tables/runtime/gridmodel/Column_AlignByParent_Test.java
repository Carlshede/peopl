package de.slisson.mps.tables.runtime.gridmodel;

/*Generated by MPS */

import junit.framework.TestCase;
import junit.framework.Assert;

public class Column_AlignByParent_Test extends TestCase {
  private Grid gridMain;
  private Grid row1;
  private GridLeaf leafA;
  private GridLeaf leafB;
  private GridLeaf leafC;
  private HeaderReference headerA;
  private HeaderReference headerB;
  private HeaderReference headerC;
  public void test_sizeX() throws Exception {
    Assert.assertEquals(3, gridMain.getSizeX());
  }
  public void test_sizeY() throws Exception {
    Assert.assertEquals(1, gridMain.getSizeY());
  }
  public void test_elements_order() throws Exception {
    Assert.assertSame(leafC, gridMain.getElement(0, 0));
    Assert.assertSame(leafA, gridMain.getElement(1, 0));
    Assert.assertSame(leafB, gridMain.getElement(2, 0));
  }
  public void test_header_order() throws Exception {
    Assert.assertEquals(headerC, gridMain.getColumnHeaders().getElement(0, 0));
    Assert.assertEquals(headerA, gridMain.getColumnHeaders().getElement(1, 0));
    Assert.assertEquals(headerB, gridMain.getColumnHeaders().getElement(2, 0));
  }
  public void setUp() {
    gridMain = new Grid();
    row1 = new Grid();
    leafA = new GridLeaf("A");
    leafB = new GridLeaf("B");
    leafC = new GridLeaf("C");
    headerA = new StringHeaderReference("ColumnA");
    headerB = new StringHeaderReference("ColumnB");
    headerC = new StringHeaderReference("ColumnC");

    row1.setElement(0, 0, leafA);
    row1.setElement(1, 0, leafB);
    row1.setElement(2, 0, leafC);
    row1.setColumnHeader(0, 0, headerA);
    row1.setColumnHeader(1, 0, headerB);
    row1.setColumnHeader(2, 0, headerC);
    row1.setSpanX(3);

    gridMain.setElement(0, 0, row1);
    gridMain.setColumnHeader(0, 0, headerC);
    gridMain.setColumnHeader(1, 0, headerA);
    gridMain.setColumnHeader(2, 0, headerB);

    gridMain.flatten();
  }
}
