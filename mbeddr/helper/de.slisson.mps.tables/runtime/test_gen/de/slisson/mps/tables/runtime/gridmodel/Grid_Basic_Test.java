package de.slisson.mps.tables.runtime.gridmodel;

/*Generated by MPS */

import junit.framework.TestCase;
import junit.framework.Assert;

public class Grid_Basic_Test extends TestCase {
  private Grid grid;
  public void test_size() throws Exception {
    Assert.assertEquals(1, grid.getSizeX());
    Assert.assertEquals(1, grid.getSizeY());
  }
  public void test_element_is_set() throws Exception {
    Assert.assertNotNull(grid.getElement(0, 0));
  }
  public void test_invalid_coordinates_read() throws Exception {
    try {
      grid.getElement(1, 0);
      Assert.fail();
    } catch (Exception e) {
      // expected exception 
    }
  }
  public void test_auto_size() throws Exception {
    grid.setElement(1, 2, new GridLeaf("A"));
    Assert.assertEquals(2, grid.getSizeX());
    Assert.assertEquals(3, grid.getSizeY());
  }
  public void test_default_values_on_autoexpand() throws Exception {
    Assert.assertEquals(1, grid.getSizeX());
    Assert.assertEquals(1, grid.getSizeY());
    grid.setElement(1, 1, new GridLeaf("A"));
    Assert.assertNotNull(grid.getElement(0, 0));
    Assert.assertNotNull(grid.getElement(1, 1));
    Assert.assertNotNull(grid.getElement(1, 0));
    Assert.assertNotNull(grid.getElement(0, 1));
    Assert.assertEquals(2, grid.getSizeX());
    Assert.assertEquals(2, grid.getSizeY());
  }
  public void test_values_dont_move_on_autoexpand() throws Exception {
    grid.setSize(2, 2);
    IGridElement e00 = grid.getElement(0, 0);
    IGridElement e01 = grid.getElement(0, 1);
    IGridElement e10 = grid.getElement(1, 0);
    IGridElement e11 = grid.getElement(1, 1);

    grid.setElement(2, 2, new GridLeaf("A"));

    Assert.assertSame(e00, grid.getElement(0, 0));
    Assert.assertSame(e01, grid.getElement(0, 1));
    Assert.assertSame(e10, grid.getElement(1, 0));
    Assert.assertSame(e11, grid.getElement(1, 1));
  }
  public void setUp() {
    grid = new Grid();
    grid.setElement(0, 0, new GridLeaf("A"));
  }
  public void tearDown() {
    grid = null;
  }
}
